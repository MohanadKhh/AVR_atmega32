
LED_Animation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000694e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000112  00800060  0000694e  000069c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00004410  00000000  00000000  00006ad4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d79  00000000  00000000  0000aee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001a0  00000000  00000000  0000bc5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001f5  00000000  00000000  0000bdfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002216  00000000  00000000  0000bff2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012b8  00000000  00000000  0000e208  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001136  00000000  00000000  0000f4c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  000105f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002d2  00000000  00000000  000107b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000095a  00000000  00000000  00010a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000113e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e4       	ldi	r30, 0x4E	; 78
      68:	f9 e6       	ldi	r31, 0x69	; 105
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 37       	cpi	r26, 0x72	; 114
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 37 34 	call	0x686e	; 0x686e <main>
      7a:	0c 94 a5 34 	jmp	0x694a	; 0x694a <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 6e 34 	jmp	0x68dc	; 0x68dc <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 8a 34 	jmp	0x6914	; 0x6914 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 7a 34 	jmp	0x68f4	; 0x68f4 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 96 34 	jmp	0x692c	; 0x692c <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 7a 34 	jmp	0x68f4	; 0x68f4 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 96 34 	jmp	0x692c	; 0x692c <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 6e 34 	jmp	0x68dc	; 0x68dc <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 8a 34 	jmp	0x6914	; 0x6914 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 7a 34 	jmp	0x68f4	; 0x68f4 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 96 34 	jmp	0x692c	; 0x692c <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 7a 34 	jmp	0x68f4	; 0x68f4 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 96 34 	jmp	0x692c	; 0x692c <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 7a 34 	jmp	0x68f4	; 0x68f4 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 96 34 	jmp	0x692c	; 0x692c <__epilogue_restores__+0x18>

00000742 <__floatsisf>:
     742:	a8 e0       	ldi	r26, 0x08	; 8
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 77 34 	jmp	0x68ee	; 0x68ee <__prologue_saves__+0x12>
     74e:	9b 01       	movw	r18, r22
     750:	ac 01       	movw	r20, r24
     752:	83 e0       	ldi	r24, 0x03	; 3
     754:	89 83       	std	Y+1, r24	; 0x01
     756:	da 01       	movw	r26, r20
     758:	c9 01       	movw	r24, r18
     75a:	88 27       	eor	r24, r24
     75c:	b7 fd       	sbrc	r27, 7
     75e:	83 95       	inc	r24
     760:	99 27       	eor	r25, r25
     762:	aa 27       	eor	r26, r26
     764:	bb 27       	eor	r27, r27
     766:	b8 2e       	mov	r11, r24
     768:	21 15       	cp	r18, r1
     76a:	31 05       	cpc	r19, r1
     76c:	41 05       	cpc	r20, r1
     76e:	51 05       	cpc	r21, r1
     770:	19 f4       	brne	.+6      	; 0x778 <__floatsisf+0x36>
     772:	82 e0       	ldi	r24, 0x02	; 2
     774:	89 83       	std	Y+1, r24	; 0x01
     776:	3a c0       	rjmp	.+116    	; 0x7ec <__floatsisf+0xaa>
     778:	88 23       	and	r24, r24
     77a:	a9 f0       	breq	.+42     	; 0x7a6 <__floatsisf+0x64>
     77c:	20 30       	cpi	r18, 0x00	; 0
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	38 07       	cpc	r19, r24
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	48 07       	cpc	r20, r24
     786:	80 e8       	ldi	r24, 0x80	; 128
     788:	58 07       	cpc	r21, r24
     78a:	29 f4       	brne	.+10     	; 0x796 <__floatsisf+0x54>
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	9f ec       	ldi	r25, 0xCF	; 207
     794:	30 c0       	rjmp	.+96     	; 0x7f6 <__floatsisf+0xb4>
     796:	ee 24       	eor	r14, r14
     798:	ff 24       	eor	r15, r15
     79a:	87 01       	movw	r16, r14
     79c:	e2 1a       	sub	r14, r18
     79e:	f3 0a       	sbc	r15, r19
     7a0:	04 0b       	sbc	r16, r20
     7a2:	15 0b       	sbc	r17, r21
     7a4:	02 c0       	rjmp	.+4      	; 0x7aa <__floatsisf+0x68>
     7a6:	79 01       	movw	r14, r18
     7a8:	8a 01       	movw	r16, r20
     7aa:	8e e1       	ldi	r24, 0x1E	; 30
     7ac:	c8 2e       	mov	r12, r24
     7ae:	d1 2c       	mov	r13, r1
     7b0:	dc 82       	std	Y+4, r13	; 0x04
     7b2:	cb 82       	std	Y+3, r12	; 0x03
     7b4:	ed 82       	std	Y+5, r14	; 0x05
     7b6:	fe 82       	std	Y+6, r15	; 0x06
     7b8:	0f 83       	std	Y+7, r16	; 0x07
     7ba:	18 87       	std	Y+8, r17	; 0x08
     7bc:	c8 01       	movw	r24, r16
     7be:	b7 01       	movw	r22, r14
     7c0:	0e 94 cc 04 	call	0x998	; 0x998 <__clzsi2>
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	18 16       	cp	r1, r24
     7c8:	19 06       	cpc	r1, r25
     7ca:	84 f4       	brge	.+32     	; 0x7ec <__floatsisf+0xaa>
     7cc:	08 2e       	mov	r0, r24
     7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <__floatsisf+0x96>
     7d0:	ee 0c       	add	r14, r14
     7d2:	ff 1c       	adc	r15, r15
     7d4:	00 1f       	adc	r16, r16
     7d6:	11 1f       	adc	r17, r17
     7d8:	0a 94       	dec	r0
     7da:	d2 f7       	brpl	.-12     	; 0x7d0 <__floatsisf+0x8e>
     7dc:	ed 82       	std	Y+5, r14	; 0x05
     7de:	fe 82       	std	Y+6, r15	; 0x06
     7e0:	0f 83       	std	Y+7, r16	; 0x07
     7e2:	18 87       	std	Y+8, r17	; 0x08
     7e4:	c8 1a       	sub	r12, r24
     7e6:	d9 0a       	sbc	r13, r25
     7e8:	dc 82       	std	Y+4, r13	; 0x04
     7ea:	cb 82       	std	Y+3, r12	; 0x03
     7ec:	ba 82       	std	Y+2, r11	; 0x02
     7ee:	ce 01       	movw	r24, r28
     7f0:	01 96       	adiw	r24, 0x01	; 1
     7f2:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     7f6:	28 96       	adiw	r28, 0x08	; 8
     7f8:	e9 e0       	ldi	r30, 0x09	; 9
     7fa:	0c 94 93 34 	jmp	0x6926	; 0x6926 <__epilogue_restores__+0x12>

000007fe <__fixsfsi>:
     7fe:	ac e0       	ldi	r26, 0x0C	; 12
     800:	b0 e0       	ldi	r27, 0x00	; 0
     802:	e5 e0       	ldi	r30, 0x05	; 5
     804:	f4 e0       	ldi	r31, 0x04	; 4
     806:	0c 94 7e 34 	jmp	0x68fc	; 0x68fc <__prologue_saves__+0x20>
     80a:	69 83       	std	Y+1, r22	; 0x01
     80c:	7a 83       	std	Y+2, r23	; 0x02
     80e:	8b 83       	std	Y+3, r24	; 0x03
     810:	9c 83       	std	Y+4, r25	; 0x04
     812:	ce 01       	movw	r24, r28
     814:	01 96       	adiw	r24, 0x01	; 1
     816:	be 01       	movw	r22, r28
     818:	6b 5f       	subi	r22, 0xFB	; 251
     81a:	7f 4f       	sbci	r23, 0xFF	; 255
     81c:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     820:	8d 81       	ldd	r24, Y+5	; 0x05
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	61 f1       	breq	.+88     	; 0x87e <__stack+0x1f>
     826:	82 30       	cpi	r24, 0x02	; 2
     828:	50 f1       	brcs	.+84     	; 0x87e <__stack+0x1f>
     82a:	84 30       	cpi	r24, 0x04	; 4
     82c:	21 f4       	brne	.+8      	; 0x836 <__fixsfsi+0x38>
     82e:	8e 81       	ldd	r24, Y+6	; 0x06
     830:	88 23       	and	r24, r24
     832:	51 f1       	breq	.+84     	; 0x888 <__stack+0x29>
     834:	2e c0       	rjmp	.+92     	; 0x892 <__stack+0x33>
     836:	2f 81       	ldd	r18, Y+7	; 0x07
     838:	38 85       	ldd	r19, Y+8	; 0x08
     83a:	37 fd       	sbrc	r19, 7
     83c:	20 c0       	rjmp	.+64     	; 0x87e <__stack+0x1f>
     83e:	6e 81       	ldd	r22, Y+6	; 0x06
     840:	2f 31       	cpi	r18, 0x1F	; 31
     842:	31 05       	cpc	r19, r1
     844:	1c f0       	brlt	.+6      	; 0x84c <__fixsfsi+0x4e>
     846:	66 23       	and	r22, r22
     848:	f9 f0       	breq	.+62     	; 0x888 <__stack+0x29>
     84a:	23 c0       	rjmp	.+70     	; 0x892 <__stack+0x33>
     84c:	8e e1       	ldi	r24, 0x1E	; 30
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	82 1b       	sub	r24, r18
     852:	93 0b       	sbc	r25, r19
     854:	29 85       	ldd	r18, Y+9	; 0x09
     856:	3a 85       	ldd	r19, Y+10	; 0x0a
     858:	4b 85       	ldd	r20, Y+11	; 0x0b
     85a:	5c 85       	ldd	r21, Y+12	; 0x0c
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	56 95       	lsr	r21
     860:	47 95       	ror	r20
     862:	37 95       	ror	r19
     864:	27 95       	ror	r18
     866:	8a 95       	dec	r24
     868:	d2 f7       	brpl	.-12     	; 0x85e <__fixsfsi+0x60>
     86a:	66 23       	and	r22, r22
     86c:	b1 f0       	breq	.+44     	; 0x89a <__stack+0x3b>
     86e:	50 95       	com	r21
     870:	40 95       	com	r20
     872:	30 95       	com	r19
     874:	21 95       	neg	r18
     876:	3f 4f       	sbci	r19, 0xFF	; 255
     878:	4f 4f       	sbci	r20, 0xFF	; 255
     87a:	5f 4f       	sbci	r21, 0xFF	; 255
     87c:	0e c0       	rjmp	.+28     	; 0x89a <__stack+0x3b>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e0       	ldi	r20, 0x00	; 0
     884:	50 e0       	ldi	r21, 0x00	; 0
     886:	09 c0       	rjmp	.+18     	; 0x89a <__stack+0x3b>
     888:	2f ef       	ldi	r18, 0xFF	; 255
     88a:	3f ef       	ldi	r19, 0xFF	; 255
     88c:	4f ef       	ldi	r20, 0xFF	; 255
     88e:	5f e7       	ldi	r21, 0x7F	; 127
     890:	04 c0       	rjmp	.+8      	; 0x89a <__stack+0x3b>
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	50 e8       	ldi	r21, 0x80	; 128
     89a:	b9 01       	movw	r22, r18
     89c:	ca 01       	movw	r24, r20
     89e:	2c 96       	adiw	r28, 0x0c	; 12
     8a0:	e2 e0       	ldi	r30, 0x02	; 2
     8a2:	0c 94 9a 34 	jmp	0x6934	; 0x6934 <__epilogue_restores__+0x20>

000008a6 <__floatunsisf>:
     8a6:	a8 e0       	ldi	r26, 0x08	; 8
     8a8:	b0 e0       	ldi	r27, 0x00	; 0
     8aa:	e9 e5       	ldi	r30, 0x59	; 89
     8ac:	f4 e0       	ldi	r31, 0x04	; 4
     8ae:	0c 94 76 34 	jmp	0x68ec	; 0x68ec <__prologue_saves__+0x10>
     8b2:	7b 01       	movw	r14, r22
     8b4:	8c 01       	movw	r16, r24
     8b6:	61 15       	cp	r22, r1
     8b8:	71 05       	cpc	r23, r1
     8ba:	81 05       	cpc	r24, r1
     8bc:	91 05       	cpc	r25, r1
     8be:	19 f4       	brne	.+6      	; 0x8c6 <__floatunsisf+0x20>
     8c0:	82 e0       	ldi	r24, 0x02	; 2
     8c2:	89 83       	std	Y+1, r24	; 0x01
     8c4:	60 c0       	rjmp	.+192    	; 0x986 <__floatunsisf+0xe0>
     8c6:	83 e0       	ldi	r24, 0x03	; 3
     8c8:	89 83       	std	Y+1, r24	; 0x01
     8ca:	8e e1       	ldi	r24, 0x1E	; 30
     8cc:	c8 2e       	mov	r12, r24
     8ce:	d1 2c       	mov	r13, r1
     8d0:	dc 82       	std	Y+4, r13	; 0x04
     8d2:	cb 82       	std	Y+3, r12	; 0x03
     8d4:	ed 82       	std	Y+5, r14	; 0x05
     8d6:	fe 82       	std	Y+6, r15	; 0x06
     8d8:	0f 83       	std	Y+7, r16	; 0x07
     8da:	18 87       	std	Y+8, r17	; 0x08
     8dc:	c8 01       	movw	r24, r16
     8de:	b7 01       	movw	r22, r14
     8e0:	0e 94 cc 04 	call	0x998	; 0x998 <__clzsi2>
     8e4:	fc 01       	movw	r30, r24
     8e6:	31 97       	sbiw	r30, 0x01	; 1
     8e8:	f7 ff       	sbrs	r31, 7
     8ea:	3b c0       	rjmp	.+118    	; 0x962 <__floatunsisf+0xbc>
     8ec:	22 27       	eor	r18, r18
     8ee:	33 27       	eor	r19, r19
     8f0:	2e 1b       	sub	r18, r30
     8f2:	3f 0b       	sbc	r19, r31
     8f4:	57 01       	movw	r10, r14
     8f6:	68 01       	movw	r12, r16
     8f8:	02 2e       	mov	r0, r18
     8fa:	04 c0       	rjmp	.+8      	; 0x904 <__floatunsisf+0x5e>
     8fc:	d6 94       	lsr	r13
     8fe:	c7 94       	ror	r12
     900:	b7 94       	ror	r11
     902:	a7 94       	ror	r10
     904:	0a 94       	dec	r0
     906:	d2 f7       	brpl	.-12     	; 0x8fc <__floatunsisf+0x56>
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	50 e0       	ldi	r21, 0x00	; 0
     90c:	60 e0       	ldi	r22, 0x00	; 0
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	81 e0       	ldi	r24, 0x01	; 1
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	a0 e0       	ldi	r26, 0x00	; 0
     916:	b0 e0       	ldi	r27, 0x00	; 0
     918:	04 c0       	rjmp	.+8      	; 0x922 <__floatunsisf+0x7c>
     91a:	88 0f       	add	r24, r24
     91c:	99 1f       	adc	r25, r25
     91e:	aa 1f       	adc	r26, r26
     920:	bb 1f       	adc	r27, r27
     922:	2a 95       	dec	r18
     924:	d2 f7       	brpl	.-12     	; 0x91a <__floatunsisf+0x74>
     926:	01 97       	sbiw	r24, 0x01	; 1
     928:	a1 09       	sbc	r26, r1
     92a:	b1 09       	sbc	r27, r1
     92c:	8e 21       	and	r24, r14
     92e:	9f 21       	and	r25, r15
     930:	a0 23       	and	r26, r16
     932:	b1 23       	and	r27, r17
     934:	00 97       	sbiw	r24, 0x00	; 0
     936:	a1 05       	cpc	r26, r1
     938:	b1 05       	cpc	r27, r1
     93a:	21 f0       	breq	.+8      	; 0x944 <__floatunsisf+0x9e>
     93c:	41 e0       	ldi	r20, 0x01	; 1
     93e:	50 e0       	ldi	r21, 0x00	; 0
     940:	60 e0       	ldi	r22, 0x00	; 0
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	4a 29       	or	r20, r10
     946:	5b 29       	or	r21, r11
     948:	6c 29       	or	r22, r12
     94a:	7d 29       	or	r23, r13
     94c:	4d 83       	std	Y+5, r20	; 0x05
     94e:	5e 83       	std	Y+6, r21	; 0x06
     950:	6f 83       	std	Y+7, r22	; 0x07
     952:	78 87       	std	Y+8, r23	; 0x08
     954:	8e e1       	ldi	r24, 0x1E	; 30
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	8e 1b       	sub	r24, r30
     95a:	9f 0b       	sbc	r25, r31
     95c:	9c 83       	std	Y+4, r25	; 0x04
     95e:	8b 83       	std	Y+3, r24	; 0x03
     960:	12 c0       	rjmp	.+36     	; 0x986 <__floatunsisf+0xe0>
     962:	30 97       	sbiw	r30, 0x00	; 0
     964:	81 f0       	breq	.+32     	; 0x986 <__floatunsisf+0xe0>
     966:	0e 2e       	mov	r0, r30
     968:	04 c0       	rjmp	.+8      	; 0x972 <__floatunsisf+0xcc>
     96a:	ee 0c       	add	r14, r14
     96c:	ff 1c       	adc	r15, r15
     96e:	00 1f       	adc	r16, r16
     970:	11 1f       	adc	r17, r17
     972:	0a 94       	dec	r0
     974:	d2 f7       	brpl	.-12     	; 0x96a <__floatunsisf+0xc4>
     976:	ed 82       	std	Y+5, r14	; 0x05
     978:	fe 82       	std	Y+6, r15	; 0x06
     97a:	0f 83       	std	Y+7, r16	; 0x07
     97c:	18 87       	std	Y+8, r17	; 0x08
     97e:	ce 1a       	sub	r12, r30
     980:	df 0a       	sbc	r13, r31
     982:	dc 82       	std	Y+4, r13	; 0x04
     984:	cb 82       	std	Y+3, r12	; 0x03
     986:	1a 82       	std	Y+2, r1	; 0x02
     988:	ce 01       	movw	r24, r28
     98a:	01 96       	adiw	r24, 0x01	; 1
     98c:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     990:	28 96       	adiw	r28, 0x08	; 8
     992:	ea e0       	ldi	r30, 0x0A	; 10
     994:	0c 94 92 34 	jmp	0x6924	; 0x6924 <__epilogue_restores__+0x10>

00000998 <__clzsi2>:
     998:	ef 92       	push	r14
     99a:	ff 92       	push	r15
     99c:	0f 93       	push	r16
     99e:	1f 93       	push	r17
     9a0:	7b 01       	movw	r14, r22
     9a2:	8c 01       	movw	r16, r24
     9a4:	80 e0       	ldi	r24, 0x00	; 0
     9a6:	e8 16       	cp	r14, r24
     9a8:	80 e0       	ldi	r24, 0x00	; 0
     9aa:	f8 06       	cpc	r15, r24
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	08 07       	cpc	r16, r24
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	18 07       	cpc	r17, r24
     9b4:	88 f4       	brcc	.+34     	; 0x9d8 <__clzsi2+0x40>
     9b6:	8f ef       	ldi	r24, 0xFF	; 255
     9b8:	e8 16       	cp	r14, r24
     9ba:	f1 04       	cpc	r15, r1
     9bc:	01 05       	cpc	r16, r1
     9be:	11 05       	cpc	r17, r1
     9c0:	31 f0       	breq	.+12     	; 0x9ce <__clzsi2+0x36>
     9c2:	28 f0       	brcs	.+10     	; 0x9ce <__clzsi2+0x36>
     9c4:	88 e0       	ldi	r24, 0x08	; 8
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	a0 e0       	ldi	r26, 0x00	; 0
     9ca:	b0 e0       	ldi	r27, 0x00	; 0
     9cc:	17 c0       	rjmp	.+46     	; 0x9fc <__clzsi2+0x64>
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	a0 e0       	ldi	r26, 0x00	; 0
     9d4:	b0 e0       	ldi	r27, 0x00	; 0
     9d6:	12 c0       	rjmp	.+36     	; 0x9fc <__clzsi2+0x64>
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	e8 16       	cp	r14, r24
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	f8 06       	cpc	r15, r24
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	08 07       	cpc	r16, r24
     9e4:	81 e0       	ldi	r24, 0x01	; 1
     9e6:	18 07       	cpc	r17, r24
     9e8:	28 f0       	brcs	.+10     	; 0x9f4 <__clzsi2+0x5c>
     9ea:	88 e1       	ldi	r24, 0x18	; 24
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <__clzsi2+0x64>
     9f4:	80 e1       	ldi	r24, 0x10	; 16
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	a0 e0       	ldi	r26, 0x00	; 0
     9fa:	b0 e0       	ldi	r27, 0x00	; 0
     9fc:	20 e2       	ldi	r18, 0x20	; 32
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	40 e0       	ldi	r20, 0x00	; 0
     a02:	50 e0       	ldi	r21, 0x00	; 0
     a04:	28 1b       	sub	r18, r24
     a06:	39 0b       	sbc	r19, r25
     a08:	4a 0b       	sbc	r20, r26
     a0a:	5b 0b       	sbc	r21, r27
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__clzsi2+0x7e>
     a0e:	16 95       	lsr	r17
     a10:	07 95       	ror	r16
     a12:	f7 94       	ror	r15
     a14:	e7 94       	ror	r14
     a16:	8a 95       	dec	r24
     a18:	d2 f7       	brpl	.-12     	; 0xa0e <__clzsi2+0x76>
     a1a:	f7 01       	movw	r30, r14
     a1c:	e8 59       	subi	r30, 0x98	; 152
     a1e:	ff 4f       	sbci	r31, 0xFF	; 255
     a20:	80 81       	ld	r24, Z
     a22:	28 1b       	sub	r18, r24
     a24:	31 09       	sbc	r19, r1
     a26:	41 09       	sbc	r20, r1
     a28:	51 09       	sbc	r21, r1
     a2a:	c9 01       	movw	r24, r18
     a2c:	1f 91       	pop	r17
     a2e:	0f 91       	pop	r16
     a30:	ff 90       	pop	r15
     a32:	ef 90       	pop	r14
     a34:	08 95       	ret

00000a36 <__pack_f>:
     a36:	df 92       	push	r13
     a38:	ef 92       	push	r14
     a3a:	ff 92       	push	r15
     a3c:	0f 93       	push	r16
     a3e:	1f 93       	push	r17
     a40:	fc 01       	movw	r30, r24
     a42:	e4 80       	ldd	r14, Z+4	; 0x04
     a44:	f5 80       	ldd	r15, Z+5	; 0x05
     a46:	06 81       	ldd	r16, Z+6	; 0x06
     a48:	17 81       	ldd	r17, Z+7	; 0x07
     a4a:	d1 80       	ldd	r13, Z+1	; 0x01
     a4c:	80 81       	ld	r24, Z
     a4e:	82 30       	cpi	r24, 0x02	; 2
     a50:	48 f4       	brcc	.+18     	; 0xa64 <__pack_f+0x2e>
     a52:	80 e0       	ldi	r24, 0x00	; 0
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	a0 e1       	ldi	r26, 0x10	; 16
     a58:	b0 e0       	ldi	r27, 0x00	; 0
     a5a:	e8 2a       	or	r14, r24
     a5c:	f9 2a       	or	r15, r25
     a5e:	0a 2b       	or	r16, r26
     a60:	1b 2b       	or	r17, r27
     a62:	a5 c0       	rjmp	.+330    	; 0xbae <__pack_f+0x178>
     a64:	84 30       	cpi	r24, 0x04	; 4
     a66:	09 f4       	brne	.+2      	; 0xa6a <__pack_f+0x34>
     a68:	9f c0       	rjmp	.+318    	; 0xba8 <__pack_f+0x172>
     a6a:	82 30       	cpi	r24, 0x02	; 2
     a6c:	21 f4       	brne	.+8      	; 0xa76 <__pack_f+0x40>
     a6e:	ee 24       	eor	r14, r14
     a70:	ff 24       	eor	r15, r15
     a72:	87 01       	movw	r16, r14
     a74:	05 c0       	rjmp	.+10     	; 0xa80 <__pack_f+0x4a>
     a76:	e1 14       	cp	r14, r1
     a78:	f1 04       	cpc	r15, r1
     a7a:	01 05       	cpc	r16, r1
     a7c:	11 05       	cpc	r17, r1
     a7e:	19 f4       	brne	.+6      	; 0xa86 <__pack_f+0x50>
     a80:	e0 e0       	ldi	r30, 0x00	; 0
     a82:	f0 e0       	ldi	r31, 0x00	; 0
     a84:	96 c0       	rjmp	.+300    	; 0xbb2 <__pack_f+0x17c>
     a86:	62 81       	ldd	r22, Z+2	; 0x02
     a88:	73 81       	ldd	r23, Z+3	; 0x03
     a8a:	9f ef       	ldi	r25, 0xFF	; 255
     a8c:	62 38       	cpi	r22, 0x82	; 130
     a8e:	79 07       	cpc	r23, r25
     a90:	0c f0       	brlt	.+2      	; 0xa94 <__pack_f+0x5e>
     a92:	5b c0       	rjmp	.+182    	; 0xb4a <__pack_f+0x114>
     a94:	22 e8       	ldi	r18, 0x82	; 130
     a96:	3f ef       	ldi	r19, 0xFF	; 255
     a98:	26 1b       	sub	r18, r22
     a9a:	37 0b       	sbc	r19, r23
     a9c:	2a 31       	cpi	r18, 0x1A	; 26
     a9e:	31 05       	cpc	r19, r1
     aa0:	2c f0       	brlt	.+10     	; 0xaac <__pack_f+0x76>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e0       	ldi	r20, 0x00	; 0
     aa8:	50 e0       	ldi	r21, 0x00	; 0
     aaa:	2a c0       	rjmp	.+84     	; 0xb00 <__pack_f+0xca>
     aac:	b8 01       	movw	r22, r16
     aae:	a7 01       	movw	r20, r14
     ab0:	02 2e       	mov	r0, r18
     ab2:	04 c0       	rjmp	.+8      	; 0xabc <__pack_f+0x86>
     ab4:	76 95       	lsr	r23
     ab6:	67 95       	ror	r22
     ab8:	57 95       	ror	r21
     aba:	47 95       	ror	r20
     abc:	0a 94       	dec	r0
     abe:	d2 f7       	brpl	.-12     	; 0xab4 <__pack_f+0x7e>
     ac0:	81 e0       	ldi	r24, 0x01	; 1
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	a0 e0       	ldi	r26, 0x00	; 0
     ac6:	b0 e0       	ldi	r27, 0x00	; 0
     ac8:	04 c0       	rjmp	.+8      	; 0xad2 <__pack_f+0x9c>
     aca:	88 0f       	add	r24, r24
     acc:	99 1f       	adc	r25, r25
     ace:	aa 1f       	adc	r26, r26
     ad0:	bb 1f       	adc	r27, r27
     ad2:	2a 95       	dec	r18
     ad4:	d2 f7       	brpl	.-12     	; 0xaca <__pack_f+0x94>
     ad6:	01 97       	sbiw	r24, 0x01	; 1
     ad8:	a1 09       	sbc	r26, r1
     ada:	b1 09       	sbc	r27, r1
     adc:	8e 21       	and	r24, r14
     ade:	9f 21       	and	r25, r15
     ae0:	a0 23       	and	r26, r16
     ae2:	b1 23       	and	r27, r17
     ae4:	00 97       	sbiw	r24, 0x00	; 0
     ae6:	a1 05       	cpc	r26, r1
     ae8:	b1 05       	cpc	r27, r1
     aea:	21 f0       	breq	.+8      	; 0xaf4 <__pack_f+0xbe>
     aec:	81 e0       	ldi	r24, 0x01	; 1
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	a0 e0       	ldi	r26, 0x00	; 0
     af2:	b0 e0       	ldi	r27, 0x00	; 0
     af4:	9a 01       	movw	r18, r20
     af6:	ab 01       	movw	r20, r22
     af8:	28 2b       	or	r18, r24
     afa:	39 2b       	or	r19, r25
     afc:	4a 2b       	or	r20, r26
     afe:	5b 2b       	or	r21, r27
     b00:	da 01       	movw	r26, r20
     b02:	c9 01       	movw	r24, r18
     b04:	8f 77       	andi	r24, 0x7F	; 127
     b06:	90 70       	andi	r25, 0x00	; 0
     b08:	a0 70       	andi	r26, 0x00	; 0
     b0a:	b0 70       	andi	r27, 0x00	; 0
     b0c:	80 34       	cpi	r24, 0x40	; 64
     b0e:	91 05       	cpc	r25, r1
     b10:	a1 05       	cpc	r26, r1
     b12:	b1 05       	cpc	r27, r1
     b14:	39 f4       	brne	.+14     	; 0xb24 <__pack_f+0xee>
     b16:	27 ff       	sbrs	r18, 7
     b18:	09 c0       	rjmp	.+18     	; 0xb2c <__pack_f+0xf6>
     b1a:	20 5c       	subi	r18, 0xC0	; 192
     b1c:	3f 4f       	sbci	r19, 0xFF	; 255
     b1e:	4f 4f       	sbci	r20, 0xFF	; 255
     b20:	5f 4f       	sbci	r21, 0xFF	; 255
     b22:	04 c0       	rjmp	.+8      	; 0xb2c <__pack_f+0xf6>
     b24:	21 5c       	subi	r18, 0xC1	; 193
     b26:	3f 4f       	sbci	r19, 0xFF	; 255
     b28:	4f 4f       	sbci	r20, 0xFF	; 255
     b2a:	5f 4f       	sbci	r21, 0xFF	; 255
     b2c:	e0 e0       	ldi	r30, 0x00	; 0
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	20 30       	cpi	r18, 0x00	; 0
     b32:	a0 e0       	ldi	r26, 0x00	; 0
     b34:	3a 07       	cpc	r19, r26
     b36:	a0 e0       	ldi	r26, 0x00	; 0
     b38:	4a 07       	cpc	r20, r26
     b3a:	a0 e4       	ldi	r26, 0x40	; 64
     b3c:	5a 07       	cpc	r21, r26
     b3e:	10 f0       	brcs	.+4      	; 0xb44 <__pack_f+0x10e>
     b40:	e1 e0       	ldi	r30, 0x01	; 1
     b42:	f0 e0       	ldi	r31, 0x00	; 0
     b44:	79 01       	movw	r14, r18
     b46:	8a 01       	movw	r16, r20
     b48:	27 c0       	rjmp	.+78     	; 0xb98 <__pack_f+0x162>
     b4a:	60 38       	cpi	r22, 0x80	; 128
     b4c:	71 05       	cpc	r23, r1
     b4e:	64 f5       	brge	.+88     	; 0xba8 <__pack_f+0x172>
     b50:	fb 01       	movw	r30, r22
     b52:	e1 58       	subi	r30, 0x81	; 129
     b54:	ff 4f       	sbci	r31, 0xFF	; 255
     b56:	d8 01       	movw	r26, r16
     b58:	c7 01       	movw	r24, r14
     b5a:	8f 77       	andi	r24, 0x7F	; 127
     b5c:	90 70       	andi	r25, 0x00	; 0
     b5e:	a0 70       	andi	r26, 0x00	; 0
     b60:	b0 70       	andi	r27, 0x00	; 0
     b62:	80 34       	cpi	r24, 0x40	; 64
     b64:	91 05       	cpc	r25, r1
     b66:	a1 05       	cpc	r26, r1
     b68:	b1 05       	cpc	r27, r1
     b6a:	39 f4       	brne	.+14     	; 0xb7a <__pack_f+0x144>
     b6c:	e7 fe       	sbrs	r14, 7
     b6e:	0d c0       	rjmp	.+26     	; 0xb8a <__pack_f+0x154>
     b70:	80 e4       	ldi	r24, 0x40	; 64
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	a0 e0       	ldi	r26, 0x00	; 0
     b76:	b0 e0       	ldi	r27, 0x00	; 0
     b78:	04 c0       	rjmp	.+8      	; 0xb82 <__pack_f+0x14c>
     b7a:	8f e3       	ldi	r24, 0x3F	; 63
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	a0 e0       	ldi	r26, 0x00	; 0
     b80:	b0 e0       	ldi	r27, 0x00	; 0
     b82:	e8 0e       	add	r14, r24
     b84:	f9 1e       	adc	r15, r25
     b86:	0a 1f       	adc	r16, r26
     b88:	1b 1f       	adc	r17, r27
     b8a:	17 ff       	sbrs	r17, 7
     b8c:	05 c0       	rjmp	.+10     	; 0xb98 <__pack_f+0x162>
     b8e:	16 95       	lsr	r17
     b90:	07 95       	ror	r16
     b92:	f7 94       	ror	r15
     b94:	e7 94       	ror	r14
     b96:	31 96       	adiw	r30, 0x01	; 1
     b98:	87 e0       	ldi	r24, 0x07	; 7
     b9a:	16 95       	lsr	r17
     b9c:	07 95       	ror	r16
     b9e:	f7 94       	ror	r15
     ba0:	e7 94       	ror	r14
     ba2:	8a 95       	dec	r24
     ba4:	d1 f7       	brne	.-12     	; 0xb9a <__pack_f+0x164>
     ba6:	05 c0       	rjmp	.+10     	; 0xbb2 <__pack_f+0x17c>
     ba8:	ee 24       	eor	r14, r14
     baa:	ff 24       	eor	r15, r15
     bac:	87 01       	movw	r16, r14
     bae:	ef ef       	ldi	r30, 0xFF	; 255
     bb0:	f0 e0       	ldi	r31, 0x00	; 0
     bb2:	6e 2f       	mov	r22, r30
     bb4:	67 95       	ror	r22
     bb6:	66 27       	eor	r22, r22
     bb8:	67 95       	ror	r22
     bba:	90 2f       	mov	r25, r16
     bbc:	9f 77       	andi	r25, 0x7F	; 127
     bbe:	d7 94       	ror	r13
     bc0:	dd 24       	eor	r13, r13
     bc2:	d7 94       	ror	r13
     bc4:	8e 2f       	mov	r24, r30
     bc6:	86 95       	lsr	r24
     bc8:	49 2f       	mov	r20, r25
     bca:	46 2b       	or	r20, r22
     bcc:	58 2f       	mov	r21, r24
     bce:	5d 29       	or	r21, r13
     bd0:	b7 01       	movw	r22, r14
     bd2:	ca 01       	movw	r24, r20
     bd4:	1f 91       	pop	r17
     bd6:	0f 91       	pop	r16
     bd8:	ff 90       	pop	r15
     bda:	ef 90       	pop	r14
     bdc:	df 90       	pop	r13
     bde:	08 95       	ret

00000be0 <__unpack_f>:
     be0:	fc 01       	movw	r30, r24
     be2:	db 01       	movw	r26, r22
     be4:	40 81       	ld	r20, Z
     be6:	51 81       	ldd	r21, Z+1	; 0x01
     be8:	22 81       	ldd	r18, Z+2	; 0x02
     bea:	62 2f       	mov	r22, r18
     bec:	6f 77       	andi	r22, 0x7F	; 127
     bee:	70 e0       	ldi	r23, 0x00	; 0
     bf0:	22 1f       	adc	r18, r18
     bf2:	22 27       	eor	r18, r18
     bf4:	22 1f       	adc	r18, r18
     bf6:	93 81       	ldd	r25, Z+3	; 0x03
     bf8:	89 2f       	mov	r24, r25
     bfa:	88 0f       	add	r24, r24
     bfc:	82 2b       	or	r24, r18
     bfe:	28 2f       	mov	r18, r24
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	99 1f       	adc	r25, r25
     c04:	99 27       	eor	r25, r25
     c06:	99 1f       	adc	r25, r25
     c08:	11 96       	adiw	r26, 0x01	; 1
     c0a:	9c 93       	st	X, r25
     c0c:	11 97       	sbiw	r26, 0x01	; 1
     c0e:	21 15       	cp	r18, r1
     c10:	31 05       	cpc	r19, r1
     c12:	a9 f5       	brne	.+106    	; 0xc7e <__unpack_f+0x9e>
     c14:	41 15       	cp	r20, r1
     c16:	51 05       	cpc	r21, r1
     c18:	61 05       	cpc	r22, r1
     c1a:	71 05       	cpc	r23, r1
     c1c:	11 f4       	brne	.+4      	; 0xc22 <__unpack_f+0x42>
     c1e:	82 e0       	ldi	r24, 0x02	; 2
     c20:	37 c0       	rjmp	.+110    	; 0xc90 <__unpack_f+0xb0>
     c22:	82 e8       	ldi	r24, 0x82	; 130
     c24:	9f ef       	ldi	r25, 0xFF	; 255
     c26:	13 96       	adiw	r26, 0x03	; 3
     c28:	9c 93       	st	X, r25
     c2a:	8e 93       	st	-X, r24
     c2c:	12 97       	sbiw	r26, 0x02	; 2
     c2e:	9a 01       	movw	r18, r20
     c30:	ab 01       	movw	r20, r22
     c32:	67 e0       	ldi	r22, 0x07	; 7
     c34:	22 0f       	add	r18, r18
     c36:	33 1f       	adc	r19, r19
     c38:	44 1f       	adc	r20, r20
     c3a:	55 1f       	adc	r21, r21
     c3c:	6a 95       	dec	r22
     c3e:	d1 f7       	brne	.-12     	; 0xc34 <__unpack_f+0x54>
     c40:	83 e0       	ldi	r24, 0x03	; 3
     c42:	8c 93       	st	X, r24
     c44:	0d c0       	rjmp	.+26     	; 0xc60 <__unpack_f+0x80>
     c46:	22 0f       	add	r18, r18
     c48:	33 1f       	adc	r19, r19
     c4a:	44 1f       	adc	r20, r20
     c4c:	55 1f       	adc	r21, r21
     c4e:	12 96       	adiw	r26, 0x02	; 2
     c50:	8d 91       	ld	r24, X+
     c52:	9c 91       	ld	r25, X
     c54:	13 97       	sbiw	r26, 0x03	; 3
     c56:	01 97       	sbiw	r24, 0x01	; 1
     c58:	13 96       	adiw	r26, 0x03	; 3
     c5a:	9c 93       	st	X, r25
     c5c:	8e 93       	st	-X, r24
     c5e:	12 97       	sbiw	r26, 0x02	; 2
     c60:	20 30       	cpi	r18, 0x00	; 0
     c62:	80 e0       	ldi	r24, 0x00	; 0
     c64:	38 07       	cpc	r19, r24
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	48 07       	cpc	r20, r24
     c6a:	80 e4       	ldi	r24, 0x40	; 64
     c6c:	58 07       	cpc	r21, r24
     c6e:	58 f3       	brcs	.-42     	; 0xc46 <__unpack_f+0x66>
     c70:	14 96       	adiw	r26, 0x04	; 4
     c72:	2d 93       	st	X+, r18
     c74:	3d 93       	st	X+, r19
     c76:	4d 93       	st	X+, r20
     c78:	5c 93       	st	X, r21
     c7a:	17 97       	sbiw	r26, 0x07	; 7
     c7c:	08 95       	ret
     c7e:	2f 3f       	cpi	r18, 0xFF	; 255
     c80:	31 05       	cpc	r19, r1
     c82:	79 f4       	brne	.+30     	; 0xca2 <__unpack_f+0xc2>
     c84:	41 15       	cp	r20, r1
     c86:	51 05       	cpc	r21, r1
     c88:	61 05       	cpc	r22, r1
     c8a:	71 05       	cpc	r23, r1
     c8c:	19 f4       	brne	.+6      	; 0xc94 <__unpack_f+0xb4>
     c8e:	84 e0       	ldi	r24, 0x04	; 4
     c90:	8c 93       	st	X, r24
     c92:	08 95       	ret
     c94:	64 ff       	sbrs	r22, 4
     c96:	03 c0       	rjmp	.+6      	; 0xc9e <__unpack_f+0xbe>
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	8c 93       	st	X, r24
     c9c:	12 c0       	rjmp	.+36     	; 0xcc2 <__unpack_f+0xe2>
     c9e:	1c 92       	st	X, r1
     ca0:	10 c0       	rjmp	.+32     	; 0xcc2 <__unpack_f+0xe2>
     ca2:	2f 57       	subi	r18, 0x7F	; 127
     ca4:	30 40       	sbci	r19, 0x00	; 0
     ca6:	13 96       	adiw	r26, 0x03	; 3
     ca8:	3c 93       	st	X, r19
     caa:	2e 93       	st	-X, r18
     cac:	12 97       	sbiw	r26, 0x02	; 2
     cae:	83 e0       	ldi	r24, 0x03	; 3
     cb0:	8c 93       	st	X, r24
     cb2:	87 e0       	ldi	r24, 0x07	; 7
     cb4:	44 0f       	add	r20, r20
     cb6:	55 1f       	adc	r21, r21
     cb8:	66 1f       	adc	r22, r22
     cba:	77 1f       	adc	r23, r23
     cbc:	8a 95       	dec	r24
     cbe:	d1 f7       	brne	.-12     	; 0xcb4 <__unpack_f+0xd4>
     cc0:	70 64       	ori	r23, 0x40	; 64
     cc2:	14 96       	adiw	r26, 0x04	; 4
     cc4:	4d 93       	st	X+, r20
     cc6:	5d 93       	st	X+, r21
     cc8:	6d 93       	st	X+, r22
     cca:	7c 93       	st	X, r23
     ccc:	17 97       	sbiw	r26, 0x07	; 7
     cce:	08 95       	ret

00000cd0 <__fpcmp_parts_f>:
     cd0:	1f 93       	push	r17
     cd2:	dc 01       	movw	r26, r24
     cd4:	fb 01       	movw	r30, r22
     cd6:	9c 91       	ld	r25, X
     cd8:	92 30       	cpi	r25, 0x02	; 2
     cda:	08 f4       	brcc	.+2      	; 0xcde <__fpcmp_parts_f+0xe>
     cdc:	47 c0       	rjmp	.+142    	; 0xd6c <__fpcmp_parts_f+0x9c>
     cde:	80 81       	ld	r24, Z
     ce0:	82 30       	cpi	r24, 0x02	; 2
     ce2:	08 f4       	brcc	.+2      	; 0xce6 <__fpcmp_parts_f+0x16>
     ce4:	43 c0       	rjmp	.+134    	; 0xd6c <__fpcmp_parts_f+0x9c>
     ce6:	94 30       	cpi	r25, 0x04	; 4
     ce8:	51 f4       	brne	.+20     	; 0xcfe <__fpcmp_parts_f+0x2e>
     cea:	11 96       	adiw	r26, 0x01	; 1
     cec:	1c 91       	ld	r17, X
     cee:	84 30       	cpi	r24, 0x04	; 4
     cf0:	99 f5       	brne	.+102    	; 0xd58 <__fpcmp_parts_f+0x88>
     cf2:	81 81       	ldd	r24, Z+1	; 0x01
     cf4:	68 2f       	mov	r22, r24
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	61 1b       	sub	r22, r17
     cfa:	71 09       	sbc	r23, r1
     cfc:	3f c0       	rjmp	.+126    	; 0xd7c <__fpcmp_parts_f+0xac>
     cfe:	84 30       	cpi	r24, 0x04	; 4
     d00:	21 f0       	breq	.+8      	; 0xd0a <__fpcmp_parts_f+0x3a>
     d02:	92 30       	cpi	r25, 0x02	; 2
     d04:	31 f4       	brne	.+12     	; 0xd12 <__fpcmp_parts_f+0x42>
     d06:	82 30       	cpi	r24, 0x02	; 2
     d08:	b9 f1       	breq	.+110    	; 0xd78 <__fpcmp_parts_f+0xa8>
     d0a:	81 81       	ldd	r24, Z+1	; 0x01
     d0c:	88 23       	and	r24, r24
     d0e:	89 f1       	breq	.+98     	; 0xd72 <__fpcmp_parts_f+0xa2>
     d10:	2d c0       	rjmp	.+90     	; 0xd6c <__fpcmp_parts_f+0x9c>
     d12:	11 96       	adiw	r26, 0x01	; 1
     d14:	1c 91       	ld	r17, X
     d16:	11 97       	sbiw	r26, 0x01	; 1
     d18:	82 30       	cpi	r24, 0x02	; 2
     d1a:	f1 f0       	breq	.+60     	; 0xd58 <__fpcmp_parts_f+0x88>
     d1c:	81 81       	ldd	r24, Z+1	; 0x01
     d1e:	18 17       	cp	r17, r24
     d20:	d9 f4       	brne	.+54     	; 0xd58 <__fpcmp_parts_f+0x88>
     d22:	12 96       	adiw	r26, 0x02	; 2
     d24:	2d 91       	ld	r18, X+
     d26:	3c 91       	ld	r19, X
     d28:	13 97       	sbiw	r26, 0x03	; 3
     d2a:	82 81       	ldd	r24, Z+2	; 0x02
     d2c:	93 81       	ldd	r25, Z+3	; 0x03
     d2e:	82 17       	cp	r24, r18
     d30:	93 07       	cpc	r25, r19
     d32:	94 f0       	brlt	.+36     	; 0xd58 <__fpcmp_parts_f+0x88>
     d34:	28 17       	cp	r18, r24
     d36:	39 07       	cpc	r19, r25
     d38:	bc f0       	brlt	.+46     	; 0xd68 <__fpcmp_parts_f+0x98>
     d3a:	14 96       	adiw	r26, 0x04	; 4
     d3c:	8d 91       	ld	r24, X+
     d3e:	9d 91       	ld	r25, X+
     d40:	0d 90       	ld	r0, X+
     d42:	bc 91       	ld	r27, X
     d44:	a0 2d       	mov	r26, r0
     d46:	24 81       	ldd	r18, Z+4	; 0x04
     d48:	35 81       	ldd	r19, Z+5	; 0x05
     d4a:	46 81       	ldd	r20, Z+6	; 0x06
     d4c:	57 81       	ldd	r21, Z+7	; 0x07
     d4e:	28 17       	cp	r18, r24
     d50:	39 07       	cpc	r19, r25
     d52:	4a 07       	cpc	r20, r26
     d54:	5b 07       	cpc	r21, r27
     d56:	18 f4       	brcc	.+6      	; 0xd5e <__fpcmp_parts_f+0x8e>
     d58:	11 23       	and	r17, r17
     d5a:	41 f0       	breq	.+16     	; 0xd6c <__fpcmp_parts_f+0x9c>
     d5c:	0a c0       	rjmp	.+20     	; 0xd72 <__fpcmp_parts_f+0xa2>
     d5e:	82 17       	cp	r24, r18
     d60:	93 07       	cpc	r25, r19
     d62:	a4 07       	cpc	r26, r20
     d64:	b5 07       	cpc	r27, r21
     d66:	40 f4       	brcc	.+16     	; 0xd78 <__fpcmp_parts_f+0xa8>
     d68:	11 23       	and	r17, r17
     d6a:	19 f0       	breq	.+6      	; 0xd72 <__fpcmp_parts_f+0xa2>
     d6c:	61 e0       	ldi	r22, 0x01	; 1
     d6e:	70 e0       	ldi	r23, 0x00	; 0
     d70:	05 c0       	rjmp	.+10     	; 0xd7c <__fpcmp_parts_f+0xac>
     d72:	6f ef       	ldi	r22, 0xFF	; 255
     d74:	7f ef       	ldi	r23, 0xFF	; 255
     d76:	02 c0       	rjmp	.+4      	; 0xd7c <__fpcmp_parts_f+0xac>
     d78:	60 e0       	ldi	r22, 0x00	; 0
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	cb 01       	movw	r24, r22
     d7e:	1f 91       	pop	r17
     d80:	08 95       	ret

00000d82 <DIO_voidSetPinDirection>:
#include "DIO_config.h"
#include "DIO_private.h"


void DIO_voidSetPinDirection(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Direction)
{
     d82:	df 93       	push	r29
     d84:	cf 93       	push	r28
     d86:	cd b7       	in	r28, 0x3d	; 61
     d88:	de b7       	in	r29, 0x3e	; 62
     d8a:	27 97       	sbiw	r28, 0x07	; 7
     d8c:	0f b6       	in	r0, 0x3f	; 63
     d8e:	f8 94       	cli
     d90:	de bf       	out	0x3e, r29	; 62
     d92:	0f be       	out	0x3f, r0	; 63
     d94:	cd bf       	out	0x3d, r28	; 61
     d96:	89 83       	std	Y+1, r24	; 0x01
     d98:	6a 83       	std	Y+2, r22	; 0x02
     d9a:	4b 83       	std	Y+3, r20	; 0x03
	if(DIO_u8OUTPUT == Copy_u8Direction)
     d9c:	8b 81       	ldd	r24, Y+3	; 0x03
     d9e:	81 30       	cpi	r24, 0x01	; 1
     da0:	09 f0       	breq	.+2      	; 0xda4 <DIO_voidSetPinDirection+0x22>
     da2:	70 c0       	rjmp	.+224    	; 0xe84 <DIO_voidSetPinDirection+0x102>
	{
		switch(Copy_u8PortNum)
     da4:	89 81       	ldd	r24, Y+1	; 0x01
     da6:	28 2f       	mov	r18, r24
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	3f 83       	std	Y+7, r19	; 0x07
     dac:	2e 83       	std	Y+6, r18	; 0x06
     dae:	8e 81       	ldd	r24, Y+6	; 0x06
     db0:	9f 81       	ldd	r25, Y+7	; 0x07
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	91 05       	cpc	r25, r1
     db6:	51 f1       	breq	.+84     	; 0xe0c <DIO_voidSetPinDirection+0x8a>
     db8:	2e 81       	ldd	r18, Y+6	; 0x06
     dba:	3f 81       	ldd	r19, Y+7	; 0x07
     dbc:	23 30       	cpi	r18, 0x03	; 3
     dbe:	31 05       	cpc	r19, r1
     dc0:	34 f4       	brge	.+12     	; 0xdce <DIO_voidSetPinDirection+0x4c>
     dc2:	8e 81       	ldd	r24, Y+6	; 0x06
     dc4:	9f 81       	ldd	r25, Y+7	; 0x07
     dc6:	81 30       	cpi	r24, 0x01	; 1
     dc8:	91 05       	cpc	r25, r1
     dca:	61 f0       	breq	.+24     	; 0xde4 <DIO_voidSetPinDirection+0x62>
     dcc:	d3 c0       	rjmp	.+422    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
     dce:	2e 81       	ldd	r18, Y+6	; 0x06
     dd0:	3f 81       	ldd	r19, Y+7	; 0x07
     dd2:	23 30       	cpi	r18, 0x03	; 3
     dd4:	31 05       	cpc	r19, r1
     dd6:	71 f1       	breq	.+92     	; 0xe34 <DIO_voidSetPinDirection+0xb2>
     dd8:	8e 81       	ldd	r24, Y+6	; 0x06
     dda:	9f 81       	ldd	r25, Y+7	; 0x07
     ddc:	84 30       	cpi	r24, 0x04	; 4
     dde:	91 05       	cpc	r25, r1
     de0:	e9 f1       	breq	.+122    	; 0xe5c <DIO_voidSetPinDirection+0xda>
     de2:	c8 c0       	rjmp	.+400    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
		{
			case DIO_u8PORTA:  SET_BIT(DDRA, Copy_u8PinNum);  break;
     de4:	aa e3       	ldi	r26, 0x3A	; 58
     de6:	b0 e0       	ldi	r27, 0x00	; 0
     de8:	ea e3       	ldi	r30, 0x3A	; 58
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	80 81       	ld	r24, Z
     dee:	48 2f       	mov	r20, r24
     df0:	8a 81       	ldd	r24, Y+2	; 0x02
     df2:	28 2f       	mov	r18, r24
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	02 2e       	mov	r0, r18
     dfc:	02 c0       	rjmp	.+4      	; 0xe02 <DIO_voidSetPinDirection+0x80>
     dfe:	88 0f       	add	r24, r24
     e00:	99 1f       	adc	r25, r25
     e02:	0a 94       	dec	r0
     e04:	e2 f7       	brpl	.-8      	; 0xdfe <DIO_voidSetPinDirection+0x7c>
     e06:	84 2b       	or	r24, r20
     e08:	8c 93       	st	X, r24
     e0a:	b4 c0       	rjmp	.+360    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTB:  SET_BIT(DDRB, Copy_u8PinNum);  break;
     e0c:	a7 e3       	ldi	r26, 0x37	; 55
     e0e:	b0 e0       	ldi	r27, 0x00	; 0
     e10:	e7 e3       	ldi	r30, 0x37	; 55
     e12:	f0 e0       	ldi	r31, 0x00	; 0
     e14:	80 81       	ld	r24, Z
     e16:	48 2f       	mov	r20, r24
     e18:	8a 81       	ldd	r24, Y+2	; 0x02
     e1a:	28 2f       	mov	r18, r24
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	02 2e       	mov	r0, r18
     e24:	02 c0       	rjmp	.+4      	; 0xe2a <DIO_voidSetPinDirection+0xa8>
     e26:	88 0f       	add	r24, r24
     e28:	99 1f       	adc	r25, r25
     e2a:	0a 94       	dec	r0
     e2c:	e2 f7       	brpl	.-8      	; 0xe26 <DIO_voidSetPinDirection+0xa4>
     e2e:	84 2b       	or	r24, r20
     e30:	8c 93       	st	X, r24
     e32:	a0 c0       	rjmp	.+320    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTC:  SET_BIT(DDRC, Copy_u8PinNum);  break;
     e34:	a4 e3       	ldi	r26, 0x34	; 52
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	e4 e3       	ldi	r30, 0x34	; 52
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	80 81       	ld	r24, Z
     e3e:	48 2f       	mov	r20, r24
     e40:	8a 81       	ldd	r24, Y+2	; 0x02
     e42:	28 2f       	mov	r18, r24
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	02 2e       	mov	r0, r18
     e4c:	02 c0       	rjmp	.+4      	; 0xe52 <DIO_voidSetPinDirection+0xd0>
     e4e:	88 0f       	add	r24, r24
     e50:	99 1f       	adc	r25, r25
     e52:	0a 94       	dec	r0
     e54:	e2 f7       	brpl	.-8      	; 0xe4e <DIO_voidSetPinDirection+0xcc>
     e56:	84 2b       	or	r24, r20
     e58:	8c 93       	st	X, r24
     e5a:	8c c0       	rjmp	.+280    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTD:  SET_BIT(DDRD, Copy_u8PinNum);  break;
     e5c:	a1 e3       	ldi	r26, 0x31	; 49
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	e1 e3       	ldi	r30, 0x31	; 49
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	80 81       	ld	r24, Z
     e66:	48 2f       	mov	r20, r24
     e68:	8a 81       	ldd	r24, Y+2	; 0x02
     e6a:	28 2f       	mov	r18, r24
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	02 2e       	mov	r0, r18
     e74:	02 c0       	rjmp	.+4      	; 0xe7a <DIO_voidSetPinDirection+0xf8>
     e76:	88 0f       	add	r24, r24
     e78:	99 1f       	adc	r25, r25
     e7a:	0a 94       	dec	r0
     e7c:	e2 f7       	brpl	.-8      	; 0xe76 <DIO_voidSetPinDirection+0xf4>
     e7e:	84 2b       	or	r24, r20
     e80:	8c 93       	st	X, r24
     e82:	78 c0       	rjmp	.+240    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
			default:   /* return error */                     break;
		}
	}
	else if(DIO_u8INPUT == Copy_u8Direction)
     e84:	8b 81       	ldd	r24, Y+3	; 0x03
     e86:	88 23       	and	r24, r24
     e88:	09 f0       	breq	.+2      	; 0xe8c <DIO_voidSetPinDirection+0x10a>
     e8a:	74 c0       	rjmp	.+232    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
	{
		switch(Copy_u8PortNum)
     e8c:	89 81       	ldd	r24, Y+1	; 0x01
     e8e:	28 2f       	mov	r18, r24
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	3d 83       	std	Y+5, r19	; 0x05
     e94:	2c 83       	std	Y+4, r18	; 0x04
     e96:	8c 81       	ldd	r24, Y+4	; 0x04
     e98:	9d 81       	ldd	r25, Y+5	; 0x05
     e9a:	82 30       	cpi	r24, 0x02	; 2
     e9c:	91 05       	cpc	r25, r1
     e9e:	61 f1       	breq	.+88     	; 0xef8 <DIO_voidSetPinDirection+0x176>
     ea0:	2c 81       	ldd	r18, Y+4	; 0x04
     ea2:	3d 81       	ldd	r19, Y+5	; 0x05
     ea4:	23 30       	cpi	r18, 0x03	; 3
     ea6:	31 05       	cpc	r19, r1
     ea8:	34 f4       	brge	.+12     	; 0xeb6 <DIO_voidSetPinDirection+0x134>
     eaa:	8c 81       	ldd	r24, Y+4	; 0x04
     eac:	9d 81       	ldd	r25, Y+5	; 0x05
     eae:	81 30       	cpi	r24, 0x01	; 1
     eb0:	91 05       	cpc	r25, r1
     eb2:	69 f0       	breq	.+26     	; 0xece <DIO_voidSetPinDirection+0x14c>
     eb4:	5f c0       	rjmp	.+190    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
     eb6:	2c 81       	ldd	r18, Y+4	; 0x04
     eb8:	3d 81       	ldd	r19, Y+5	; 0x05
     eba:	23 30       	cpi	r18, 0x03	; 3
     ebc:	31 05       	cpc	r19, r1
     ebe:	89 f1       	breq	.+98     	; 0xf22 <DIO_voidSetPinDirection+0x1a0>
     ec0:	8c 81       	ldd	r24, Y+4	; 0x04
     ec2:	9d 81       	ldd	r25, Y+5	; 0x05
     ec4:	84 30       	cpi	r24, 0x04	; 4
     ec6:	91 05       	cpc	r25, r1
     ec8:	09 f4       	brne	.+2      	; 0xecc <DIO_voidSetPinDirection+0x14a>
     eca:	40 c0       	rjmp	.+128    	; 0xf4c <DIO_voidSetPinDirection+0x1ca>
     ecc:	53 c0       	rjmp	.+166    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
		{
			case DIO_u8PORTA:  CLR_BIT(DDRA, Copy_u8PinNum);  break;
     ece:	aa e3       	ldi	r26, 0x3A	; 58
     ed0:	b0 e0       	ldi	r27, 0x00	; 0
     ed2:	ea e3       	ldi	r30, 0x3A	; 58
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	80 81       	ld	r24, Z
     ed8:	48 2f       	mov	r20, r24
     eda:	8a 81       	ldd	r24, Y+2	; 0x02
     edc:	28 2f       	mov	r18, r24
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	81 e0       	ldi	r24, 0x01	; 1
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	02 2e       	mov	r0, r18
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <DIO_voidSetPinDirection+0x16a>
     ee8:	88 0f       	add	r24, r24
     eea:	99 1f       	adc	r25, r25
     eec:	0a 94       	dec	r0
     eee:	e2 f7       	brpl	.-8      	; 0xee8 <DIO_voidSetPinDirection+0x166>
     ef0:	80 95       	com	r24
     ef2:	84 23       	and	r24, r20
     ef4:	8c 93       	st	X, r24
     ef6:	3e c0       	rjmp	.+124    	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTB:  CLR_BIT(DDRB, Copy_u8PinNum);  break;
     ef8:	a7 e3       	ldi	r26, 0x37	; 55
     efa:	b0 e0       	ldi	r27, 0x00	; 0
     efc:	e7 e3       	ldi	r30, 0x37	; 55
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	80 81       	ld	r24, Z
     f02:	48 2f       	mov	r20, r24
     f04:	8a 81       	ldd	r24, Y+2	; 0x02
     f06:	28 2f       	mov	r18, r24
     f08:	30 e0       	ldi	r19, 0x00	; 0
     f0a:	81 e0       	ldi	r24, 0x01	; 1
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	02 2e       	mov	r0, r18
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <DIO_voidSetPinDirection+0x194>
     f12:	88 0f       	add	r24, r24
     f14:	99 1f       	adc	r25, r25
     f16:	0a 94       	dec	r0
     f18:	e2 f7       	brpl	.-8      	; 0xf12 <DIO_voidSetPinDirection+0x190>
     f1a:	80 95       	com	r24
     f1c:	84 23       	and	r24, r20
     f1e:	8c 93       	st	X, r24
     f20:	29 c0       	rjmp	.+82     	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTC:  CLR_BIT(DDRC, Copy_u8PinNum);  break;
     f22:	a4 e3       	ldi	r26, 0x34	; 52
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	e4 e3       	ldi	r30, 0x34	; 52
     f28:	f0 e0       	ldi	r31, 0x00	; 0
     f2a:	80 81       	ld	r24, Z
     f2c:	48 2f       	mov	r20, r24
     f2e:	8a 81       	ldd	r24, Y+2	; 0x02
     f30:	28 2f       	mov	r18, r24
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	81 e0       	ldi	r24, 0x01	; 1
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	02 2e       	mov	r0, r18
     f3a:	02 c0       	rjmp	.+4      	; 0xf40 <DIO_voidSetPinDirection+0x1be>
     f3c:	88 0f       	add	r24, r24
     f3e:	99 1f       	adc	r25, r25
     f40:	0a 94       	dec	r0
     f42:	e2 f7       	brpl	.-8      	; 0xf3c <DIO_voidSetPinDirection+0x1ba>
     f44:	80 95       	com	r24
     f46:	84 23       	and	r24, r20
     f48:	8c 93       	st	X, r24
     f4a:	14 c0       	rjmp	.+40     	; 0xf74 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTD:  CLR_BIT(DDRD, Copy_u8PinNum);  break;
     f4c:	a1 e3       	ldi	r26, 0x31	; 49
     f4e:	b0 e0       	ldi	r27, 0x00	; 0
     f50:	e1 e3       	ldi	r30, 0x31	; 49
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	80 81       	ld	r24, Z
     f56:	48 2f       	mov	r20, r24
     f58:	8a 81       	ldd	r24, Y+2	; 0x02
     f5a:	28 2f       	mov	r18, r24
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	81 e0       	ldi	r24, 0x01	; 1
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	02 2e       	mov	r0, r18
     f64:	02 c0       	rjmp	.+4      	; 0xf6a <DIO_voidSetPinDirection+0x1e8>
     f66:	88 0f       	add	r24, r24
     f68:	99 1f       	adc	r25, r25
     f6a:	0a 94       	dec	r0
     f6c:	e2 f7       	brpl	.-8      	; 0xf66 <DIO_voidSetPinDirection+0x1e4>
     f6e:	80 95       	com	r24
     f70:	84 23       	and	r24, r20
     f72:	8c 93       	st	X, r24
	}
	else
	{
		/* return error */
	}
}
     f74:	27 96       	adiw	r28, 0x07	; 7
     f76:	0f b6       	in	r0, 0x3f	; 63
     f78:	f8 94       	cli
     f7a:	de bf       	out	0x3e, r29	; 62
     f7c:	0f be       	out	0x3f, r0	; 63
     f7e:	cd bf       	out	0x3d, r28	; 61
     f80:	cf 91       	pop	r28
     f82:	df 91       	pop	r29
     f84:	08 95       	ret

00000f86 <DIO_voidSetPinValue>:


void DIO_voidSetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum, uint8 Copy_u8Value)
{
     f86:	df 93       	push	r29
     f88:	cf 93       	push	r28
     f8a:	cd b7       	in	r28, 0x3d	; 61
     f8c:	de b7       	in	r29, 0x3e	; 62
     f8e:	27 97       	sbiw	r28, 0x07	; 7
     f90:	0f b6       	in	r0, 0x3f	; 63
     f92:	f8 94       	cli
     f94:	de bf       	out	0x3e, r29	; 62
     f96:	0f be       	out	0x3f, r0	; 63
     f98:	cd bf       	out	0x3d, r28	; 61
     f9a:	89 83       	std	Y+1, r24	; 0x01
     f9c:	6a 83       	std	Y+2, r22	; 0x02
     f9e:	4b 83       	std	Y+3, r20	; 0x03
	if(DIO_u8HIGH == Copy_u8Value)
     fa0:	8b 81       	ldd	r24, Y+3	; 0x03
     fa2:	81 30       	cpi	r24, 0x01	; 1
     fa4:	09 f0       	breq	.+2      	; 0xfa8 <DIO_voidSetPinValue+0x22>
     fa6:	70 c0       	rjmp	.+224    	; 0x1088 <DIO_voidSetPinValue+0x102>
	{
		switch(Copy_u8PortNum)
     fa8:	89 81       	ldd	r24, Y+1	; 0x01
     faa:	28 2f       	mov	r18, r24
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	3f 83       	std	Y+7, r19	; 0x07
     fb0:	2e 83       	std	Y+6, r18	; 0x06
     fb2:	8e 81       	ldd	r24, Y+6	; 0x06
     fb4:	9f 81       	ldd	r25, Y+7	; 0x07
     fb6:	82 30       	cpi	r24, 0x02	; 2
     fb8:	91 05       	cpc	r25, r1
     fba:	51 f1       	breq	.+84     	; 0x1010 <DIO_voidSetPinValue+0x8a>
     fbc:	2e 81       	ldd	r18, Y+6	; 0x06
     fbe:	3f 81       	ldd	r19, Y+7	; 0x07
     fc0:	23 30       	cpi	r18, 0x03	; 3
     fc2:	31 05       	cpc	r19, r1
     fc4:	34 f4       	brge	.+12     	; 0xfd2 <DIO_voidSetPinValue+0x4c>
     fc6:	8e 81       	ldd	r24, Y+6	; 0x06
     fc8:	9f 81       	ldd	r25, Y+7	; 0x07
     fca:	81 30       	cpi	r24, 0x01	; 1
     fcc:	91 05       	cpc	r25, r1
     fce:	61 f0       	breq	.+24     	; 0xfe8 <DIO_voidSetPinValue+0x62>
     fd0:	d3 c0       	rjmp	.+422    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
     fd2:	2e 81       	ldd	r18, Y+6	; 0x06
     fd4:	3f 81       	ldd	r19, Y+7	; 0x07
     fd6:	23 30       	cpi	r18, 0x03	; 3
     fd8:	31 05       	cpc	r19, r1
     fda:	71 f1       	breq	.+92     	; 0x1038 <DIO_voidSetPinValue+0xb2>
     fdc:	8e 81       	ldd	r24, Y+6	; 0x06
     fde:	9f 81       	ldd	r25, Y+7	; 0x07
     fe0:	84 30       	cpi	r24, 0x04	; 4
     fe2:	91 05       	cpc	r25, r1
     fe4:	e9 f1       	breq	.+122    	; 0x1060 <DIO_voidSetPinValue+0xda>
     fe6:	c8 c0       	rjmp	.+400    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
		{
			case DIO_u8PORTA:  SET_BIT(PORTA, Copy_u8PinNum);  break;
     fe8:	ab e3       	ldi	r26, 0x3B	; 59
     fea:	b0 e0       	ldi	r27, 0x00	; 0
     fec:	eb e3       	ldi	r30, 0x3B	; 59
     fee:	f0 e0       	ldi	r31, 0x00	; 0
     ff0:	80 81       	ld	r24, Z
     ff2:	48 2f       	mov	r20, r24
     ff4:	8a 81       	ldd	r24, Y+2	; 0x02
     ff6:	28 2f       	mov	r18, r24
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	81 e0       	ldi	r24, 0x01	; 1
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	02 2e       	mov	r0, r18
    1000:	02 c0       	rjmp	.+4      	; 0x1006 <DIO_voidSetPinValue+0x80>
    1002:	88 0f       	add	r24, r24
    1004:	99 1f       	adc	r25, r25
    1006:	0a 94       	dec	r0
    1008:	e2 f7       	brpl	.-8      	; 0x1002 <DIO_voidSetPinValue+0x7c>
    100a:	84 2b       	or	r24, r20
    100c:	8c 93       	st	X, r24
    100e:	b4 c0       	rjmp	.+360    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTB:  SET_BIT(PORTB, Copy_u8PinNum);  break;
    1010:	a8 e3       	ldi	r26, 0x38	; 56
    1012:	b0 e0       	ldi	r27, 0x00	; 0
    1014:	e8 e3       	ldi	r30, 0x38	; 56
    1016:	f0 e0       	ldi	r31, 0x00	; 0
    1018:	80 81       	ld	r24, Z
    101a:	48 2f       	mov	r20, r24
    101c:	8a 81       	ldd	r24, Y+2	; 0x02
    101e:	28 2f       	mov	r18, r24
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	81 e0       	ldi	r24, 0x01	; 1
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	02 2e       	mov	r0, r18
    1028:	02 c0       	rjmp	.+4      	; 0x102e <DIO_voidSetPinValue+0xa8>
    102a:	88 0f       	add	r24, r24
    102c:	99 1f       	adc	r25, r25
    102e:	0a 94       	dec	r0
    1030:	e2 f7       	brpl	.-8      	; 0x102a <DIO_voidSetPinValue+0xa4>
    1032:	84 2b       	or	r24, r20
    1034:	8c 93       	st	X, r24
    1036:	a0 c0       	rjmp	.+320    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTC:  SET_BIT(PORTC, Copy_u8PinNum);  break;
    1038:	a5 e3       	ldi	r26, 0x35	; 53
    103a:	b0 e0       	ldi	r27, 0x00	; 0
    103c:	e5 e3       	ldi	r30, 0x35	; 53
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	80 81       	ld	r24, Z
    1042:	48 2f       	mov	r20, r24
    1044:	8a 81       	ldd	r24, Y+2	; 0x02
    1046:	28 2f       	mov	r18, r24
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	02 2e       	mov	r0, r18
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <DIO_voidSetPinValue+0xd0>
    1052:	88 0f       	add	r24, r24
    1054:	99 1f       	adc	r25, r25
    1056:	0a 94       	dec	r0
    1058:	e2 f7       	brpl	.-8      	; 0x1052 <DIO_voidSetPinValue+0xcc>
    105a:	84 2b       	or	r24, r20
    105c:	8c 93       	st	X, r24
    105e:	8c c0       	rjmp	.+280    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTD:  SET_BIT(PORTD, Copy_u8PinNum);  break;
    1060:	a2 e3       	ldi	r26, 0x32	; 50
    1062:	b0 e0       	ldi	r27, 0x00	; 0
    1064:	e2 e3       	ldi	r30, 0x32	; 50
    1066:	f0 e0       	ldi	r31, 0x00	; 0
    1068:	80 81       	ld	r24, Z
    106a:	48 2f       	mov	r20, r24
    106c:	8a 81       	ldd	r24, Y+2	; 0x02
    106e:	28 2f       	mov	r18, r24
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	81 e0       	ldi	r24, 0x01	; 1
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	02 2e       	mov	r0, r18
    1078:	02 c0       	rjmp	.+4      	; 0x107e <DIO_voidSetPinValue+0xf8>
    107a:	88 0f       	add	r24, r24
    107c:	99 1f       	adc	r25, r25
    107e:	0a 94       	dec	r0
    1080:	e2 f7       	brpl	.-8      	; 0x107a <DIO_voidSetPinValue+0xf4>
    1082:	84 2b       	or	r24, r20
    1084:	8c 93       	st	X, r24
    1086:	78 c0       	rjmp	.+240    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
			default:   /* return error */                     break;
		}
	}
	else if(DIO_u8LOW == Copy_u8Value)
    1088:	8b 81       	ldd	r24, Y+3	; 0x03
    108a:	88 23       	and	r24, r24
    108c:	09 f0       	breq	.+2      	; 0x1090 <DIO_voidSetPinValue+0x10a>
    108e:	74 c0       	rjmp	.+232    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
	{
		switch(Copy_u8PortNum)
    1090:	89 81       	ldd	r24, Y+1	; 0x01
    1092:	28 2f       	mov	r18, r24
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	3d 83       	std	Y+5, r19	; 0x05
    1098:	2c 83       	std	Y+4, r18	; 0x04
    109a:	8c 81       	ldd	r24, Y+4	; 0x04
    109c:	9d 81       	ldd	r25, Y+5	; 0x05
    109e:	82 30       	cpi	r24, 0x02	; 2
    10a0:	91 05       	cpc	r25, r1
    10a2:	61 f1       	breq	.+88     	; 0x10fc <DIO_voidSetPinValue+0x176>
    10a4:	2c 81       	ldd	r18, Y+4	; 0x04
    10a6:	3d 81       	ldd	r19, Y+5	; 0x05
    10a8:	23 30       	cpi	r18, 0x03	; 3
    10aa:	31 05       	cpc	r19, r1
    10ac:	34 f4       	brge	.+12     	; 0x10ba <DIO_voidSetPinValue+0x134>
    10ae:	8c 81       	ldd	r24, Y+4	; 0x04
    10b0:	9d 81       	ldd	r25, Y+5	; 0x05
    10b2:	81 30       	cpi	r24, 0x01	; 1
    10b4:	91 05       	cpc	r25, r1
    10b6:	69 f0       	breq	.+26     	; 0x10d2 <DIO_voidSetPinValue+0x14c>
    10b8:	5f c0       	rjmp	.+190    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
    10ba:	2c 81       	ldd	r18, Y+4	; 0x04
    10bc:	3d 81       	ldd	r19, Y+5	; 0x05
    10be:	23 30       	cpi	r18, 0x03	; 3
    10c0:	31 05       	cpc	r19, r1
    10c2:	89 f1       	breq	.+98     	; 0x1126 <DIO_voidSetPinValue+0x1a0>
    10c4:	8c 81       	ldd	r24, Y+4	; 0x04
    10c6:	9d 81       	ldd	r25, Y+5	; 0x05
    10c8:	84 30       	cpi	r24, 0x04	; 4
    10ca:	91 05       	cpc	r25, r1
    10cc:	09 f4       	brne	.+2      	; 0x10d0 <DIO_voidSetPinValue+0x14a>
    10ce:	40 c0       	rjmp	.+128    	; 0x1150 <DIO_voidSetPinValue+0x1ca>
    10d0:	53 c0       	rjmp	.+166    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
		{
			case DIO_u8PORTA:  CLR_BIT(PORTA, Copy_u8PinNum);  break;
    10d2:	ab e3       	ldi	r26, 0x3B	; 59
    10d4:	b0 e0       	ldi	r27, 0x00	; 0
    10d6:	eb e3       	ldi	r30, 0x3B	; 59
    10d8:	f0 e0       	ldi	r31, 0x00	; 0
    10da:	80 81       	ld	r24, Z
    10dc:	48 2f       	mov	r20, r24
    10de:	8a 81       	ldd	r24, Y+2	; 0x02
    10e0:	28 2f       	mov	r18, r24
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	81 e0       	ldi	r24, 0x01	; 1
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	02 2e       	mov	r0, r18
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <DIO_voidSetPinValue+0x16a>
    10ec:	88 0f       	add	r24, r24
    10ee:	99 1f       	adc	r25, r25
    10f0:	0a 94       	dec	r0
    10f2:	e2 f7       	brpl	.-8      	; 0x10ec <DIO_voidSetPinValue+0x166>
    10f4:	80 95       	com	r24
    10f6:	84 23       	and	r24, r20
    10f8:	8c 93       	st	X, r24
    10fa:	3e c0       	rjmp	.+124    	; 0x1178 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTB:  CLR_BIT(PORTB, Copy_u8PinNum);  break;
    10fc:	a8 e3       	ldi	r26, 0x38	; 56
    10fe:	b0 e0       	ldi	r27, 0x00	; 0
    1100:	e8 e3       	ldi	r30, 0x38	; 56
    1102:	f0 e0       	ldi	r31, 0x00	; 0
    1104:	80 81       	ld	r24, Z
    1106:	48 2f       	mov	r20, r24
    1108:	8a 81       	ldd	r24, Y+2	; 0x02
    110a:	28 2f       	mov	r18, r24
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	02 2e       	mov	r0, r18
    1114:	02 c0       	rjmp	.+4      	; 0x111a <DIO_voidSetPinValue+0x194>
    1116:	88 0f       	add	r24, r24
    1118:	99 1f       	adc	r25, r25
    111a:	0a 94       	dec	r0
    111c:	e2 f7       	brpl	.-8      	; 0x1116 <DIO_voidSetPinValue+0x190>
    111e:	80 95       	com	r24
    1120:	84 23       	and	r24, r20
    1122:	8c 93       	st	X, r24
    1124:	29 c0       	rjmp	.+82     	; 0x1178 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTC:  CLR_BIT(PORTC, Copy_u8PinNum);  break;
    1126:	a5 e3       	ldi	r26, 0x35	; 53
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	e5 e3       	ldi	r30, 0x35	; 53
    112c:	f0 e0       	ldi	r31, 0x00	; 0
    112e:	80 81       	ld	r24, Z
    1130:	48 2f       	mov	r20, r24
    1132:	8a 81       	ldd	r24, Y+2	; 0x02
    1134:	28 2f       	mov	r18, r24
    1136:	30 e0       	ldi	r19, 0x00	; 0
    1138:	81 e0       	ldi	r24, 0x01	; 1
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	02 2e       	mov	r0, r18
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <DIO_voidSetPinValue+0x1be>
    1140:	88 0f       	add	r24, r24
    1142:	99 1f       	adc	r25, r25
    1144:	0a 94       	dec	r0
    1146:	e2 f7       	brpl	.-8      	; 0x1140 <DIO_voidSetPinValue+0x1ba>
    1148:	80 95       	com	r24
    114a:	84 23       	and	r24, r20
    114c:	8c 93       	st	X, r24
    114e:	14 c0       	rjmp	.+40     	; 0x1178 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTD:  CLR_BIT(PORTD, Copy_u8PinNum);  break;
    1150:	a2 e3       	ldi	r26, 0x32	; 50
    1152:	b0 e0       	ldi	r27, 0x00	; 0
    1154:	e2 e3       	ldi	r30, 0x32	; 50
    1156:	f0 e0       	ldi	r31, 0x00	; 0
    1158:	80 81       	ld	r24, Z
    115a:	48 2f       	mov	r20, r24
    115c:	8a 81       	ldd	r24, Y+2	; 0x02
    115e:	28 2f       	mov	r18, r24
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	81 e0       	ldi	r24, 0x01	; 1
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	02 2e       	mov	r0, r18
    1168:	02 c0       	rjmp	.+4      	; 0x116e <DIO_voidSetPinValue+0x1e8>
    116a:	88 0f       	add	r24, r24
    116c:	99 1f       	adc	r25, r25
    116e:	0a 94       	dec	r0
    1170:	e2 f7       	brpl	.-8      	; 0x116a <DIO_voidSetPinValue+0x1e4>
    1172:	80 95       	com	r24
    1174:	84 23       	and	r24, r20
    1176:	8c 93       	st	X, r24
	else
	{
		/* return error */
	}

}
    1178:	27 96       	adiw	r28, 0x07	; 7
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	f8 94       	cli
    117e:	de bf       	out	0x3e, r29	; 62
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	cd bf       	out	0x3d, r28	; 61
    1184:	cf 91       	pop	r28
    1186:	df 91       	pop	r29
    1188:	08 95       	ret

0000118a <DIO_u8GetPinValue>:


uint8 DIO_u8GetPinValue(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum)
{
    118a:	df 93       	push	r29
    118c:	cf 93       	push	r28
    118e:	00 d0       	rcall	.+0      	; 0x1190 <DIO_u8GetPinValue+0x6>
    1190:	00 d0       	rcall	.+0      	; 0x1192 <DIO_u8GetPinValue+0x8>
    1192:	0f 92       	push	r0
    1194:	cd b7       	in	r28, 0x3d	; 61
    1196:	de b7       	in	r29, 0x3e	; 62
    1198:	8a 83       	std	Y+2, r24	; 0x02
    119a:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_u8Result = 0;
    119c:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8PortNum)
    119e:	8a 81       	ldd	r24, Y+2	; 0x02
    11a0:	28 2f       	mov	r18, r24
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	3d 83       	std	Y+5, r19	; 0x05
    11a6:	2c 83       	std	Y+4, r18	; 0x04
    11a8:	4c 81       	ldd	r20, Y+4	; 0x04
    11aa:	5d 81       	ldd	r21, Y+5	; 0x05
    11ac:	42 30       	cpi	r20, 0x02	; 2
    11ae:	51 05       	cpc	r21, r1
    11b0:	41 f1       	breq	.+80     	; 0x1202 <DIO_u8GetPinValue+0x78>
    11b2:	8c 81       	ldd	r24, Y+4	; 0x04
    11b4:	9d 81       	ldd	r25, Y+5	; 0x05
    11b6:	83 30       	cpi	r24, 0x03	; 3
    11b8:	91 05       	cpc	r25, r1
    11ba:	34 f4       	brge	.+12     	; 0x11c8 <DIO_u8GetPinValue+0x3e>
    11bc:	2c 81       	ldd	r18, Y+4	; 0x04
    11be:	3d 81       	ldd	r19, Y+5	; 0x05
    11c0:	21 30       	cpi	r18, 0x01	; 1
    11c2:	31 05       	cpc	r19, r1
    11c4:	61 f0       	breq	.+24     	; 0x11de <DIO_u8GetPinValue+0x54>
    11c6:	52 c0       	rjmp	.+164    	; 0x126c <DIO_u8GetPinValue+0xe2>
    11c8:	4c 81       	ldd	r20, Y+4	; 0x04
    11ca:	5d 81       	ldd	r21, Y+5	; 0x05
    11cc:	43 30       	cpi	r20, 0x03	; 3
    11ce:	51 05       	cpc	r21, r1
    11d0:	51 f1       	breq	.+84     	; 0x1226 <DIO_u8GetPinValue+0x9c>
    11d2:	8c 81       	ldd	r24, Y+4	; 0x04
    11d4:	9d 81       	ldd	r25, Y+5	; 0x05
    11d6:	84 30       	cpi	r24, 0x04	; 4
    11d8:	91 05       	cpc	r25, r1
    11da:	b9 f1       	breq	.+110    	; 0x124a <DIO_u8GetPinValue+0xc0>
    11dc:	47 c0       	rjmp	.+142    	; 0x126c <DIO_u8GetPinValue+0xe2>
	{
		case DIO_u8PORTA: Local_u8Result = GET_BIT(PINA, Copy_u8PinNum);  break;
    11de:	e9 e3       	ldi	r30, 0x39	; 57
    11e0:	f0 e0       	ldi	r31, 0x00	; 0
    11e2:	80 81       	ld	r24, Z
    11e4:	28 2f       	mov	r18, r24
    11e6:	30 e0       	ldi	r19, 0x00	; 0
    11e8:	8b 81       	ldd	r24, Y+3	; 0x03
    11ea:	88 2f       	mov	r24, r24
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	a9 01       	movw	r20, r18
    11f0:	02 c0       	rjmp	.+4      	; 0x11f6 <DIO_u8GetPinValue+0x6c>
    11f2:	55 95       	asr	r21
    11f4:	47 95       	ror	r20
    11f6:	8a 95       	dec	r24
    11f8:	e2 f7       	brpl	.-8      	; 0x11f2 <DIO_u8GetPinValue+0x68>
    11fa:	ca 01       	movw	r24, r20
    11fc:	81 70       	andi	r24, 0x01	; 1
    11fe:	89 83       	std	Y+1, r24	; 0x01
    1200:	35 c0       	rjmp	.+106    	; 0x126c <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTB: Local_u8Result = GET_BIT(PINB, Copy_u8PinNum);  break;
    1202:	e6 e3       	ldi	r30, 0x36	; 54
    1204:	f0 e0       	ldi	r31, 0x00	; 0
    1206:	80 81       	ld	r24, Z
    1208:	28 2f       	mov	r18, r24
    120a:	30 e0       	ldi	r19, 0x00	; 0
    120c:	8b 81       	ldd	r24, Y+3	; 0x03
    120e:	88 2f       	mov	r24, r24
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	a9 01       	movw	r20, r18
    1214:	02 c0       	rjmp	.+4      	; 0x121a <DIO_u8GetPinValue+0x90>
    1216:	55 95       	asr	r21
    1218:	47 95       	ror	r20
    121a:	8a 95       	dec	r24
    121c:	e2 f7       	brpl	.-8      	; 0x1216 <DIO_u8GetPinValue+0x8c>
    121e:	ca 01       	movw	r24, r20
    1220:	81 70       	andi	r24, 0x01	; 1
    1222:	89 83       	std	Y+1, r24	; 0x01
    1224:	23 c0       	rjmp	.+70     	; 0x126c <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTC: Local_u8Result = GET_BIT(PINC, Copy_u8PinNum);  break;
    1226:	e3 e3       	ldi	r30, 0x33	; 51
    1228:	f0 e0       	ldi	r31, 0x00	; 0
    122a:	80 81       	ld	r24, Z
    122c:	28 2f       	mov	r18, r24
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	8b 81       	ldd	r24, Y+3	; 0x03
    1232:	88 2f       	mov	r24, r24
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	a9 01       	movw	r20, r18
    1238:	02 c0       	rjmp	.+4      	; 0x123e <DIO_u8GetPinValue+0xb4>
    123a:	55 95       	asr	r21
    123c:	47 95       	ror	r20
    123e:	8a 95       	dec	r24
    1240:	e2 f7       	brpl	.-8      	; 0x123a <DIO_u8GetPinValue+0xb0>
    1242:	ca 01       	movw	r24, r20
    1244:	81 70       	andi	r24, 0x01	; 1
    1246:	89 83       	std	Y+1, r24	; 0x01
    1248:	11 c0       	rjmp	.+34     	; 0x126c <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTD: Local_u8Result = GET_BIT(PIND, Copy_u8PinNum);  break;
    124a:	e0 e3       	ldi	r30, 0x30	; 48
    124c:	f0 e0       	ldi	r31, 0x00	; 0
    124e:	80 81       	ld	r24, Z
    1250:	28 2f       	mov	r18, r24
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	8b 81       	ldd	r24, Y+3	; 0x03
    1256:	88 2f       	mov	r24, r24
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	a9 01       	movw	r20, r18
    125c:	02 c0       	rjmp	.+4      	; 0x1262 <DIO_u8GetPinValue+0xd8>
    125e:	55 95       	asr	r21
    1260:	47 95       	ror	r20
    1262:	8a 95       	dec	r24
    1264:	e2 f7       	brpl	.-8      	; 0x125e <DIO_u8GetPinValue+0xd4>
    1266:	ca 01       	movw	r24, r20
    1268:	81 70       	andi	r24, 0x01	; 1
    126a:	89 83       	std	Y+1, r24	; 0x01
		default:   /* return error */                                     break;
	}

	return Local_u8Result;
    126c:	89 81       	ldd	r24, Y+1	; 0x01

}
    126e:	0f 90       	pop	r0
    1270:	0f 90       	pop	r0
    1272:	0f 90       	pop	r0
    1274:	0f 90       	pop	r0
    1276:	0f 90       	pop	r0
    1278:	cf 91       	pop	r28
    127a:	df 91       	pop	r29
    127c:	08 95       	ret

0000127e <DIO_voidSetPortDirection>:


void DIO_voidSetPortDirection(uint8 Copy_u8PortNum, uint8 Copy_u8Direction)
{
    127e:	df 93       	push	r29
    1280:	cf 93       	push	r28
    1282:	00 d0       	rcall	.+0      	; 0x1284 <DIO_voidSetPortDirection+0x6>
    1284:	00 d0       	rcall	.+0      	; 0x1286 <DIO_voidSetPortDirection+0x8>
    1286:	00 d0       	rcall	.+0      	; 0x1288 <DIO_voidSetPortDirection+0xa>
    1288:	cd b7       	in	r28, 0x3d	; 61
    128a:	de b7       	in	r29, 0x3e	; 62
    128c:	89 83       	std	Y+1, r24	; 0x01
    128e:	6a 83       	std	Y+2, r22	; 0x02
	if(DIO_u8OUTPUT == Copy_u8Direction)
    1290:	8a 81       	ldd	r24, Y+2	; 0x02
    1292:	81 30       	cpi	r24, 0x01	; 1
    1294:	a1 f5       	brne	.+104    	; 0x12fe <DIO_voidSetPortDirection+0x80>
	{
		switch(Copy_u8PortNum)
    1296:	89 81       	ldd	r24, Y+1	; 0x01
    1298:	28 2f       	mov	r18, r24
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	3e 83       	std	Y+6, r19	; 0x06
    129e:	2d 83       	std	Y+5, r18	; 0x05
    12a0:	8d 81       	ldd	r24, Y+5	; 0x05
    12a2:	9e 81       	ldd	r25, Y+6	; 0x06
    12a4:	82 30       	cpi	r24, 0x02	; 2
    12a6:	91 05       	cpc	r25, r1
    12a8:	d9 f0       	breq	.+54     	; 0x12e0 <DIO_voidSetPortDirection+0x62>
    12aa:	2d 81       	ldd	r18, Y+5	; 0x05
    12ac:	3e 81       	ldd	r19, Y+6	; 0x06
    12ae:	23 30       	cpi	r18, 0x03	; 3
    12b0:	31 05       	cpc	r19, r1
    12b2:	34 f4       	brge	.+12     	; 0x12c0 <DIO_voidSetPortDirection+0x42>
    12b4:	8d 81       	ldd	r24, Y+5	; 0x05
    12b6:	9e 81       	ldd	r25, Y+6	; 0x06
    12b8:	81 30       	cpi	r24, 0x01	; 1
    12ba:	91 05       	cpc	r25, r1
    12bc:	61 f0       	breq	.+24     	; 0x12d6 <DIO_voidSetPortDirection+0x58>
    12be:	51 c0       	rjmp	.+162    	; 0x1362 <DIO_voidSetPortDirection+0xe4>
    12c0:	2d 81       	ldd	r18, Y+5	; 0x05
    12c2:	3e 81       	ldd	r19, Y+6	; 0x06
    12c4:	23 30       	cpi	r18, 0x03	; 3
    12c6:	31 05       	cpc	r19, r1
    12c8:	81 f0       	breq	.+32     	; 0x12ea <DIO_voidSetPortDirection+0x6c>
    12ca:	8d 81       	ldd	r24, Y+5	; 0x05
    12cc:	9e 81       	ldd	r25, Y+6	; 0x06
    12ce:	84 30       	cpi	r24, 0x04	; 4
    12d0:	91 05       	cpc	r25, r1
    12d2:	81 f0       	breq	.+32     	; 0x12f4 <DIO_voidSetPortDirection+0x76>
    12d4:	46 c0       	rjmp	.+140    	; 0x1362 <DIO_voidSetPortDirection+0xe4>
		{
			case DIO_u8PORTA:  DDRA = 0XFF;  break;
    12d6:	ea e3       	ldi	r30, 0x3A	; 58
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	8f ef       	ldi	r24, 0xFF	; 255
    12dc:	80 83       	st	Z, r24
    12de:	41 c0       	rjmp	.+130    	; 0x1362 <DIO_voidSetPortDirection+0xe4>
			case DIO_u8PORTB:  DDRB = 0XFF;  break;
    12e0:	e7 e3       	ldi	r30, 0x37	; 55
    12e2:	f0 e0       	ldi	r31, 0x00	; 0
    12e4:	8f ef       	ldi	r24, 0xFF	; 255
    12e6:	80 83       	st	Z, r24
    12e8:	3c c0       	rjmp	.+120    	; 0x1362 <DIO_voidSetPortDirection+0xe4>
			case DIO_u8PORTC:  DDRC = 0XFF;  break;
    12ea:	e4 e3       	ldi	r30, 0x34	; 52
    12ec:	f0 e0       	ldi	r31, 0x00	; 0
    12ee:	8f ef       	ldi	r24, 0xFF	; 255
    12f0:	80 83       	st	Z, r24
    12f2:	37 c0       	rjmp	.+110    	; 0x1362 <DIO_voidSetPortDirection+0xe4>
			case DIO_u8PORTD:  DDRD = 0XFF;  break;
    12f4:	e1 e3       	ldi	r30, 0x31	; 49
    12f6:	f0 e0       	ldi	r31, 0x00	; 0
    12f8:	8f ef       	ldi	r24, 0xFF	; 255
    12fa:	80 83       	st	Z, r24
    12fc:	32 c0       	rjmp	.+100    	; 0x1362 <DIO_voidSetPortDirection+0xe4>
			default:   /* return error */    break;
		}
	}
	else if(DIO_u8INPUT == Copy_u8Direction)
    12fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1300:	88 23       	and	r24, r24
    1302:	79 f5       	brne	.+94     	; 0x1362 <DIO_voidSetPortDirection+0xe4>
	{
		switch(Copy_u8PortNum)
    1304:	89 81       	ldd	r24, Y+1	; 0x01
    1306:	28 2f       	mov	r18, r24
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	3c 83       	std	Y+4, r19	; 0x04
    130c:	2b 83       	std	Y+3, r18	; 0x03
    130e:	8b 81       	ldd	r24, Y+3	; 0x03
    1310:	9c 81       	ldd	r25, Y+4	; 0x04
    1312:	82 30       	cpi	r24, 0x02	; 2
    1314:	91 05       	cpc	r25, r1
    1316:	d1 f0       	breq	.+52     	; 0x134c <DIO_voidSetPortDirection+0xce>
    1318:	2b 81       	ldd	r18, Y+3	; 0x03
    131a:	3c 81       	ldd	r19, Y+4	; 0x04
    131c:	23 30       	cpi	r18, 0x03	; 3
    131e:	31 05       	cpc	r19, r1
    1320:	34 f4       	brge	.+12     	; 0x132e <DIO_voidSetPortDirection+0xb0>
    1322:	8b 81       	ldd	r24, Y+3	; 0x03
    1324:	9c 81       	ldd	r25, Y+4	; 0x04
    1326:	81 30       	cpi	r24, 0x01	; 1
    1328:	91 05       	cpc	r25, r1
    132a:	61 f0       	breq	.+24     	; 0x1344 <DIO_voidSetPortDirection+0xc6>
    132c:	1a c0       	rjmp	.+52     	; 0x1362 <DIO_voidSetPortDirection+0xe4>
    132e:	2b 81       	ldd	r18, Y+3	; 0x03
    1330:	3c 81       	ldd	r19, Y+4	; 0x04
    1332:	23 30       	cpi	r18, 0x03	; 3
    1334:	31 05       	cpc	r19, r1
    1336:	71 f0       	breq	.+28     	; 0x1354 <DIO_voidSetPortDirection+0xd6>
    1338:	8b 81       	ldd	r24, Y+3	; 0x03
    133a:	9c 81       	ldd	r25, Y+4	; 0x04
    133c:	84 30       	cpi	r24, 0x04	; 4
    133e:	91 05       	cpc	r25, r1
    1340:	69 f0       	breq	.+26     	; 0x135c <DIO_voidSetPortDirection+0xde>
    1342:	0f c0       	rjmp	.+30     	; 0x1362 <DIO_voidSetPortDirection+0xe4>
		{
		case DIO_u8PORTA:  DDRA = 0X00;  break;
    1344:	ea e3       	ldi	r30, 0x3A	; 58
    1346:	f0 e0       	ldi	r31, 0x00	; 0
    1348:	10 82       	st	Z, r1
    134a:	0b c0       	rjmp	.+22     	; 0x1362 <DIO_voidSetPortDirection+0xe4>
		case DIO_u8PORTB:  DDRB = 0X00;  break;
    134c:	e7 e3       	ldi	r30, 0x37	; 55
    134e:	f0 e0       	ldi	r31, 0x00	; 0
    1350:	10 82       	st	Z, r1
    1352:	07 c0       	rjmp	.+14     	; 0x1362 <DIO_voidSetPortDirection+0xe4>
		case DIO_u8PORTC:  DDRC = 0X00;  break;
    1354:	e4 e3       	ldi	r30, 0x34	; 52
    1356:	f0 e0       	ldi	r31, 0x00	; 0
    1358:	10 82       	st	Z, r1
    135a:	03 c0       	rjmp	.+6      	; 0x1362 <DIO_voidSetPortDirection+0xe4>
		case DIO_u8PORTD:  DDRD = 0X00;  break;
    135c:	e1 e3       	ldi	r30, 0x31	; 49
    135e:	f0 e0       	ldi	r31, 0x00	; 0
    1360:	10 82       	st	Z, r1
	}
	else
	{
		/*		return error		*/
	}
}
    1362:	26 96       	adiw	r28, 0x06	; 6
    1364:	0f b6       	in	r0, 0x3f	; 63
    1366:	f8 94       	cli
    1368:	de bf       	out	0x3e, r29	; 62
    136a:	0f be       	out	0x3f, r0	; 63
    136c:	cd bf       	out	0x3d, r28	; 61
    136e:	cf 91       	pop	r28
    1370:	df 91       	pop	r29
    1372:	08 95       	ret

00001374 <DIO_voidSetPortValue>:


void DIO_voidSetPortValue(uint8 Copy_u8PortNum, uint8 Copy_u8Value)
{
    1374:	df 93       	push	r29
    1376:	cf 93       	push	r28
    1378:	00 d0       	rcall	.+0      	; 0x137a <DIO_voidSetPortValue+0x6>
    137a:	00 d0       	rcall	.+0      	; 0x137c <DIO_voidSetPortValue+0x8>
    137c:	cd b7       	in	r28, 0x3d	; 61
    137e:	de b7       	in	r29, 0x3e	; 62
    1380:	89 83       	std	Y+1, r24	; 0x01
    1382:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    1384:	89 81       	ldd	r24, Y+1	; 0x01
    1386:	28 2f       	mov	r18, r24
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	3c 83       	std	Y+4, r19	; 0x04
    138c:	2b 83       	std	Y+3, r18	; 0x03
    138e:	8b 81       	ldd	r24, Y+3	; 0x03
    1390:	9c 81       	ldd	r25, Y+4	; 0x04
    1392:	82 30       	cpi	r24, 0x02	; 2
    1394:	91 05       	cpc	r25, r1
    1396:	d9 f0       	breq	.+54     	; 0x13ce <DIO_voidSetPortValue+0x5a>
    1398:	2b 81       	ldd	r18, Y+3	; 0x03
    139a:	3c 81       	ldd	r19, Y+4	; 0x04
    139c:	23 30       	cpi	r18, 0x03	; 3
    139e:	31 05       	cpc	r19, r1
    13a0:	34 f4       	brge	.+12     	; 0x13ae <DIO_voidSetPortValue+0x3a>
    13a2:	8b 81       	ldd	r24, Y+3	; 0x03
    13a4:	9c 81       	ldd	r25, Y+4	; 0x04
    13a6:	81 30       	cpi	r24, 0x01	; 1
    13a8:	91 05       	cpc	r25, r1
    13aa:	61 f0       	breq	.+24     	; 0x13c4 <DIO_voidSetPortValue+0x50>
    13ac:	1e c0       	rjmp	.+60     	; 0x13ea <DIO_voidSetPortValue+0x76>
    13ae:	2b 81       	ldd	r18, Y+3	; 0x03
    13b0:	3c 81       	ldd	r19, Y+4	; 0x04
    13b2:	23 30       	cpi	r18, 0x03	; 3
    13b4:	31 05       	cpc	r19, r1
    13b6:	81 f0       	breq	.+32     	; 0x13d8 <DIO_voidSetPortValue+0x64>
    13b8:	8b 81       	ldd	r24, Y+3	; 0x03
    13ba:	9c 81       	ldd	r25, Y+4	; 0x04
    13bc:	84 30       	cpi	r24, 0x04	; 4
    13be:	91 05       	cpc	r25, r1
    13c0:	81 f0       	breq	.+32     	; 0x13e2 <DIO_voidSetPortValue+0x6e>
    13c2:	13 c0       	rjmp	.+38     	; 0x13ea <DIO_voidSetPortValue+0x76>
	{
		case DIO_u8PORTA:  PORTA = Copy_u8Value;  break;
    13c4:	eb e3       	ldi	r30, 0x3B	; 59
    13c6:	f0 e0       	ldi	r31, 0x00	; 0
    13c8:	8a 81       	ldd	r24, Y+2	; 0x02
    13ca:	80 83       	st	Z, r24
    13cc:	0e c0       	rjmp	.+28     	; 0x13ea <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTB:  PORTB = Copy_u8Value;  break;
    13ce:	e8 e3       	ldi	r30, 0x38	; 56
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	8a 81       	ldd	r24, Y+2	; 0x02
    13d4:	80 83       	st	Z, r24
    13d6:	09 c0       	rjmp	.+18     	; 0x13ea <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTC:  PORTC = Copy_u8Value;  break;
    13d8:	e5 e3       	ldi	r30, 0x35	; 53
    13da:	f0 e0       	ldi	r31, 0x00	; 0
    13dc:	8a 81       	ldd	r24, Y+2	; 0x02
    13de:	80 83       	st	Z, r24
    13e0:	04 c0       	rjmp	.+8      	; 0x13ea <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTD:  PORTD = Copy_u8Value;  break;
    13e2:	e2 e3       	ldi	r30, 0x32	; 50
    13e4:	f0 e0       	ldi	r31, 0x00	; 0
    13e6:	8a 81       	ldd	r24, Y+2	; 0x02
    13e8:	80 83       	st	Z, r24
		default:   /* return error */     break;
	}
}
    13ea:	0f 90       	pop	r0
    13ec:	0f 90       	pop	r0
    13ee:	0f 90       	pop	r0
    13f0:	0f 90       	pop	r0
    13f2:	cf 91       	pop	r28
    13f4:	df 91       	pop	r29
    13f6:	08 95       	ret

000013f8 <DIO_voidTogglePin>:


void DIO_voidTogglePin(uint8 Copy_u8PortNum, uint8 Copy_u8PinNum)
{
    13f8:	df 93       	push	r29
    13fa:	cf 93       	push	r28
    13fc:	00 d0       	rcall	.+0      	; 0x13fe <DIO_voidTogglePin+0x6>
    13fe:	00 d0       	rcall	.+0      	; 0x1400 <DIO_voidTogglePin+0x8>
    1400:	cd b7       	in	r28, 0x3d	; 61
    1402:	de b7       	in	r29, 0x3e	; 62
    1404:	89 83       	std	Y+1, r24	; 0x01
    1406:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortNum)
    1408:	89 81       	ldd	r24, Y+1	; 0x01
    140a:	28 2f       	mov	r18, r24
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	3c 83       	std	Y+4, r19	; 0x04
    1410:	2b 83       	std	Y+3, r18	; 0x03
    1412:	8b 81       	ldd	r24, Y+3	; 0x03
    1414:	9c 81       	ldd	r25, Y+4	; 0x04
    1416:	82 30       	cpi	r24, 0x02	; 2
    1418:	91 05       	cpc	r25, r1
    141a:	51 f1       	breq	.+84     	; 0x1470 <DIO_voidTogglePin+0x78>
    141c:	2b 81       	ldd	r18, Y+3	; 0x03
    141e:	3c 81       	ldd	r19, Y+4	; 0x04
    1420:	23 30       	cpi	r18, 0x03	; 3
    1422:	31 05       	cpc	r19, r1
    1424:	34 f4       	brge	.+12     	; 0x1432 <DIO_voidTogglePin+0x3a>
    1426:	8b 81       	ldd	r24, Y+3	; 0x03
    1428:	9c 81       	ldd	r25, Y+4	; 0x04
    142a:	81 30       	cpi	r24, 0x01	; 1
    142c:	91 05       	cpc	r25, r1
    142e:	61 f0       	breq	.+24     	; 0x1448 <DIO_voidTogglePin+0x50>
    1430:	5a c0       	rjmp	.+180    	; 0x14e6 <DIO_voidTogglePin+0xee>
    1432:	2b 81       	ldd	r18, Y+3	; 0x03
    1434:	3c 81       	ldd	r19, Y+4	; 0x04
    1436:	23 30       	cpi	r18, 0x03	; 3
    1438:	31 05       	cpc	r19, r1
    143a:	71 f1       	breq	.+92     	; 0x1498 <DIO_voidTogglePin+0xa0>
    143c:	8b 81       	ldd	r24, Y+3	; 0x03
    143e:	9c 81       	ldd	r25, Y+4	; 0x04
    1440:	84 30       	cpi	r24, 0x04	; 4
    1442:	91 05       	cpc	r25, r1
    1444:	e9 f1       	breq	.+122    	; 0x14c0 <DIO_voidTogglePin+0xc8>
    1446:	4f c0       	rjmp	.+158    	; 0x14e6 <DIO_voidTogglePin+0xee>
	{
		case DIO_u8PORTA:  TOG_BIT(PORTA, Copy_u8PinNum);  break;
    1448:	ab e3       	ldi	r26, 0x3B	; 59
    144a:	b0 e0       	ldi	r27, 0x00	; 0
    144c:	eb e3       	ldi	r30, 0x3B	; 59
    144e:	f0 e0       	ldi	r31, 0x00	; 0
    1450:	80 81       	ld	r24, Z
    1452:	48 2f       	mov	r20, r24
    1454:	8a 81       	ldd	r24, Y+2	; 0x02
    1456:	28 2f       	mov	r18, r24
    1458:	30 e0       	ldi	r19, 0x00	; 0
    145a:	81 e0       	ldi	r24, 0x01	; 1
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	02 2e       	mov	r0, r18
    1460:	02 c0       	rjmp	.+4      	; 0x1466 <DIO_voidTogglePin+0x6e>
    1462:	88 0f       	add	r24, r24
    1464:	99 1f       	adc	r25, r25
    1466:	0a 94       	dec	r0
    1468:	e2 f7       	brpl	.-8      	; 0x1462 <DIO_voidTogglePin+0x6a>
    146a:	84 27       	eor	r24, r20
    146c:	8c 93       	st	X, r24
    146e:	3b c0       	rjmp	.+118    	; 0x14e6 <DIO_voidTogglePin+0xee>
		case DIO_u8PORTB:  TOG_BIT(PORTB, Copy_u8PinNum);  break;
    1470:	a8 e3       	ldi	r26, 0x38	; 56
    1472:	b0 e0       	ldi	r27, 0x00	; 0
    1474:	e8 e3       	ldi	r30, 0x38	; 56
    1476:	f0 e0       	ldi	r31, 0x00	; 0
    1478:	80 81       	ld	r24, Z
    147a:	48 2f       	mov	r20, r24
    147c:	8a 81       	ldd	r24, Y+2	; 0x02
    147e:	28 2f       	mov	r18, r24
    1480:	30 e0       	ldi	r19, 0x00	; 0
    1482:	81 e0       	ldi	r24, 0x01	; 1
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	02 2e       	mov	r0, r18
    1488:	02 c0       	rjmp	.+4      	; 0x148e <DIO_voidTogglePin+0x96>
    148a:	88 0f       	add	r24, r24
    148c:	99 1f       	adc	r25, r25
    148e:	0a 94       	dec	r0
    1490:	e2 f7       	brpl	.-8      	; 0x148a <DIO_voidTogglePin+0x92>
    1492:	84 27       	eor	r24, r20
    1494:	8c 93       	st	X, r24
    1496:	27 c0       	rjmp	.+78     	; 0x14e6 <DIO_voidTogglePin+0xee>
		case DIO_u8PORTC:  TOG_BIT(PORTC, Copy_u8PinNum);  break;
    1498:	a5 e3       	ldi	r26, 0x35	; 53
    149a:	b0 e0       	ldi	r27, 0x00	; 0
    149c:	e5 e3       	ldi	r30, 0x35	; 53
    149e:	f0 e0       	ldi	r31, 0x00	; 0
    14a0:	80 81       	ld	r24, Z
    14a2:	48 2f       	mov	r20, r24
    14a4:	8a 81       	ldd	r24, Y+2	; 0x02
    14a6:	28 2f       	mov	r18, r24
    14a8:	30 e0       	ldi	r19, 0x00	; 0
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	02 2e       	mov	r0, r18
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <DIO_voidTogglePin+0xbe>
    14b2:	88 0f       	add	r24, r24
    14b4:	99 1f       	adc	r25, r25
    14b6:	0a 94       	dec	r0
    14b8:	e2 f7       	brpl	.-8      	; 0x14b2 <DIO_voidTogglePin+0xba>
    14ba:	84 27       	eor	r24, r20
    14bc:	8c 93       	st	X, r24
    14be:	13 c0       	rjmp	.+38     	; 0x14e6 <DIO_voidTogglePin+0xee>
		case DIO_u8PORTD:  TOG_BIT(PORTD, Copy_u8PinNum);  break;
    14c0:	a2 e3       	ldi	r26, 0x32	; 50
    14c2:	b0 e0       	ldi	r27, 0x00	; 0
    14c4:	e2 e3       	ldi	r30, 0x32	; 50
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	80 81       	ld	r24, Z
    14ca:	48 2f       	mov	r20, r24
    14cc:	8a 81       	ldd	r24, Y+2	; 0x02
    14ce:	28 2f       	mov	r18, r24
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	81 e0       	ldi	r24, 0x01	; 1
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	02 2e       	mov	r0, r18
    14d8:	02 c0       	rjmp	.+4      	; 0x14de <DIO_voidTogglePin+0xe6>
    14da:	88 0f       	add	r24, r24
    14dc:	99 1f       	adc	r25, r25
    14de:	0a 94       	dec	r0
    14e0:	e2 f7       	brpl	.-8      	; 0x14da <DIO_voidTogglePin+0xe2>
    14e2:	84 27       	eor	r24, r20
    14e4:	8c 93       	st	X, r24
		default:   /*		return error		*/  	   break;
	}
}
    14e6:	0f 90       	pop	r0
    14e8:	0f 90       	pop	r0
    14ea:	0f 90       	pop	r0
    14ec:	0f 90       	pop	r0
    14ee:	cf 91       	pop	r28
    14f0:	df 91       	pop	r29
    14f2:	08 95       	ret

000014f4 <SSD_voidDecCount_0_9>:
        0b01111111, // 8
        0b01101111  // 9
    };

void SSD_voidDecCount_0_9 (uint8 Copy_u8PortNum, uint8 Copy_u8StartNum, uint8 Copy_u8DelayMs)
{
    14f4:	df 93       	push	r29
    14f6:	cf 93       	push	r28
    14f8:	cd b7       	in	r28, 0x3d	; 61
    14fa:	de b7       	in	r29, 0x3e	; 62
    14fc:	62 97       	sbiw	r28, 0x12	; 18
    14fe:	0f b6       	in	r0, 0x3f	; 63
    1500:	f8 94       	cli
    1502:	de bf       	out	0x3e, r29	; 62
    1504:	0f be       	out	0x3f, r0	; 63
    1506:	cd bf       	out	0x3d, r28	; 61
    1508:	88 8b       	std	Y+16, r24	; 0x10
    150a:	69 8b       	std	Y+17, r22	; 0x11
    150c:	4a 8b       	std	Y+18, r20	; 0x12
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
    150e:	88 89       	ldd	r24, Y+16	; 0x10
    1510:	61 e0       	ldi	r22, 0x01	; 1
    1512:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>
	uint8 i = 0;
    1516:	1f 86       	std	Y+15, r1	; 0x0f

	for(i = Copy_u8StartNum ; i > 0 ; i--){
    1518:	89 89       	ldd	r24, Y+17	; 0x11
    151a:	8f 87       	std	Y+15, r24	; 0x0f
    151c:	87 c0       	rjmp	.+270    	; 0x162c <SSD_voidDecCount_0_9+0x138>
		DIO_voidSetPortValue(Copy_u8PortNum, SSD_Arr[i]);
    151e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1520:	88 2f       	mov	r24, r24
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	fc 01       	movw	r30, r24
    1526:	e8 59       	subi	r30, 0x98	; 152
    1528:	fe 4f       	sbci	r31, 0xFE	; 254
    152a:	90 81       	ld	r25, Z
    152c:	88 89       	ldd	r24, Y+16	; 0x10
    152e:	69 2f       	mov	r22, r25
    1530:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
		_delay_ms(Copy_u8DelayMs);
    1534:	8a 89       	ldd	r24, Y+18	; 0x12
    1536:	88 2f       	mov	r24, r24
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	a0 e0       	ldi	r26, 0x00	; 0
    153c:	b0 e0       	ldi	r27, 0x00	; 0
    153e:	bc 01       	movw	r22, r24
    1540:	cd 01       	movw	r24, r26
    1542:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    1546:	dc 01       	movw	r26, r24
    1548:	cb 01       	movw	r24, r22
    154a:	8b 87       	std	Y+11, r24	; 0x0b
    154c:	9c 87       	std	Y+12, r25	; 0x0c
    154e:	ad 87       	std	Y+13, r26	; 0x0d
    1550:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1552:	6b 85       	ldd	r22, Y+11	; 0x0b
    1554:	7c 85       	ldd	r23, Y+12	; 0x0c
    1556:	8d 85       	ldd	r24, Y+13	; 0x0d
    1558:	9e 85       	ldd	r25, Y+14	; 0x0e
    155a:	20 e0       	ldi	r18, 0x00	; 0
    155c:	30 e0       	ldi	r19, 0x00	; 0
    155e:	4a ef       	ldi	r20, 0xFA	; 250
    1560:	54 e4       	ldi	r21, 0x44	; 68
    1562:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1566:	dc 01       	movw	r26, r24
    1568:	cb 01       	movw	r24, r22
    156a:	8f 83       	std	Y+7, r24	; 0x07
    156c:	98 87       	std	Y+8, r25	; 0x08
    156e:	a9 87       	std	Y+9, r26	; 0x09
    1570:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1572:	6f 81       	ldd	r22, Y+7	; 0x07
    1574:	78 85       	ldd	r23, Y+8	; 0x08
    1576:	89 85       	ldd	r24, Y+9	; 0x09
    1578:	9a 85       	ldd	r25, Y+10	; 0x0a
    157a:	20 e0       	ldi	r18, 0x00	; 0
    157c:	30 e0       	ldi	r19, 0x00	; 0
    157e:	40 e8       	ldi	r20, 0x80	; 128
    1580:	5f e3       	ldi	r21, 0x3F	; 63
    1582:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1586:	88 23       	and	r24, r24
    1588:	2c f4       	brge	.+10     	; 0x1594 <SSD_voidDecCount_0_9+0xa0>
		__ticks = 1;
    158a:	81 e0       	ldi	r24, 0x01	; 1
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	9e 83       	std	Y+6, r25	; 0x06
    1590:	8d 83       	std	Y+5, r24	; 0x05
    1592:	3f c0       	rjmp	.+126    	; 0x1612 <SSD_voidDecCount_0_9+0x11e>
	else if (__tmp > 65535)
    1594:	6f 81       	ldd	r22, Y+7	; 0x07
    1596:	78 85       	ldd	r23, Y+8	; 0x08
    1598:	89 85       	ldd	r24, Y+9	; 0x09
    159a:	9a 85       	ldd	r25, Y+10	; 0x0a
    159c:	20 e0       	ldi	r18, 0x00	; 0
    159e:	3f ef       	ldi	r19, 0xFF	; 255
    15a0:	4f e7       	ldi	r20, 0x7F	; 127
    15a2:	57 e4       	ldi	r21, 0x47	; 71
    15a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15a8:	18 16       	cp	r1, r24
    15aa:	4c f5       	brge	.+82     	; 0x15fe <SSD_voidDecCount_0_9+0x10a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15ac:	6b 85       	ldd	r22, Y+11	; 0x0b
    15ae:	7c 85       	ldd	r23, Y+12	; 0x0c
    15b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    15b2:	9e 85       	ldd	r25, Y+14	; 0x0e
    15b4:	20 e0       	ldi	r18, 0x00	; 0
    15b6:	30 e0       	ldi	r19, 0x00	; 0
    15b8:	40 e2       	ldi	r20, 0x20	; 32
    15ba:	51 e4       	ldi	r21, 0x41	; 65
    15bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15c0:	dc 01       	movw	r26, r24
    15c2:	cb 01       	movw	r24, r22
    15c4:	bc 01       	movw	r22, r24
    15c6:	cd 01       	movw	r24, r26
    15c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15cc:	dc 01       	movw	r26, r24
    15ce:	cb 01       	movw	r24, r22
    15d0:	9e 83       	std	Y+6, r25	; 0x06
    15d2:	8d 83       	std	Y+5, r24	; 0x05
    15d4:	0f c0       	rjmp	.+30     	; 0x15f4 <SSD_voidDecCount_0_9+0x100>
    15d6:	88 ec       	ldi	r24, 0xC8	; 200
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	9c 83       	std	Y+4, r25	; 0x04
    15dc:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15de:	8b 81       	ldd	r24, Y+3	; 0x03
    15e0:	9c 81       	ldd	r25, Y+4	; 0x04
    15e2:	01 97       	sbiw	r24, 0x01	; 1
    15e4:	f1 f7       	brne	.-4      	; 0x15e2 <SSD_voidDecCount_0_9+0xee>
    15e6:	9c 83       	std	Y+4, r25	; 0x04
    15e8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ea:	8d 81       	ldd	r24, Y+5	; 0x05
    15ec:	9e 81       	ldd	r25, Y+6	; 0x06
    15ee:	01 97       	sbiw	r24, 0x01	; 1
    15f0:	9e 83       	std	Y+6, r25	; 0x06
    15f2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15f4:	8d 81       	ldd	r24, Y+5	; 0x05
    15f6:	9e 81       	ldd	r25, Y+6	; 0x06
    15f8:	00 97       	sbiw	r24, 0x00	; 0
    15fa:	69 f7       	brne	.-38     	; 0x15d6 <SSD_voidDecCount_0_9+0xe2>
    15fc:	14 c0       	rjmp	.+40     	; 0x1626 <SSD_voidDecCount_0_9+0x132>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15fe:	6f 81       	ldd	r22, Y+7	; 0x07
    1600:	78 85       	ldd	r23, Y+8	; 0x08
    1602:	89 85       	ldd	r24, Y+9	; 0x09
    1604:	9a 85       	ldd	r25, Y+10	; 0x0a
    1606:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    160a:	dc 01       	movw	r26, r24
    160c:	cb 01       	movw	r24, r22
    160e:	9e 83       	std	Y+6, r25	; 0x06
    1610:	8d 83       	std	Y+5, r24	; 0x05
    1612:	8d 81       	ldd	r24, Y+5	; 0x05
    1614:	9e 81       	ldd	r25, Y+6	; 0x06
    1616:	9a 83       	std	Y+2, r25	; 0x02
    1618:	89 83       	std	Y+1, r24	; 0x01
    161a:	89 81       	ldd	r24, Y+1	; 0x01
    161c:	9a 81       	ldd	r25, Y+2	; 0x02
    161e:	01 97       	sbiw	r24, 0x01	; 1
    1620:	f1 f7       	brne	.-4      	; 0x161e <SSD_voidDecCount_0_9+0x12a>
    1622:	9a 83       	std	Y+2, r25	; 0x02
    1624:	89 83       	std	Y+1, r24	; 0x01
void SSD_voidDecCount_0_9 (uint8 Copy_u8PortNum, uint8 Copy_u8StartNum, uint8 Copy_u8DelayMs)
{
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
	uint8 i = 0;

	for(i = Copy_u8StartNum ; i > 0 ; i--){
    1626:	8f 85       	ldd	r24, Y+15	; 0x0f
    1628:	81 50       	subi	r24, 0x01	; 1
    162a:	8f 87       	std	Y+15, r24	; 0x0f
    162c:	8f 85       	ldd	r24, Y+15	; 0x0f
    162e:	88 23       	and	r24, r24
    1630:	09 f0       	breq	.+2      	; 0x1634 <SSD_voidDecCount_0_9+0x140>
    1632:	75 cf       	rjmp	.-278    	; 0x151e <SSD_voidDecCount_0_9+0x2a>
		DIO_voidSetPortValue(Copy_u8PortNum, SSD_Arr[i]);
		_delay_ms(Copy_u8DelayMs);
	}
}
    1634:	62 96       	adiw	r28, 0x12	; 18
    1636:	0f b6       	in	r0, 0x3f	; 63
    1638:	f8 94       	cli
    163a:	de bf       	out	0x3e, r29	; 62
    163c:	0f be       	out	0x3f, r0	; 63
    163e:	cd bf       	out	0x3d, r28	; 61
    1640:	cf 91       	pop	r28
    1642:	df 91       	pop	r29
    1644:	08 95       	ret

00001646 <SSD_voidDecCount_0_99>:

void SSD_voidDecCount_0_99 (uint8 Copy_u8PortNum1, uint8 Copy_u8PortNum2, uint8 Copy_u8StartNum, uint8 Copy_u8DelayMs)
{
    1646:	df 93       	push	r29
    1648:	cf 93       	push	r28
    164a:	cd b7       	in	r28, 0x3d	; 61
    164c:	de b7       	in	r29, 0x3e	; 62
    164e:	65 97       	sbiw	r28, 0x15	; 21
    1650:	0f b6       	in	r0, 0x3f	; 63
    1652:	f8 94       	cli
    1654:	de bf       	out	0x3e, r29	; 62
    1656:	0f be       	out	0x3f, r0	; 63
    1658:	cd bf       	out	0x3d, r28	; 61
    165a:	8a 8b       	std	Y+18, r24	; 0x12
    165c:	6b 8b       	std	Y+19, r22	; 0x13
    165e:	4c 8b       	std	Y+20, r20	; 0x14
    1660:	2d 8b       	std	Y+21, r18	; 0x15
	DIO_voidSetPortDirection(Copy_u8PortNum1, DIO_u8OUTPUT);
    1662:	8a 89       	ldd	r24, Y+18	; 0x12
    1664:	61 e0       	ldi	r22, 0x01	; 1
    1666:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>
	DIO_voidSetPortDirection(Copy_u8PortNum2, DIO_u8OUTPUT);
    166a:	8b 89       	ldd	r24, Y+19	; 0x13
    166c:	61 e0       	ldi	r22, 0x01	; 1
    166e:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>
	uint8 i = 0;
    1672:	19 8a       	std	Y+17, r1	; 0x11

	for(i = Copy_u8StartNum ; i > 0 ; i--){
    1674:	8c 89       	ldd	r24, Y+20	; 0x14
    1676:	89 8b       	std	Y+17, r24	; 0x11
    1678:	9f c0       	rjmp	.+318    	; 0x17b8 <SSD_voidDecCount_0_99+0x172>
		uint8 Local_u8DigitTens = i/10;
    167a:	89 89       	ldd	r24, Y+17	; 0x11
    167c:	9a e0       	ldi	r25, 0x0A	; 10
    167e:	69 2f       	mov	r22, r25
    1680:	0e 94 62 34 	call	0x68c4	; 0x68c4 <__udivmodqi4>
    1684:	88 8b       	std	Y+16, r24	; 0x10
		uint8 Local_u8DigitOnes = i%10;
    1686:	89 89       	ldd	r24, Y+17	; 0x11
    1688:	9a e0       	ldi	r25, 0x0A	; 10
    168a:	69 2f       	mov	r22, r25
    168c:	0e 94 62 34 	call	0x68c4	; 0x68c4 <__udivmodqi4>
    1690:	89 2f       	mov	r24, r25
    1692:	8f 87       	std	Y+15, r24	; 0x0f

		DIO_voidSetPortValue(Copy_u8PortNum1, SSD_Arr[Local_u8DigitTens]);
    1694:	88 89       	ldd	r24, Y+16	; 0x10
    1696:	88 2f       	mov	r24, r24
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	fc 01       	movw	r30, r24
    169c:	e8 59       	subi	r30, 0x98	; 152
    169e:	fe 4f       	sbci	r31, 0xFE	; 254
    16a0:	90 81       	ld	r25, Z
    16a2:	8a 89       	ldd	r24, Y+18	; 0x12
    16a4:	69 2f       	mov	r22, r25
    16a6:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
		DIO_voidSetPortValue(Copy_u8PortNum2, SSD_Arr[Local_u8DigitOnes]);
    16aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    16ac:	88 2f       	mov	r24, r24
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	fc 01       	movw	r30, r24
    16b2:	e8 59       	subi	r30, 0x98	; 152
    16b4:	fe 4f       	sbci	r31, 0xFE	; 254
    16b6:	90 81       	ld	r25, Z
    16b8:	8b 89       	ldd	r24, Y+19	; 0x13
    16ba:	69 2f       	mov	r22, r25
    16bc:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

		_delay_ms(Copy_u8DelayMs);
    16c0:	8d 89       	ldd	r24, Y+21	; 0x15
    16c2:	88 2f       	mov	r24, r24
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	a0 e0       	ldi	r26, 0x00	; 0
    16c8:	b0 e0       	ldi	r27, 0x00	; 0
    16ca:	bc 01       	movw	r22, r24
    16cc:	cd 01       	movw	r24, r26
    16ce:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    16d2:	dc 01       	movw	r26, r24
    16d4:	cb 01       	movw	r24, r22
    16d6:	8b 87       	std	Y+11, r24	; 0x0b
    16d8:	9c 87       	std	Y+12, r25	; 0x0c
    16da:	ad 87       	std	Y+13, r26	; 0x0d
    16dc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16de:	6b 85       	ldd	r22, Y+11	; 0x0b
    16e0:	7c 85       	ldd	r23, Y+12	; 0x0c
    16e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    16e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	4a ef       	ldi	r20, 0xFA	; 250
    16ec:	54 e4       	ldi	r21, 0x44	; 68
    16ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16f2:	dc 01       	movw	r26, r24
    16f4:	cb 01       	movw	r24, r22
    16f6:	8f 83       	std	Y+7, r24	; 0x07
    16f8:	98 87       	std	Y+8, r25	; 0x08
    16fa:	a9 87       	std	Y+9, r26	; 0x09
    16fc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    16fe:	6f 81       	ldd	r22, Y+7	; 0x07
    1700:	78 85       	ldd	r23, Y+8	; 0x08
    1702:	89 85       	ldd	r24, Y+9	; 0x09
    1704:	9a 85       	ldd	r25, Y+10	; 0x0a
    1706:	20 e0       	ldi	r18, 0x00	; 0
    1708:	30 e0       	ldi	r19, 0x00	; 0
    170a:	40 e8       	ldi	r20, 0x80	; 128
    170c:	5f e3       	ldi	r21, 0x3F	; 63
    170e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1712:	88 23       	and	r24, r24
    1714:	2c f4       	brge	.+10     	; 0x1720 <SSD_voidDecCount_0_99+0xda>
		__ticks = 1;
    1716:	81 e0       	ldi	r24, 0x01	; 1
    1718:	90 e0       	ldi	r25, 0x00	; 0
    171a:	9e 83       	std	Y+6, r25	; 0x06
    171c:	8d 83       	std	Y+5, r24	; 0x05
    171e:	3f c0       	rjmp	.+126    	; 0x179e <SSD_voidDecCount_0_99+0x158>
	else if (__tmp > 65535)
    1720:	6f 81       	ldd	r22, Y+7	; 0x07
    1722:	78 85       	ldd	r23, Y+8	; 0x08
    1724:	89 85       	ldd	r24, Y+9	; 0x09
    1726:	9a 85       	ldd	r25, Y+10	; 0x0a
    1728:	20 e0       	ldi	r18, 0x00	; 0
    172a:	3f ef       	ldi	r19, 0xFF	; 255
    172c:	4f e7       	ldi	r20, 0x7F	; 127
    172e:	57 e4       	ldi	r21, 0x47	; 71
    1730:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1734:	18 16       	cp	r1, r24
    1736:	4c f5       	brge	.+82     	; 0x178a <SSD_voidDecCount_0_99+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1738:	6b 85       	ldd	r22, Y+11	; 0x0b
    173a:	7c 85       	ldd	r23, Y+12	; 0x0c
    173c:	8d 85       	ldd	r24, Y+13	; 0x0d
    173e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1740:	20 e0       	ldi	r18, 0x00	; 0
    1742:	30 e0       	ldi	r19, 0x00	; 0
    1744:	40 e2       	ldi	r20, 0x20	; 32
    1746:	51 e4       	ldi	r21, 0x41	; 65
    1748:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    174c:	dc 01       	movw	r26, r24
    174e:	cb 01       	movw	r24, r22
    1750:	bc 01       	movw	r22, r24
    1752:	cd 01       	movw	r24, r26
    1754:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1758:	dc 01       	movw	r26, r24
    175a:	cb 01       	movw	r24, r22
    175c:	9e 83       	std	Y+6, r25	; 0x06
    175e:	8d 83       	std	Y+5, r24	; 0x05
    1760:	0f c0       	rjmp	.+30     	; 0x1780 <SSD_voidDecCount_0_99+0x13a>
    1762:	88 ec       	ldi	r24, 0xC8	; 200
    1764:	90 e0       	ldi	r25, 0x00	; 0
    1766:	9c 83       	std	Y+4, r25	; 0x04
    1768:	8b 83       	std	Y+3, r24	; 0x03
    176a:	8b 81       	ldd	r24, Y+3	; 0x03
    176c:	9c 81       	ldd	r25, Y+4	; 0x04
    176e:	01 97       	sbiw	r24, 0x01	; 1
    1770:	f1 f7       	brne	.-4      	; 0x176e <SSD_voidDecCount_0_99+0x128>
    1772:	9c 83       	std	Y+4, r25	; 0x04
    1774:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1776:	8d 81       	ldd	r24, Y+5	; 0x05
    1778:	9e 81       	ldd	r25, Y+6	; 0x06
    177a:	01 97       	sbiw	r24, 0x01	; 1
    177c:	9e 83       	std	Y+6, r25	; 0x06
    177e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1780:	8d 81       	ldd	r24, Y+5	; 0x05
    1782:	9e 81       	ldd	r25, Y+6	; 0x06
    1784:	00 97       	sbiw	r24, 0x00	; 0
    1786:	69 f7       	brne	.-38     	; 0x1762 <SSD_voidDecCount_0_99+0x11c>
    1788:	14 c0       	rjmp	.+40     	; 0x17b2 <SSD_voidDecCount_0_99+0x16c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    178a:	6f 81       	ldd	r22, Y+7	; 0x07
    178c:	78 85       	ldd	r23, Y+8	; 0x08
    178e:	89 85       	ldd	r24, Y+9	; 0x09
    1790:	9a 85       	ldd	r25, Y+10	; 0x0a
    1792:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1796:	dc 01       	movw	r26, r24
    1798:	cb 01       	movw	r24, r22
    179a:	9e 83       	std	Y+6, r25	; 0x06
    179c:	8d 83       	std	Y+5, r24	; 0x05
    179e:	8d 81       	ldd	r24, Y+5	; 0x05
    17a0:	9e 81       	ldd	r25, Y+6	; 0x06
    17a2:	9a 83       	std	Y+2, r25	; 0x02
    17a4:	89 83       	std	Y+1, r24	; 0x01
    17a6:	89 81       	ldd	r24, Y+1	; 0x01
    17a8:	9a 81       	ldd	r25, Y+2	; 0x02
    17aa:	01 97       	sbiw	r24, 0x01	; 1
    17ac:	f1 f7       	brne	.-4      	; 0x17aa <SSD_voidDecCount_0_99+0x164>
    17ae:	9a 83       	std	Y+2, r25	; 0x02
    17b0:	89 83       	std	Y+1, r24	; 0x01
{
	DIO_voidSetPortDirection(Copy_u8PortNum1, DIO_u8OUTPUT);
	DIO_voidSetPortDirection(Copy_u8PortNum2, DIO_u8OUTPUT);
	uint8 i = 0;

	for(i = Copy_u8StartNum ; i > 0 ; i--){
    17b2:	89 89       	ldd	r24, Y+17	; 0x11
    17b4:	81 50       	subi	r24, 0x01	; 1
    17b6:	89 8b       	std	Y+17, r24	; 0x11
    17b8:	89 89       	ldd	r24, Y+17	; 0x11
    17ba:	88 23       	and	r24, r24
    17bc:	09 f0       	breq	.+2      	; 0x17c0 <SSD_voidDecCount_0_99+0x17a>
    17be:	5d cf       	rjmp	.-326    	; 0x167a <SSD_voidDecCount_0_99+0x34>
		DIO_voidSetPortValue(Copy_u8PortNum1, SSD_Arr[Local_u8DigitTens]);
		DIO_voidSetPortValue(Copy_u8PortNum2, SSD_Arr[Local_u8DigitOnes]);

		_delay_ms(Copy_u8DelayMs);
	}
}
    17c0:	65 96       	adiw	r28, 0x15	; 21
    17c2:	0f b6       	in	r0, 0x3f	; 63
    17c4:	f8 94       	cli
    17c6:	de bf       	out	0x3e, r29	; 62
    17c8:	0f be       	out	0x3f, r0	; 63
    17ca:	cd bf       	out	0x3d, r28	; 61
    17cc:	cf 91       	pop	r28
    17ce:	df 91       	pop	r29
    17d0:	08 95       	ret

000017d2 <SSD_voidIncCount_0_9>:

void SSD_voidIncCount_0_9 (uint8 Copy_u8PortNum, uint8 Copy_u8StartNum, uint8 Copy_u8DelayMs)
{
    17d2:	df 93       	push	r29
    17d4:	cf 93       	push	r28
    17d6:	cd b7       	in	r28, 0x3d	; 61
    17d8:	de b7       	in	r29, 0x3e	; 62
    17da:	62 97       	sbiw	r28, 0x12	; 18
    17dc:	0f b6       	in	r0, 0x3f	; 63
    17de:	f8 94       	cli
    17e0:	de bf       	out	0x3e, r29	; 62
    17e2:	0f be       	out	0x3f, r0	; 63
    17e4:	cd bf       	out	0x3d, r28	; 61
    17e6:	88 8b       	std	Y+16, r24	; 0x10
    17e8:	69 8b       	std	Y+17, r22	; 0x11
    17ea:	4a 8b       	std	Y+18, r20	; 0x12
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
    17ec:	88 89       	ldd	r24, Y+16	; 0x10
    17ee:	61 e0       	ldi	r22, 0x01	; 1
    17f0:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>
	uint8 i = 0;
    17f4:	1f 86       	std	Y+15, r1	; 0x0f

	for(i = 0 ; i <= Copy_u8StartNum ; i++){
    17f6:	1f 86       	std	Y+15, r1	; 0x0f
    17f8:	87 c0       	rjmp	.+270    	; 0x1908 <SSD_voidIncCount_0_9+0x136>
		DIO_voidSetPortValue(Copy_u8PortNum, SSD_Arr[i]);
    17fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    17fc:	88 2f       	mov	r24, r24
    17fe:	90 e0       	ldi	r25, 0x00	; 0
    1800:	fc 01       	movw	r30, r24
    1802:	e8 59       	subi	r30, 0x98	; 152
    1804:	fe 4f       	sbci	r31, 0xFE	; 254
    1806:	90 81       	ld	r25, Z
    1808:	88 89       	ldd	r24, Y+16	; 0x10
    180a:	69 2f       	mov	r22, r25
    180c:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
		_delay_ms(Copy_u8DelayMs);
    1810:	8a 89       	ldd	r24, Y+18	; 0x12
    1812:	88 2f       	mov	r24, r24
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	a0 e0       	ldi	r26, 0x00	; 0
    1818:	b0 e0       	ldi	r27, 0x00	; 0
    181a:	bc 01       	movw	r22, r24
    181c:	cd 01       	movw	r24, r26
    181e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    1822:	dc 01       	movw	r26, r24
    1824:	cb 01       	movw	r24, r22
    1826:	8b 87       	std	Y+11, r24	; 0x0b
    1828:	9c 87       	std	Y+12, r25	; 0x0c
    182a:	ad 87       	std	Y+13, r26	; 0x0d
    182c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    182e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1830:	7c 85       	ldd	r23, Y+12	; 0x0c
    1832:	8d 85       	ldd	r24, Y+13	; 0x0d
    1834:	9e 85       	ldd	r25, Y+14	; 0x0e
    1836:	20 e0       	ldi	r18, 0x00	; 0
    1838:	30 e0       	ldi	r19, 0x00	; 0
    183a:	4a ef       	ldi	r20, 0xFA	; 250
    183c:	54 e4       	ldi	r21, 0x44	; 68
    183e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1842:	dc 01       	movw	r26, r24
    1844:	cb 01       	movw	r24, r22
    1846:	8f 83       	std	Y+7, r24	; 0x07
    1848:	98 87       	std	Y+8, r25	; 0x08
    184a:	a9 87       	std	Y+9, r26	; 0x09
    184c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    184e:	6f 81       	ldd	r22, Y+7	; 0x07
    1850:	78 85       	ldd	r23, Y+8	; 0x08
    1852:	89 85       	ldd	r24, Y+9	; 0x09
    1854:	9a 85       	ldd	r25, Y+10	; 0x0a
    1856:	20 e0       	ldi	r18, 0x00	; 0
    1858:	30 e0       	ldi	r19, 0x00	; 0
    185a:	40 e8       	ldi	r20, 0x80	; 128
    185c:	5f e3       	ldi	r21, 0x3F	; 63
    185e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1862:	88 23       	and	r24, r24
    1864:	2c f4       	brge	.+10     	; 0x1870 <SSD_voidIncCount_0_9+0x9e>
		__ticks = 1;
    1866:	81 e0       	ldi	r24, 0x01	; 1
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	9e 83       	std	Y+6, r25	; 0x06
    186c:	8d 83       	std	Y+5, r24	; 0x05
    186e:	3f c0       	rjmp	.+126    	; 0x18ee <SSD_voidIncCount_0_9+0x11c>
	else if (__tmp > 65535)
    1870:	6f 81       	ldd	r22, Y+7	; 0x07
    1872:	78 85       	ldd	r23, Y+8	; 0x08
    1874:	89 85       	ldd	r24, Y+9	; 0x09
    1876:	9a 85       	ldd	r25, Y+10	; 0x0a
    1878:	20 e0       	ldi	r18, 0x00	; 0
    187a:	3f ef       	ldi	r19, 0xFF	; 255
    187c:	4f e7       	ldi	r20, 0x7F	; 127
    187e:	57 e4       	ldi	r21, 0x47	; 71
    1880:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1884:	18 16       	cp	r1, r24
    1886:	4c f5       	brge	.+82     	; 0x18da <SSD_voidIncCount_0_9+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1888:	6b 85       	ldd	r22, Y+11	; 0x0b
    188a:	7c 85       	ldd	r23, Y+12	; 0x0c
    188c:	8d 85       	ldd	r24, Y+13	; 0x0d
    188e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1890:	20 e0       	ldi	r18, 0x00	; 0
    1892:	30 e0       	ldi	r19, 0x00	; 0
    1894:	40 e2       	ldi	r20, 0x20	; 32
    1896:	51 e4       	ldi	r21, 0x41	; 65
    1898:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    189c:	dc 01       	movw	r26, r24
    189e:	cb 01       	movw	r24, r22
    18a0:	bc 01       	movw	r22, r24
    18a2:	cd 01       	movw	r24, r26
    18a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18a8:	dc 01       	movw	r26, r24
    18aa:	cb 01       	movw	r24, r22
    18ac:	9e 83       	std	Y+6, r25	; 0x06
    18ae:	8d 83       	std	Y+5, r24	; 0x05
    18b0:	0f c0       	rjmp	.+30     	; 0x18d0 <SSD_voidIncCount_0_9+0xfe>
    18b2:	88 ec       	ldi	r24, 0xC8	; 200
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	9c 83       	std	Y+4, r25	; 0x04
    18b8:	8b 83       	std	Y+3, r24	; 0x03
    18ba:	8b 81       	ldd	r24, Y+3	; 0x03
    18bc:	9c 81       	ldd	r25, Y+4	; 0x04
    18be:	01 97       	sbiw	r24, 0x01	; 1
    18c0:	f1 f7       	brne	.-4      	; 0x18be <SSD_voidIncCount_0_9+0xec>
    18c2:	9c 83       	std	Y+4, r25	; 0x04
    18c4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18c6:	8d 81       	ldd	r24, Y+5	; 0x05
    18c8:	9e 81       	ldd	r25, Y+6	; 0x06
    18ca:	01 97       	sbiw	r24, 0x01	; 1
    18cc:	9e 83       	std	Y+6, r25	; 0x06
    18ce:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18d0:	8d 81       	ldd	r24, Y+5	; 0x05
    18d2:	9e 81       	ldd	r25, Y+6	; 0x06
    18d4:	00 97       	sbiw	r24, 0x00	; 0
    18d6:	69 f7       	brne	.-38     	; 0x18b2 <SSD_voidIncCount_0_9+0xe0>
    18d8:	14 c0       	rjmp	.+40     	; 0x1902 <SSD_voidIncCount_0_9+0x130>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18da:	6f 81       	ldd	r22, Y+7	; 0x07
    18dc:	78 85       	ldd	r23, Y+8	; 0x08
    18de:	89 85       	ldd	r24, Y+9	; 0x09
    18e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    18e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18e6:	dc 01       	movw	r26, r24
    18e8:	cb 01       	movw	r24, r22
    18ea:	9e 83       	std	Y+6, r25	; 0x06
    18ec:	8d 83       	std	Y+5, r24	; 0x05
    18ee:	8d 81       	ldd	r24, Y+5	; 0x05
    18f0:	9e 81       	ldd	r25, Y+6	; 0x06
    18f2:	9a 83       	std	Y+2, r25	; 0x02
    18f4:	89 83       	std	Y+1, r24	; 0x01
    18f6:	89 81       	ldd	r24, Y+1	; 0x01
    18f8:	9a 81       	ldd	r25, Y+2	; 0x02
    18fa:	01 97       	sbiw	r24, 0x01	; 1
    18fc:	f1 f7       	brne	.-4      	; 0x18fa <SSD_voidIncCount_0_9+0x128>
    18fe:	9a 83       	std	Y+2, r25	; 0x02
    1900:	89 83       	std	Y+1, r24	; 0x01
void SSD_voidIncCount_0_9 (uint8 Copy_u8PortNum, uint8 Copy_u8StartNum, uint8 Copy_u8DelayMs)
{
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
	uint8 i = 0;

	for(i = 0 ; i <= Copy_u8StartNum ; i++){
    1902:	8f 85       	ldd	r24, Y+15	; 0x0f
    1904:	8f 5f       	subi	r24, 0xFF	; 255
    1906:	8f 87       	std	Y+15, r24	; 0x0f
    1908:	9f 85       	ldd	r25, Y+15	; 0x0f
    190a:	89 89       	ldd	r24, Y+17	; 0x11
    190c:	89 17       	cp	r24, r25
    190e:	08 f0       	brcs	.+2      	; 0x1912 <SSD_voidIncCount_0_9+0x140>
    1910:	74 cf       	rjmp	.-280    	; 0x17fa <SSD_voidIncCount_0_9+0x28>
		DIO_voidSetPortValue(Copy_u8PortNum, SSD_Arr[i]);
		_delay_ms(Copy_u8DelayMs);
	}
}
    1912:	62 96       	adiw	r28, 0x12	; 18
    1914:	0f b6       	in	r0, 0x3f	; 63
    1916:	f8 94       	cli
    1918:	de bf       	out	0x3e, r29	; 62
    191a:	0f be       	out	0x3f, r0	; 63
    191c:	cd bf       	out	0x3d, r28	; 61
    191e:	cf 91       	pop	r28
    1920:	df 91       	pop	r29
    1922:	08 95       	ret

00001924 <SSD_voidIncCount_0_99>:

void SSD_voidIncCount_0_99 (uint8 Copy_u8PortNum1, uint8 Copy_u8PortNum2, uint8 Copy_u8StartNum, uint8 Copy_u8DelayMs)
{
    1924:	df 93       	push	r29
    1926:	cf 93       	push	r28
    1928:	cd b7       	in	r28, 0x3d	; 61
    192a:	de b7       	in	r29, 0x3e	; 62
    192c:	65 97       	sbiw	r28, 0x15	; 21
    192e:	0f b6       	in	r0, 0x3f	; 63
    1930:	f8 94       	cli
    1932:	de bf       	out	0x3e, r29	; 62
    1934:	0f be       	out	0x3f, r0	; 63
    1936:	cd bf       	out	0x3d, r28	; 61
    1938:	8a 8b       	std	Y+18, r24	; 0x12
    193a:	6b 8b       	std	Y+19, r22	; 0x13
    193c:	4c 8b       	std	Y+20, r20	; 0x14
    193e:	2d 8b       	std	Y+21, r18	; 0x15
	DIO_voidSetPortDirection(Copy_u8PortNum1, DIO_u8OUTPUT);
    1940:	8a 89       	ldd	r24, Y+18	; 0x12
    1942:	61 e0       	ldi	r22, 0x01	; 1
    1944:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>
	DIO_voidSetPortDirection(Copy_u8PortNum2, DIO_u8OUTPUT);
    1948:	8b 89       	ldd	r24, Y+19	; 0x13
    194a:	61 e0       	ldi	r22, 0x01	; 1
    194c:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>
	uint8 i = 0;
    1950:	19 8a       	std	Y+17, r1	; 0x11

	for(i = 0 ; i <= Copy_u8StartNum ; i++){
    1952:	19 8a       	std	Y+17, r1	; 0x11
    1954:	9f c0       	rjmp	.+318    	; 0x1a94 <SSD_voidIncCount_0_99+0x170>
		uint8 Local_u8DigitTens = i/10;
    1956:	89 89       	ldd	r24, Y+17	; 0x11
    1958:	9a e0       	ldi	r25, 0x0A	; 10
    195a:	69 2f       	mov	r22, r25
    195c:	0e 94 62 34 	call	0x68c4	; 0x68c4 <__udivmodqi4>
    1960:	88 8b       	std	Y+16, r24	; 0x10
		uint8 Local_u8DigitOnes = i%10;
    1962:	89 89       	ldd	r24, Y+17	; 0x11
    1964:	9a e0       	ldi	r25, 0x0A	; 10
    1966:	69 2f       	mov	r22, r25
    1968:	0e 94 62 34 	call	0x68c4	; 0x68c4 <__udivmodqi4>
    196c:	89 2f       	mov	r24, r25
    196e:	8f 87       	std	Y+15, r24	; 0x0f

		DIO_voidSetPortValue(Copy_u8PortNum1, SSD_Arr[Local_u8DigitTens]);
    1970:	88 89       	ldd	r24, Y+16	; 0x10
    1972:	88 2f       	mov	r24, r24
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	fc 01       	movw	r30, r24
    1978:	e8 59       	subi	r30, 0x98	; 152
    197a:	fe 4f       	sbci	r31, 0xFE	; 254
    197c:	90 81       	ld	r25, Z
    197e:	8a 89       	ldd	r24, Y+18	; 0x12
    1980:	69 2f       	mov	r22, r25
    1982:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
		DIO_voidSetPortValue(Copy_u8PortNum2, SSD_Arr[Local_u8DigitOnes]);
    1986:	8f 85       	ldd	r24, Y+15	; 0x0f
    1988:	88 2f       	mov	r24, r24
    198a:	90 e0       	ldi	r25, 0x00	; 0
    198c:	fc 01       	movw	r30, r24
    198e:	e8 59       	subi	r30, 0x98	; 152
    1990:	fe 4f       	sbci	r31, 0xFE	; 254
    1992:	90 81       	ld	r25, Z
    1994:	8b 89       	ldd	r24, Y+19	; 0x13
    1996:	69 2f       	mov	r22, r25
    1998:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

		_delay_ms(Copy_u8DelayMs);
    199c:	8d 89       	ldd	r24, Y+21	; 0x15
    199e:	88 2f       	mov	r24, r24
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	a0 e0       	ldi	r26, 0x00	; 0
    19a4:	b0 e0       	ldi	r27, 0x00	; 0
    19a6:	bc 01       	movw	r22, r24
    19a8:	cd 01       	movw	r24, r26
    19aa:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    19ae:	dc 01       	movw	r26, r24
    19b0:	cb 01       	movw	r24, r22
    19b2:	8b 87       	std	Y+11, r24	; 0x0b
    19b4:	9c 87       	std	Y+12, r25	; 0x0c
    19b6:	ad 87       	std	Y+13, r26	; 0x0d
    19b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    19bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    19be:	8d 85       	ldd	r24, Y+13	; 0x0d
    19c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    19c2:	20 e0       	ldi	r18, 0x00	; 0
    19c4:	30 e0       	ldi	r19, 0x00	; 0
    19c6:	4a ef       	ldi	r20, 0xFA	; 250
    19c8:	54 e4       	ldi	r21, 0x44	; 68
    19ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19ce:	dc 01       	movw	r26, r24
    19d0:	cb 01       	movw	r24, r22
    19d2:	8f 83       	std	Y+7, r24	; 0x07
    19d4:	98 87       	std	Y+8, r25	; 0x08
    19d6:	a9 87       	std	Y+9, r26	; 0x09
    19d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    19da:	6f 81       	ldd	r22, Y+7	; 0x07
    19dc:	78 85       	ldd	r23, Y+8	; 0x08
    19de:	89 85       	ldd	r24, Y+9	; 0x09
    19e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    19e2:	20 e0       	ldi	r18, 0x00	; 0
    19e4:	30 e0       	ldi	r19, 0x00	; 0
    19e6:	40 e8       	ldi	r20, 0x80	; 128
    19e8:	5f e3       	ldi	r21, 0x3F	; 63
    19ea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19ee:	88 23       	and	r24, r24
    19f0:	2c f4       	brge	.+10     	; 0x19fc <SSD_voidIncCount_0_99+0xd8>
		__ticks = 1;
    19f2:	81 e0       	ldi	r24, 0x01	; 1
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	9e 83       	std	Y+6, r25	; 0x06
    19f8:	8d 83       	std	Y+5, r24	; 0x05
    19fa:	3f c0       	rjmp	.+126    	; 0x1a7a <SSD_voidIncCount_0_99+0x156>
	else if (__tmp > 65535)
    19fc:	6f 81       	ldd	r22, Y+7	; 0x07
    19fe:	78 85       	ldd	r23, Y+8	; 0x08
    1a00:	89 85       	ldd	r24, Y+9	; 0x09
    1a02:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a04:	20 e0       	ldi	r18, 0x00	; 0
    1a06:	3f ef       	ldi	r19, 0xFF	; 255
    1a08:	4f e7       	ldi	r20, 0x7F	; 127
    1a0a:	57 e4       	ldi	r21, 0x47	; 71
    1a0c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a10:	18 16       	cp	r1, r24
    1a12:	4c f5       	brge	.+82     	; 0x1a66 <SSD_voidIncCount_0_99+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a14:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a16:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a18:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a1a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a1c:	20 e0       	ldi	r18, 0x00	; 0
    1a1e:	30 e0       	ldi	r19, 0x00	; 0
    1a20:	40 e2       	ldi	r20, 0x20	; 32
    1a22:	51 e4       	ldi	r21, 0x41	; 65
    1a24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a28:	dc 01       	movw	r26, r24
    1a2a:	cb 01       	movw	r24, r22
    1a2c:	bc 01       	movw	r22, r24
    1a2e:	cd 01       	movw	r24, r26
    1a30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a34:	dc 01       	movw	r26, r24
    1a36:	cb 01       	movw	r24, r22
    1a38:	9e 83       	std	Y+6, r25	; 0x06
    1a3a:	8d 83       	std	Y+5, r24	; 0x05
    1a3c:	0f c0       	rjmp	.+30     	; 0x1a5c <SSD_voidIncCount_0_99+0x138>
    1a3e:	88 ec       	ldi	r24, 0xC8	; 200
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	9c 83       	std	Y+4, r25	; 0x04
    1a44:	8b 83       	std	Y+3, r24	; 0x03
    1a46:	8b 81       	ldd	r24, Y+3	; 0x03
    1a48:	9c 81       	ldd	r25, Y+4	; 0x04
    1a4a:	01 97       	sbiw	r24, 0x01	; 1
    1a4c:	f1 f7       	brne	.-4      	; 0x1a4a <SSD_voidIncCount_0_99+0x126>
    1a4e:	9c 83       	std	Y+4, r25	; 0x04
    1a50:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a52:	8d 81       	ldd	r24, Y+5	; 0x05
    1a54:	9e 81       	ldd	r25, Y+6	; 0x06
    1a56:	01 97       	sbiw	r24, 0x01	; 1
    1a58:	9e 83       	std	Y+6, r25	; 0x06
    1a5a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a5c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a5e:	9e 81       	ldd	r25, Y+6	; 0x06
    1a60:	00 97       	sbiw	r24, 0x00	; 0
    1a62:	69 f7       	brne	.-38     	; 0x1a3e <SSD_voidIncCount_0_99+0x11a>
    1a64:	14 c0       	rjmp	.+40     	; 0x1a8e <SSD_voidIncCount_0_99+0x16a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a66:	6f 81       	ldd	r22, Y+7	; 0x07
    1a68:	78 85       	ldd	r23, Y+8	; 0x08
    1a6a:	89 85       	ldd	r24, Y+9	; 0x09
    1a6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a6e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a72:	dc 01       	movw	r26, r24
    1a74:	cb 01       	movw	r24, r22
    1a76:	9e 83       	std	Y+6, r25	; 0x06
    1a78:	8d 83       	std	Y+5, r24	; 0x05
    1a7a:	8d 81       	ldd	r24, Y+5	; 0x05
    1a7c:	9e 81       	ldd	r25, Y+6	; 0x06
    1a7e:	9a 83       	std	Y+2, r25	; 0x02
    1a80:	89 83       	std	Y+1, r24	; 0x01
    1a82:	89 81       	ldd	r24, Y+1	; 0x01
    1a84:	9a 81       	ldd	r25, Y+2	; 0x02
    1a86:	01 97       	sbiw	r24, 0x01	; 1
    1a88:	f1 f7       	brne	.-4      	; 0x1a86 <SSD_voidIncCount_0_99+0x162>
    1a8a:	9a 83       	std	Y+2, r25	; 0x02
    1a8c:	89 83       	std	Y+1, r24	; 0x01
{
	DIO_voidSetPortDirection(Copy_u8PortNum1, DIO_u8OUTPUT);
	DIO_voidSetPortDirection(Copy_u8PortNum2, DIO_u8OUTPUT);
	uint8 i = 0;

	for(i = 0 ; i <= Copy_u8StartNum ; i++){
    1a8e:	89 89       	ldd	r24, Y+17	; 0x11
    1a90:	8f 5f       	subi	r24, 0xFF	; 255
    1a92:	89 8b       	std	Y+17, r24	; 0x11
    1a94:	99 89       	ldd	r25, Y+17	; 0x11
    1a96:	8c 89       	ldd	r24, Y+20	; 0x14
    1a98:	89 17       	cp	r24, r25
    1a9a:	08 f0       	brcs	.+2      	; 0x1a9e <SSD_voidIncCount_0_99+0x17a>
    1a9c:	5c cf       	rjmp	.-328    	; 0x1956 <SSD_voidIncCount_0_99+0x32>
		DIO_voidSetPortValue(Copy_u8PortNum1, SSD_Arr[Local_u8DigitTens]);
		DIO_voidSetPortValue(Copy_u8PortNum2, SSD_Arr[Local_u8DigitOnes]);

		_delay_ms(Copy_u8DelayMs);
	}
}
    1a9e:	65 96       	adiw	r28, 0x15	; 21
    1aa0:	0f b6       	in	r0, 0x3f	; 63
    1aa2:	f8 94       	cli
    1aa4:	de bf       	out	0x3e, r29	; 62
    1aa6:	0f be       	out	0x3f, r0	; 63
    1aa8:	cd bf       	out	0x3d, r28	; 61
    1aaa:	cf 91       	pop	r28
    1aac:	df 91       	pop	r29
    1aae:	08 95       	ret

00001ab0 <LED_voidTurnOn>:

#include "LED_interface.h"


void LED_voidTurnOn (uint8 Copy_u8PortNum, uint8 Copy_u8PinNum)
{
    1ab0:	df 93       	push	r29
    1ab2:	cf 93       	push	r28
    1ab4:	00 d0       	rcall	.+0      	; 0x1ab6 <LED_voidTurnOn+0x6>
    1ab6:	cd b7       	in	r28, 0x3d	; 61
    1ab8:	de b7       	in	r29, 0x3e	; 62
    1aba:	89 83       	std	Y+1, r24	; 0x01
    1abc:	6a 83       	std	Y+2, r22	; 0x02
	DIO_voidSetPinDirection(Copy_u8PortNum, Copy_u8PinNum, DIO_u8OUTPUT);
    1abe:	89 81       	ldd	r24, Y+1	; 0x01
    1ac0:	6a 81       	ldd	r22, Y+2	; 0x02
    1ac2:	41 e0       	ldi	r20, 0x01	; 1
    1ac4:	0e 94 c1 06 	call	0xd82	; 0xd82 <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(Copy_u8PortNum, Copy_u8PinNum, DIO_u8HIGH);
    1ac8:	89 81       	ldd	r24, Y+1	; 0x01
    1aca:	6a 81       	ldd	r22, Y+2	; 0x02
    1acc:	41 e0       	ldi	r20, 0x01	; 1
    1ace:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
}
    1ad2:	0f 90       	pop	r0
    1ad4:	0f 90       	pop	r0
    1ad6:	cf 91       	pop	r28
    1ad8:	df 91       	pop	r29
    1ada:	08 95       	ret

00001adc <LED_voidTurnOff>:

void LED_voidTurnOff (uint8 Copy_u8PortNum, uint8 Copy_u8PinNum)
{
    1adc:	df 93       	push	r29
    1ade:	cf 93       	push	r28
    1ae0:	00 d0       	rcall	.+0      	; 0x1ae2 <LED_voidTurnOff+0x6>
    1ae2:	cd b7       	in	r28, 0x3d	; 61
    1ae4:	de b7       	in	r29, 0x3e	; 62
    1ae6:	89 83       	std	Y+1, r24	; 0x01
    1ae8:	6a 83       	std	Y+2, r22	; 0x02
	DIO_voidSetPinDirection(Copy_u8PortNum, Copy_u8PinNum, DIO_u8OUTPUT);
    1aea:	89 81       	ldd	r24, Y+1	; 0x01
    1aec:	6a 81       	ldd	r22, Y+2	; 0x02
    1aee:	41 e0       	ldi	r20, 0x01	; 1
    1af0:	0e 94 c1 06 	call	0xd82	; 0xd82 <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(Copy_u8PortNum, Copy_u8PinNum, DIO_u8LOW);
    1af4:	89 81       	ldd	r24, Y+1	; 0x01
    1af6:	6a 81       	ldd	r22, Y+2	; 0x02
    1af8:	40 e0       	ldi	r20, 0x00	; 0
    1afa:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
}
    1afe:	0f 90       	pop	r0
    1b00:	0f 90       	pop	r0
    1b02:	cf 91       	pop	r28
    1b04:	df 91       	pop	r29
    1b06:	08 95       	ret

00001b08 <LED_voidShifLeft>:

void LED_voidShifLeft (uint8 Copy_u8PortNum, uint8 Copy_u8Delayms)
{
    1b08:	0f 93       	push	r16
    1b0a:	1f 93       	push	r17
    1b0c:	df 93       	push	r29
    1b0e:	cf 93       	push	r28
    1b10:	cd b7       	in	r28, 0x3d	; 61
    1b12:	de b7       	in	r29, 0x3e	; 62
    1b14:	c2 57       	subi	r28, 0x72	; 114
    1b16:	d0 40       	sbci	r29, 0x00	; 0
    1b18:	0f b6       	in	r0, 0x3f	; 63
    1b1a:	f8 94       	cli
    1b1c:	de bf       	out	0x3e, r29	; 62
    1b1e:	0f be       	out	0x3f, r0	; 63
    1b20:	cd bf       	out	0x3d, r28	; 61
    1b22:	fe 01       	movw	r30, r28
    1b24:	ef 58       	subi	r30, 0x8F	; 143
    1b26:	ff 4f       	sbci	r31, 0xFF	; 255
    1b28:	80 83       	st	Z, r24
    1b2a:	fe 01       	movw	r30, r28
    1b2c:	ee 58       	subi	r30, 0x8E	; 142
    1b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b30:	60 83       	st	Z, r22
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
    1b32:	fe 01       	movw	r30, r28
    1b34:	ef 58       	subi	r30, 0x8F	; 143
    1b36:	ff 4f       	sbci	r31, 0xFF	; 255
    1b38:	80 81       	ld	r24, Z
    1b3a:	61 e0       	ldi	r22, 0x01	; 1
    1b3c:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN0, DIO_u8HIGH);
    1b40:	fe 01       	movw	r30, r28
    1b42:	ef 58       	subi	r30, 0x8F	; 143
    1b44:	ff 4f       	sbci	r31, 0xFF	; 255
    1b46:	80 81       	ld	r24, Z
    1b48:	60 e0       	ldi	r22, 0x00	; 0
    1b4a:	41 e0       	ldi	r20, 0x01	; 1
    1b4c:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    1b50:	fe 01       	movw	r30, r28
    1b52:	ee 58       	subi	r30, 0x8E	; 142
    1b54:	ff 4f       	sbci	r31, 0xFF	; 255
    1b56:	80 81       	ld	r24, Z
    1b58:	88 2f       	mov	r24, r24
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	a0 e0       	ldi	r26, 0x00	; 0
    1b5e:	b0 e0       	ldi	r27, 0x00	; 0
    1b60:	bc 01       	movw	r22, r24
    1b62:	cd 01       	movw	r24, r26
    1b64:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    1b68:	dc 01       	movw	r26, r24
    1b6a:	cb 01       	movw	r24, r22
    1b6c:	fe 01       	movw	r30, r28
    1b6e:	e3 59       	subi	r30, 0x93	; 147
    1b70:	ff 4f       	sbci	r31, 0xFF	; 255
    1b72:	80 83       	st	Z, r24
    1b74:	91 83       	std	Z+1, r25	; 0x01
    1b76:	a2 83       	std	Z+2, r26	; 0x02
    1b78:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b7a:	8e 01       	movw	r16, r28
    1b7c:	07 59       	subi	r16, 0x97	; 151
    1b7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b80:	fe 01       	movw	r30, r28
    1b82:	e3 59       	subi	r30, 0x93	; 147
    1b84:	ff 4f       	sbci	r31, 0xFF	; 255
    1b86:	60 81       	ld	r22, Z
    1b88:	71 81       	ldd	r23, Z+1	; 0x01
    1b8a:	82 81       	ldd	r24, Z+2	; 0x02
    1b8c:	93 81       	ldd	r25, Z+3	; 0x03
    1b8e:	20 e0       	ldi	r18, 0x00	; 0
    1b90:	30 e0       	ldi	r19, 0x00	; 0
    1b92:	4a ef       	ldi	r20, 0xFA	; 250
    1b94:	54 e4       	ldi	r21, 0x44	; 68
    1b96:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b9a:	dc 01       	movw	r26, r24
    1b9c:	cb 01       	movw	r24, r22
    1b9e:	f8 01       	movw	r30, r16
    1ba0:	80 83       	st	Z, r24
    1ba2:	91 83       	std	Z+1, r25	; 0x01
    1ba4:	a2 83       	std	Z+2, r26	; 0x02
    1ba6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ba8:	fe 01       	movw	r30, r28
    1baa:	e7 59       	subi	r30, 0x97	; 151
    1bac:	ff 4f       	sbci	r31, 0xFF	; 255
    1bae:	60 81       	ld	r22, Z
    1bb0:	71 81       	ldd	r23, Z+1	; 0x01
    1bb2:	82 81       	ldd	r24, Z+2	; 0x02
    1bb4:	93 81       	ldd	r25, Z+3	; 0x03
    1bb6:	20 e0       	ldi	r18, 0x00	; 0
    1bb8:	30 e0       	ldi	r19, 0x00	; 0
    1bba:	40 e8       	ldi	r20, 0x80	; 128
    1bbc:	5f e3       	ldi	r21, 0x3F	; 63
    1bbe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1bc2:	88 23       	and	r24, r24
    1bc4:	44 f4       	brge	.+16     	; 0x1bd6 <LED_voidShifLeft+0xce>
		__ticks = 1;
    1bc6:	fe 01       	movw	r30, r28
    1bc8:	e9 59       	subi	r30, 0x99	; 153
    1bca:	ff 4f       	sbci	r31, 0xFF	; 255
    1bcc:	81 e0       	ldi	r24, 0x01	; 1
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	91 83       	std	Z+1, r25	; 0x01
    1bd2:	80 83       	st	Z, r24
    1bd4:	64 c0       	rjmp	.+200    	; 0x1c9e <LED_voidShifLeft+0x196>
	else if (__tmp > 65535)
    1bd6:	fe 01       	movw	r30, r28
    1bd8:	e7 59       	subi	r30, 0x97	; 151
    1bda:	ff 4f       	sbci	r31, 0xFF	; 255
    1bdc:	60 81       	ld	r22, Z
    1bde:	71 81       	ldd	r23, Z+1	; 0x01
    1be0:	82 81       	ldd	r24, Z+2	; 0x02
    1be2:	93 81       	ldd	r25, Z+3	; 0x03
    1be4:	20 e0       	ldi	r18, 0x00	; 0
    1be6:	3f ef       	ldi	r19, 0xFF	; 255
    1be8:	4f e7       	ldi	r20, 0x7F	; 127
    1bea:	57 e4       	ldi	r21, 0x47	; 71
    1bec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1bf0:	18 16       	cp	r1, r24
    1bf2:	0c f0       	brlt	.+2      	; 0x1bf6 <LED_voidShifLeft+0xee>
    1bf4:	43 c0       	rjmp	.+134    	; 0x1c7c <LED_voidShifLeft+0x174>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bf6:	fe 01       	movw	r30, r28
    1bf8:	e3 59       	subi	r30, 0x93	; 147
    1bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfc:	60 81       	ld	r22, Z
    1bfe:	71 81       	ldd	r23, Z+1	; 0x01
    1c00:	82 81       	ldd	r24, Z+2	; 0x02
    1c02:	93 81       	ldd	r25, Z+3	; 0x03
    1c04:	20 e0       	ldi	r18, 0x00	; 0
    1c06:	30 e0       	ldi	r19, 0x00	; 0
    1c08:	40 e2       	ldi	r20, 0x20	; 32
    1c0a:	51 e4       	ldi	r21, 0x41	; 65
    1c0c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c10:	dc 01       	movw	r26, r24
    1c12:	cb 01       	movw	r24, r22
    1c14:	8e 01       	movw	r16, r28
    1c16:	09 59       	subi	r16, 0x99	; 153
    1c18:	1f 4f       	sbci	r17, 0xFF	; 255
    1c1a:	bc 01       	movw	r22, r24
    1c1c:	cd 01       	movw	r24, r26
    1c1e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c22:	dc 01       	movw	r26, r24
    1c24:	cb 01       	movw	r24, r22
    1c26:	f8 01       	movw	r30, r16
    1c28:	91 83       	std	Z+1, r25	; 0x01
    1c2a:	80 83       	st	Z, r24
    1c2c:	1f c0       	rjmp	.+62     	; 0x1c6c <LED_voidShifLeft+0x164>
    1c2e:	fe 01       	movw	r30, r28
    1c30:	eb 59       	subi	r30, 0x9B	; 155
    1c32:	ff 4f       	sbci	r31, 0xFF	; 255
    1c34:	88 ec       	ldi	r24, 0xC8	; 200
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	91 83       	std	Z+1, r25	; 0x01
    1c3a:	80 83       	st	Z, r24
    1c3c:	fe 01       	movw	r30, r28
    1c3e:	eb 59       	subi	r30, 0x9B	; 155
    1c40:	ff 4f       	sbci	r31, 0xFF	; 255
    1c42:	80 81       	ld	r24, Z
    1c44:	91 81       	ldd	r25, Z+1	; 0x01
    1c46:	01 97       	sbiw	r24, 0x01	; 1
    1c48:	f1 f7       	brne	.-4      	; 0x1c46 <LED_voidShifLeft+0x13e>
    1c4a:	fe 01       	movw	r30, r28
    1c4c:	eb 59       	subi	r30, 0x9B	; 155
    1c4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c50:	91 83       	std	Z+1, r25	; 0x01
    1c52:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c54:	de 01       	movw	r26, r28
    1c56:	a9 59       	subi	r26, 0x99	; 153
    1c58:	bf 4f       	sbci	r27, 0xFF	; 255
    1c5a:	fe 01       	movw	r30, r28
    1c5c:	e9 59       	subi	r30, 0x99	; 153
    1c5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c60:	80 81       	ld	r24, Z
    1c62:	91 81       	ldd	r25, Z+1	; 0x01
    1c64:	01 97       	sbiw	r24, 0x01	; 1
    1c66:	11 96       	adiw	r26, 0x01	; 1
    1c68:	9c 93       	st	X, r25
    1c6a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c6c:	fe 01       	movw	r30, r28
    1c6e:	e9 59       	subi	r30, 0x99	; 153
    1c70:	ff 4f       	sbci	r31, 0xFF	; 255
    1c72:	80 81       	ld	r24, Z
    1c74:	91 81       	ldd	r25, Z+1	; 0x01
    1c76:	00 97       	sbiw	r24, 0x00	; 0
    1c78:	d1 f6       	brne	.-76     	; 0x1c2e <LED_voidShifLeft+0x126>
    1c7a:	27 c0       	rjmp	.+78     	; 0x1cca <LED_voidShifLeft+0x1c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c7c:	8e 01       	movw	r16, r28
    1c7e:	09 59       	subi	r16, 0x99	; 153
    1c80:	1f 4f       	sbci	r17, 0xFF	; 255
    1c82:	fe 01       	movw	r30, r28
    1c84:	e7 59       	subi	r30, 0x97	; 151
    1c86:	ff 4f       	sbci	r31, 0xFF	; 255
    1c88:	60 81       	ld	r22, Z
    1c8a:	71 81       	ldd	r23, Z+1	; 0x01
    1c8c:	82 81       	ldd	r24, Z+2	; 0x02
    1c8e:	93 81       	ldd	r25, Z+3	; 0x03
    1c90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c94:	dc 01       	movw	r26, r24
    1c96:	cb 01       	movw	r24, r22
    1c98:	f8 01       	movw	r30, r16
    1c9a:	91 83       	std	Z+1, r25	; 0x01
    1c9c:	80 83       	st	Z, r24
    1c9e:	de 01       	movw	r26, r28
    1ca0:	ad 59       	subi	r26, 0x9D	; 157
    1ca2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	e9 59       	subi	r30, 0x99	; 153
    1ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    1caa:	80 81       	ld	r24, Z
    1cac:	91 81       	ldd	r25, Z+1	; 0x01
    1cae:	8d 93       	st	X+, r24
    1cb0:	9c 93       	st	X, r25
    1cb2:	fe 01       	movw	r30, r28
    1cb4:	ed 59       	subi	r30, 0x9D	; 157
    1cb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb8:	80 81       	ld	r24, Z
    1cba:	91 81       	ldd	r25, Z+1	; 0x01
    1cbc:	01 97       	sbiw	r24, 0x01	; 1
    1cbe:	f1 f7       	brne	.-4      	; 0x1cbc <LED_voidShifLeft+0x1b4>
    1cc0:	fe 01       	movw	r30, r28
    1cc2:	ed 59       	subi	r30, 0x9D	; 157
    1cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc6:	91 83       	std	Z+1, r25	; 0x01
    1cc8:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    1cca:	fe 01       	movw	r30, r28
    1ccc:	ef 58       	subi	r30, 0x8F	; 143
    1cce:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd0:	80 81       	ld	r24, Z
    1cd2:	60 e0       	ldi	r22, 0x00	; 0
    1cd4:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN1, DIO_u8HIGH);
    1cd8:	fe 01       	movw	r30, r28
    1cda:	ef 58       	subi	r30, 0x8F	; 143
    1cdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1cde:	80 81       	ld	r24, Z
    1ce0:	61 e0       	ldi	r22, 0x01	; 1
    1ce2:	41 e0       	ldi	r20, 0x01	; 1
    1ce4:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    1ce8:	fe 01       	movw	r30, r28
    1cea:	ee 58       	subi	r30, 0x8E	; 142
    1cec:	ff 4f       	sbci	r31, 0xFF	; 255
    1cee:	80 81       	ld	r24, Z
    1cf0:	88 2f       	mov	r24, r24
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	a0 e0       	ldi	r26, 0x00	; 0
    1cf6:	b0 e0       	ldi	r27, 0x00	; 0
    1cf8:	bc 01       	movw	r22, r24
    1cfa:	cd 01       	movw	r24, r26
    1cfc:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    1d00:	dc 01       	movw	r26, r24
    1d02:	cb 01       	movw	r24, r22
    1d04:	fe 01       	movw	r30, r28
    1d06:	e1 5a       	subi	r30, 0xA1	; 161
    1d08:	ff 4f       	sbci	r31, 0xFF	; 255
    1d0a:	80 83       	st	Z, r24
    1d0c:	91 83       	std	Z+1, r25	; 0x01
    1d0e:	a2 83       	std	Z+2, r26	; 0x02
    1d10:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d12:	8e 01       	movw	r16, r28
    1d14:	05 5a       	subi	r16, 0xA5	; 165
    1d16:	1f 4f       	sbci	r17, 0xFF	; 255
    1d18:	fe 01       	movw	r30, r28
    1d1a:	e1 5a       	subi	r30, 0xA1	; 161
    1d1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d1e:	60 81       	ld	r22, Z
    1d20:	71 81       	ldd	r23, Z+1	; 0x01
    1d22:	82 81       	ldd	r24, Z+2	; 0x02
    1d24:	93 81       	ldd	r25, Z+3	; 0x03
    1d26:	20 e0       	ldi	r18, 0x00	; 0
    1d28:	30 e0       	ldi	r19, 0x00	; 0
    1d2a:	4a ef       	ldi	r20, 0xFA	; 250
    1d2c:	54 e4       	ldi	r21, 0x44	; 68
    1d2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d32:	dc 01       	movw	r26, r24
    1d34:	cb 01       	movw	r24, r22
    1d36:	f8 01       	movw	r30, r16
    1d38:	80 83       	st	Z, r24
    1d3a:	91 83       	std	Z+1, r25	; 0x01
    1d3c:	a2 83       	std	Z+2, r26	; 0x02
    1d3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d40:	fe 01       	movw	r30, r28
    1d42:	e5 5a       	subi	r30, 0xA5	; 165
    1d44:	ff 4f       	sbci	r31, 0xFF	; 255
    1d46:	60 81       	ld	r22, Z
    1d48:	71 81       	ldd	r23, Z+1	; 0x01
    1d4a:	82 81       	ldd	r24, Z+2	; 0x02
    1d4c:	93 81       	ldd	r25, Z+3	; 0x03
    1d4e:	20 e0       	ldi	r18, 0x00	; 0
    1d50:	30 e0       	ldi	r19, 0x00	; 0
    1d52:	40 e8       	ldi	r20, 0x80	; 128
    1d54:	5f e3       	ldi	r21, 0x3F	; 63
    1d56:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d5a:	88 23       	and	r24, r24
    1d5c:	44 f4       	brge	.+16     	; 0x1d6e <LED_voidShifLeft+0x266>
		__ticks = 1;
    1d5e:	fe 01       	movw	r30, r28
    1d60:	e7 5a       	subi	r30, 0xA7	; 167
    1d62:	ff 4f       	sbci	r31, 0xFF	; 255
    1d64:	81 e0       	ldi	r24, 0x01	; 1
    1d66:	90 e0       	ldi	r25, 0x00	; 0
    1d68:	91 83       	std	Z+1, r25	; 0x01
    1d6a:	80 83       	st	Z, r24
    1d6c:	64 c0       	rjmp	.+200    	; 0x1e36 <LED_voidShifLeft+0x32e>
	else if (__tmp > 65535)
    1d6e:	fe 01       	movw	r30, r28
    1d70:	e5 5a       	subi	r30, 0xA5	; 165
    1d72:	ff 4f       	sbci	r31, 0xFF	; 255
    1d74:	60 81       	ld	r22, Z
    1d76:	71 81       	ldd	r23, Z+1	; 0x01
    1d78:	82 81       	ldd	r24, Z+2	; 0x02
    1d7a:	93 81       	ldd	r25, Z+3	; 0x03
    1d7c:	20 e0       	ldi	r18, 0x00	; 0
    1d7e:	3f ef       	ldi	r19, 0xFF	; 255
    1d80:	4f e7       	ldi	r20, 0x7F	; 127
    1d82:	57 e4       	ldi	r21, 0x47	; 71
    1d84:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d88:	18 16       	cp	r1, r24
    1d8a:	0c f0       	brlt	.+2      	; 0x1d8e <LED_voidShifLeft+0x286>
    1d8c:	43 c0       	rjmp	.+134    	; 0x1e14 <LED_voidShifLeft+0x30c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d8e:	fe 01       	movw	r30, r28
    1d90:	e1 5a       	subi	r30, 0xA1	; 161
    1d92:	ff 4f       	sbci	r31, 0xFF	; 255
    1d94:	60 81       	ld	r22, Z
    1d96:	71 81       	ldd	r23, Z+1	; 0x01
    1d98:	82 81       	ldd	r24, Z+2	; 0x02
    1d9a:	93 81       	ldd	r25, Z+3	; 0x03
    1d9c:	20 e0       	ldi	r18, 0x00	; 0
    1d9e:	30 e0       	ldi	r19, 0x00	; 0
    1da0:	40 e2       	ldi	r20, 0x20	; 32
    1da2:	51 e4       	ldi	r21, 0x41	; 65
    1da4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1da8:	dc 01       	movw	r26, r24
    1daa:	cb 01       	movw	r24, r22
    1dac:	8e 01       	movw	r16, r28
    1dae:	07 5a       	subi	r16, 0xA7	; 167
    1db0:	1f 4f       	sbci	r17, 0xFF	; 255
    1db2:	bc 01       	movw	r22, r24
    1db4:	cd 01       	movw	r24, r26
    1db6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dba:	dc 01       	movw	r26, r24
    1dbc:	cb 01       	movw	r24, r22
    1dbe:	f8 01       	movw	r30, r16
    1dc0:	91 83       	std	Z+1, r25	; 0x01
    1dc2:	80 83       	st	Z, r24
    1dc4:	1f c0       	rjmp	.+62     	; 0x1e04 <LED_voidShifLeft+0x2fc>
    1dc6:	fe 01       	movw	r30, r28
    1dc8:	e9 5a       	subi	r30, 0xA9	; 169
    1dca:	ff 4f       	sbci	r31, 0xFF	; 255
    1dcc:	88 ec       	ldi	r24, 0xC8	; 200
    1dce:	90 e0       	ldi	r25, 0x00	; 0
    1dd0:	91 83       	std	Z+1, r25	; 0x01
    1dd2:	80 83       	st	Z, r24
    1dd4:	fe 01       	movw	r30, r28
    1dd6:	e9 5a       	subi	r30, 0xA9	; 169
    1dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dda:	80 81       	ld	r24, Z
    1ddc:	91 81       	ldd	r25, Z+1	; 0x01
    1dde:	01 97       	sbiw	r24, 0x01	; 1
    1de0:	f1 f7       	brne	.-4      	; 0x1dde <LED_voidShifLeft+0x2d6>
    1de2:	fe 01       	movw	r30, r28
    1de4:	e9 5a       	subi	r30, 0xA9	; 169
    1de6:	ff 4f       	sbci	r31, 0xFF	; 255
    1de8:	91 83       	std	Z+1, r25	; 0x01
    1dea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dec:	de 01       	movw	r26, r28
    1dee:	a7 5a       	subi	r26, 0xA7	; 167
    1df0:	bf 4f       	sbci	r27, 0xFF	; 255
    1df2:	fe 01       	movw	r30, r28
    1df4:	e7 5a       	subi	r30, 0xA7	; 167
    1df6:	ff 4f       	sbci	r31, 0xFF	; 255
    1df8:	80 81       	ld	r24, Z
    1dfa:	91 81       	ldd	r25, Z+1	; 0x01
    1dfc:	01 97       	sbiw	r24, 0x01	; 1
    1dfe:	11 96       	adiw	r26, 0x01	; 1
    1e00:	9c 93       	st	X, r25
    1e02:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e04:	fe 01       	movw	r30, r28
    1e06:	e7 5a       	subi	r30, 0xA7	; 167
    1e08:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0a:	80 81       	ld	r24, Z
    1e0c:	91 81       	ldd	r25, Z+1	; 0x01
    1e0e:	00 97       	sbiw	r24, 0x00	; 0
    1e10:	d1 f6       	brne	.-76     	; 0x1dc6 <LED_voidShifLeft+0x2be>
    1e12:	27 c0       	rjmp	.+78     	; 0x1e62 <LED_voidShifLeft+0x35a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e14:	8e 01       	movw	r16, r28
    1e16:	07 5a       	subi	r16, 0xA7	; 167
    1e18:	1f 4f       	sbci	r17, 0xFF	; 255
    1e1a:	fe 01       	movw	r30, r28
    1e1c:	e5 5a       	subi	r30, 0xA5	; 165
    1e1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e20:	60 81       	ld	r22, Z
    1e22:	71 81       	ldd	r23, Z+1	; 0x01
    1e24:	82 81       	ldd	r24, Z+2	; 0x02
    1e26:	93 81       	ldd	r25, Z+3	; 0x03
    1e28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e2c:	dc 01       	movw	r26, r24
    1e2e:	cb 01       	movw	r24, r22
    1e30:	f8 01       	movw	r30, r16
    1e32:	91 83       	std	Z+1, r25	; 0x01
    1e34:	80 83       	st	Z, r24
    1e36:	de 01       	movw	r26, r28
    1e38:	ab 5a       	subi	r26, 0xAB	; 171
    1e3a:	bf 4f       	sbci	r27, 0xFF	; 255
    1e3c:	fe 01       	movw	r30, r28
    1e3e:	e7 5a       	subi	r30, 0xA7	; 167
    1e40:	ff 4f       	sbci	r31, 0xFF	; 255
    1e42:	80 81       	ld	r24, Z
    1e44:	91 81       	ldd	r25, Z+1	; 0x01
    1e46:	8d 93       	st	X+, r24
    1e48:	9c 93       	st	X, r25
    1e4a:	fe 01       	movw	r30, r28
    1e4c:	eb 5a       	subi	r30, 0xAB	; 171
    1e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e50:	80 81       	ld	r24, Z
    1e52:	91 81       	ldd	r25, Z+1	; 0x01
    1e54:	01 97       	sbiw	r24, 0x01	; 1
    1e56:	f1 f7       	brne	.-4      	; 0x1e54 <LED_voidShifLeft+0x34c>
    1e58:	fe 01       	movw	r30, r28
    1e5a:	eb 5a       	subi	r30, 0xAB	; 171
    1e5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5e:	91 83       	std	Z+1, r25	; 0x01
    1e60:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    1e62:	fe 01       	movw	r30, r28
    1e64:	ef 58       	subi	r30, 0x8F	; 143
    1e66:	ff 4f       	sbci	r31, 0xFF	; 255
    1e68:	80 81       	ld	r24, Z
    1e6a:	60 e0       	ldi	r22, 0x00	; 0
    1e6c:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN2, DIO_u8HIGH);
    1e70:	fe 01       	movw	r30, r28
    1e72:	ef 58       	subi	r30, 0x8F	; 143
    1e74:	ff 4f       	sbci	r31, 0xFF	; 255
    1e76:	80 81       	ld	r24, Z
    1e78:	62 e0       	ldi	r22, 0x02	; 2
    1e7a:	41 e0       	ldi	r20, 0x01	; 1
    1e7c:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    1e80:	fe 01       	movw	r30, r28
    1e82:	ee 58       	subi	r30, 0x8E	; 142
    1e84:	ff 4f       	sbci	r31, 0xFF	; 255
    1e86:	80 81       	ld	r24, Z
    1e88:	88 2f       	mov	r24, r24
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	a0 e0       	ldi	r26, 0x00	; 0
    1e8e:	b0 e0       	ldi	r27, 0x00	; 0
    1e90:	bc 01       	movw	r22, r24
    1e92:	cd 01       	movw	r24, r26
    1e94:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    1e98:	dc 01       	movw	r26, r24
    1e9a:	cb 01       	movw	r24, r22
    1e9c:	fe 01       	movw	r30, r28
    1e9e:	ef 5a       	subi	r30, 0xAF	; 175
    1ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea2:	80 83       	st	Z, r24
    1ea4:	91 83       	std	Z+1, r25	; 0x01
    1ea6:	a2 83       	std	Z+2, r26	; 0x02
    1ea8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1eaa:	8e 01       	movw	r16, r28
    1eac:	03 5b       	subi	r16, 0xB3	; 179
    1eae:	1f 4f       	sbci	r17, 0xFF	; 255
    1eb0:	fe 01       	movw	r30, r28
    1eb2:	ef 5a       	subi	r30, 0xAF	; 175
    1eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb6:	60 81       	ld	r22, Z
    1eb8:	71 81       	ldd	r23, Z+1	; 0x01
    1eba:	82 81       	ldd	r24, Z+2	; 0x02
    1ebc:	93 81       	ldd	r25, Z+3	; 0x03
    1ebe:	20 e0       	ldi	r18, 0x00	; 0
    1ec0:	30 e0       	ldi	r19, 0x00	; 0
    1ec2:	4a ef       	ldi	r20, 0xFA	; 250
    1ec4:	54 e4       	ldi	r21, 0x44	; 68
    1ec6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1eca:	dc 01       	movw	r26, r24
    1ecc:	cb 01       	movw	r24, r22
    1ece:	f8 01       	movw	r30, r16
    1ed0:	80 83       	st	Z, r24
    1ed2:	91 83       	std	Z+1, r25	; 0x01
    1ed4:	a2 83       	std	Z+2, r26	; 0x02
    1ed6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ed8:	fe 01       	movw	r30, r28
    1eda:	e3 5b       	subi	r30, 0xB3	; 179
    1edc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ede:	60 81       	ld	r22, Z
    1ee0:	71 81       	ldd	r23, Z+1	; 0x01
    1ee2:	82 81       	ldd	r24, Z+2	; 0x02
    1ee4:	93 81       	ldd	r25, Z+3	; 0x03
    1ee6:	20 e0       	ldi	r18, 0x00	; 0
    1ee8:	30 e0       	ldi	r19, 0x00	; 0
    1eea:	40 e8       	ldi	r20, 0x80	; 128
    1eec:	5f e3       	ldi	r21, 0x3F	; 63
    1eee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ef2:	88 23       	and	r24, r24
    1ef4:	44 f4       	brge	.+16     	; 0x1f06 <LED_voidShifLeft+0x3fe>
		__ticks = 1;
    1ef6:	fe 01       	movw	r30, r28
    1ef8:	e5 5b       	subi	r30, 0xB5	; 181
    1efa:	ff 4f       	sbci	r31, 0xFF	; 255
    1efc:	81 e0       	ldi	r24, 0x01	; 1
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	91 83       	std	Z+1, r25	; 0x01
    1f02:	80 83       	st	Z, r24
    1f04:	64 c0       	rjmp	.+200    	; 0x1fce <LED_voidShifLeft+0x4c6>
	else if (__tmp > 65535)
    1f06:	fe 01       	movw	r30, r28
    1f08:	e3 5b       	subi	r30, 0xB3	; 179
    1f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0c:	60 81       	ld	r22, Z
    1f0e:	71 81       	ldd	r23, Z+1	; 0x01
    1f10:	82 81       	ldd	r24, Z+2	; 0x02
    1f12:	93 81       	ldd	r25, Z+3	; 0x03
    1f14:	20 e0       	ldi	r18, 0x00	; 0
    1f16:	3f ef       	ldi	r19, 0xFF	; 255
    1f18:	4f e7       	ldi	r20, 0x7F	; 127
    1f1a:	57 e4       	ldi	r21, 0x47	; 71
    1f1c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f20:	18 16       	cp	r1, r24
    1f22:	0c f0       	brlt	.+2      	; 0x1f26 <LED_voidShifLeft+0x41e>
    1f24:	43 c0       	rjmp	.+134    	; 0x1fac <LED_voidShifLeft+0x4a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f26:	fe 01       	movw	r30, r28
    1f28:	ef 5a       	subi	r30, 0xAF	; 175
    1f2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f2c:	60 81       	ld	r22, Z
    1f2e:	71 81       	ldd	r23, Z+1	; 0x01
    1f30:	82 81       	ldd	r24, Z+2	; 0x02
    1f32:	93 81       	ldd	r25, Z+3	; 0x03
    1f34:	20 e0       	ldi	r18, 0x00	; 0
    1f36:	30 e0       	ldi	r19, 0x00	; 0
    1f38:	40 e2       	ldi	r20, 0x20	; 32
    1f3a:	51 e4       	ldi	r21, 0x41	; 65
    1f3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f40:	dc 01       	movw	r26, r24
    1f42:	cb 01       	movw	r24, r22
    1f44:	8e 01       	movw	r16, r28
    1f46:	05 5b       	subi	r16, 0xB5	; 181
    1f48:	1f 4f       	sbci	r17, 0xFF	; 255
    1f4a:	bc 01       	movw	r22, r24
    1f4c:	cd 01       	movw	r24, r26
    1f4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f52:	dc 01       	movw	r26, r24
    1f54:	cb 01       	movw	r24, r22
    1f56:	f8 01       	movw	r30, r16
    1f58:	91 83       	std	Z+1, r25	; 0x01
    1f5a:	80 83       	st	Z, r24
    1f5c:	1f c0       	rjmp	.+62     	; 0x1f9c <LED_voidShifLeft+0x494>
    1f5e:	fe 01       	movw	r30, r28
    1f60:	e7 5b       	subi	r30, 0xB7	; 183
    1f62:	ff 4f       	sbci	r31, 0xFF	; 255
    1f64:	88 ec       	ldi	r24, 0xC8	; 200
    1f66:	90 e0       	ldi	r25, 0x00	; 0
    1f68:	91 83       	std	Z+1, r25	; 0x01
    1f6a:	80 83       	st	Z, r24
    1f6c:	fe 01       	movw	r30, r28
    1f6e:	e7 5b       	subi	r30, 0xB7	; 183
    1f70:	ff 4f       	sbci	r31, 0xFF	; 255
    1f72:	80 81       	ld	r24, Z
    1f74:	91 81       	ldd	r25, Z+1	; 0x01
    1f76:	01 97       	sbiw	r24, 0x01	; 1
    1f78:	f1 f7       	brne	.-4      	; 0x1f76 <LED_voidShifLeft+0x46e>
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	e7 5b       	subi	r30, 0xB7	; 183
    1f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f80:	91 83       	std	Z+1, r25	; 0x01
    1f82:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f84:	de 01       	movw	r26, r28
    1f86:	a5 5b       	subi	r26, 0xB5	; 181
    1f88:	bf 4f       	sbci	r27, 0xFF	; 255
    1f8a:	fe 01       	movw	r30, r28
    1f8c:	e5 5b       	subi	r30, 0xB5	; 181
    1f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f90:	80 81       	ld	r24, Z
    1f92:	91 81       	ldd	r25, Z+1	; 0x01
    1f94:	01 97       	sbiw	r24, 0x01	; 1
    1f96:	11 96       	adiw	r26, 0x01	; 1
    1f98:	9c 93       	st	X, r25
    1f9a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f9c:	fe 01       	movw	r30, r28
    1f9e:	e5 5b       	subi	r30, 0xB5	; 181
    1fa0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa2:	80 81       	ld	r24, Z
    1fa4:	91 81       	ldd	r25, Z+1	; 0x01
    1fa6:	00 97       	sbiw	r24, 0x00	; 0
    1fa8:	d1 f6       	brne	.-76     	; 0x1f5e <LED_voidShifLeft+0x456>
    1faa:	27 c0       	rjmp	.+78     	; 0x1ffa <LED_voidShifLeft+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fac:	8e 01       	movw	r16, r28
    1fae:	05 5b       	subi	r16, 0xB5	; 181
    1fb0:	1f 4f       	sbci	r17, 0xFF	; 255
    1fb2:	fe 01       	movw	r30, r28
    1fb4:	e3 5b       	subi	r30, 0xB3	; 179
    1fb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb8:	60 81       	ld	r22, Z
    1fba:	71 81       	ldd	r23, Z+1	; 0x01
    1fbc:	82 81       	ldd	r24, Z+2	; 0x02
    1fbe:	93 81       	ldd	r25, Z+3	; 0x03
    1fc0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fc4:	dc 01       	movw	r26, r24
    1fc6:	cb 01       	movw	r24, r22
    1fc8:	f8 01       	movw	r30, r16
    1fca:	91 83       	std	Z+1, r25	; 0x01
    1fcc:	80 83       	st	Z, r24
    1fce:	de 01       	movw	r26, r28
    1fd0:	a9 5b       	subi	r26, 0xB9	; 185
    1fd2:	bf 4f       	sbci	r27, 0xFF	; 255
    1fd4:	fe 01       	movw	r30, r28
    1fd6:	e5 5b       	subi	r30, 0xB5	; 181
    1fd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fda:	80 81       	ld	r24, Z
    1fdc:	91 81       	ldd	r25, Z+1	; 0x01
    1fde:	8d 93       	st	X+, r24
    1fe0:	9c 93       	st	X, r25
    1fe2:	fe 01       	movw	r30, r28
    1fe4:	e9 5b       	subi	r30, 0xB9	; 185
    1fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe8:	80 81       	ld	r24, Z
    1fea:	91 81       	ldd	r25, Z+1	; 0x01
    1fec:	01 97       	sbiw	r24, 0x01	; 1
    1fee:	f1 f7       	brne	.-4      	; 0x1fec <LED_voidShifLeft+0x4e4>
    1ff0:	fe 01       	movw	r30, r28
    1ff2:	e9 5b       	subi	r30, 0xB9	; 185
    1ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff6:	91 83       	std	Z+1, r25	; 0x01
    1ff8:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    1ffa:	fe 01       	movw	r30, r28
    1ffc:	ef 58       	subi	r30, 0x8F	; 143
    1ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    2000:	80 81       	ld	r24, Z
    2002:	60 e0       	ldi	r22, 0x00	; 0
    2004:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN3, DIO_u8HIGH);
    2008:	fe 01       	movw	r30, r28
    200a:	ef 58       	subi	r30, 0x8F	; 143
    200c:	ff 4f       	sbci	r31, 0xFF	; 255
    200e:	80 81       	ld	r24, Z
    2010:	63 e0       	ldi	r22, 0x03	; 3
    2012:	41 e0       	ldi	r20, 0x01	; 1
    2014:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2018:	fe 01       	movw	r30, r28
    201a:	ee 58       	subi	r30, 0x8E	; 142
    201c:	ff 4f       	sbci	r31, 0xFF	; 255
    201e:	80 81       	ld	r24, Z
    2020:	88 2f       	mov	r24, r24
    2022:	90 e0       	ldi	r25, 0x00	; 0
    2024:	a0 e0       	ldi	r26, 0x00	; 0
    2026:	b0 e0       	ldi	r27, 0x00	; 0
    2028:	bc 01       	movw	r22, r24
    202a:	cd 01       	movw	r24, r26
    202c:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2030:	dc 01       	movw	r26, r24
    2032:	cb 01       	movw	r24, r22
    2034:	fe 01       	movw	r30, r28
    2036:	ed 5b       	subi	r30, 0xBD	; 189
    2038:	ff 4f       	sbci	r31, 0xFF	; 255
    203a:	80 83       	st	Z, r24
    203c:	91 83       	std	Z+1, r25	; 0x01
    203e:	a2 83       	std	Z+2, r26	; 0x02
    2040:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2042:	8e 01       	movw	r16, r28
    2044:	01 5c       	subi	r16, 0xC1	; 193
    2046:	1f 4f       	sbci	r17, 0xFF	; 255
    2048:	fe 01       	movw	r30, r28
    204a:	ed 5b       	subi	r30, 0xBD	; 189
    204c:	ff 4f       	sbci	r31, 0xFF	; 255
    204e:	60 81       	ld	r22, Z
    2050:	71 81       	ldd	r23, Z+1	; 0x01
    2052:	82 81       	ldd	r24, Z+2	; 0x02
    2054:	93 81       	ldd	r25, Z+3	; 0x03
    2056:	20 e0       	ldi	r18, 0x00	; 0
    2058:	30 e0       	ldi	r19, 0x00	; 0
    205a:	4a ef       	ldi	r20, 0xFA	; 250
    205c:	54 e4       	ldi	r21, 0x44	; 68
    205e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2062:	dc 01       	movw	r26, r24
    2064:	cb 01       	movw	r24, r22
    2066:	f8 01       	movw	r30, r16
    2068:	80 83       	st	Z, r24
    206a:	91 83       	std	Z+1, r25	; 0x01
    206c:	a2 83       	std	Z+2, r26	; 0x02
    206e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2070:	fe 01       	movw	r30, r28
    2072:	ff 96       	adiw	r30, 0x3f	; 63
    2074:	60 81       	ld	r22, Z
    2076:	71 81       	ldd	r23, Z+1	; 0x01
    2078:	82 81       	ldd	r24, Z+2	; 0x02
    207a:	93 81       	ldd	r25, Z+3	; 0x03
    207c:	20 e0       	ldi	r18, 0x00	; 0
    207e:	30 e0       	ldi	r19, 0x00	; 0
    2080:	40 e8       	ldi	r20, 0x80	; 128
    2082:	5f e3       	ldi	r21, 0x3F	; 63
    2084:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2088:	88 23       	and	r24, r24
    208a:	2c f4       	brge	.+10     	; 0x2096 <LED_voidShifLeft+0x58e>
		__ticks = 1;
    208c:	81 e0       	ldi	r24, 0x01	; 1
    208e:	90 e0       	ldi	r25, 0x00	; 0
    2090:	9e af       	std	Y+62, r25	; 0x3e
    2092:	8d af       	std	Y+61, r24	; 0x3d
    2094:	46 c0       	rjmp	.+140    	; 0x2122 <LED_voidShifLeft+0x61a>
	else if (__tmp > 65535)
    2096:	fe 01       	movw	r30, r28
    2098:	ff 96       	adiw	r30, 0x3f	; 63
    209a:	60 81       	ld	r22, Z
    209c:	71 81       	ldd	r23, Z+1	; 0x01
    209e:	82 81       	ldd	r24, Z+2	; 0x02
    20a0:	93 81       	ldd	r25, Z+3	; 0x03
    20a2:	20 e0       	ldi	r18, 0x00	; 0
    20a4:	3f ef       	ldi	r19, 0xFF	; 255
    20a6:	4f e7       	ldi	r20, 0x7F	; 127
    20a8:	57 e4       	ldi	r21, 0x47	; 71
    20aa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    20ae:	18 16       	cp	r1, r24
    20b0:	64 f5       	brge	.+88     	; 0x210a <LED_voidShifLeft+0x602>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20b2:	fe 01       	movw	r30, r28
    20b4:	ed 5b       	subi	r30, 0xBD	; 189
    20b6:	ff 4f       	sbci	r31, 0xFF	; 255
    20b8:	60 81       	ld	r22, Z
    20ba:	71 81       	ldd	r23, Z+1	; 0x01
    20bc:	82 81       	ldd	r24, Z+2	; 0x02
    20be:	93 81       	ldd	r25, Z+3	; 0x03
    20c0:	20 e0       	ldi	r18, 0x00	; 0
    20c2:	30 e0       	ldi	r19, 0x00	; 0
    20c4:	40 e2       	ldi	r20, 0x20	; 32
    20c6:	51 e4       	ldi	r21, 0x41	; 65
    20c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20cc:	dc 01       	movw	r26, r24
    20ce:	cb 01       	movw	r24, r22
    20d0:	bc 01       	movw	r22, r24
    20d2:	cd 01       	movw	r24, r26
    20d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20d8:	dc 01       	movw	r26, r24
    20da:	cb 01       	movw	r24, r22
    20dc:	9e af       	std	Y+62, r25	; 0x3e
    20de:	8d af       	std	Y+61, r24	; 0x3d
    20e0:	0f c0       	rjmp	.+30     	; 0x2100 <LED_voidShifLeft+0x5f8>
    20e2:	88 ec       	ldi	r24, 0xC8	; 200
    20e4:	90 e0       	ldi	r25, 0x00	; 0
    20e6:	9c af       	std	Y+60, r25	; 0x3c
    20e8:	8b af       	std	Y+59, r24	; 0x3b
    20ea:	8b ad       	ldd	r24, Y+59	; 0x3b
    20ec:	9c ad       	ldd	r25, Y+60	; 0x3c
    20ee:	01 97       	sbiw	r24, 0x01	; 1
    20f0:	f1 f7       	brne	.-4      	; 0x20ee <LED_voidShifLeft+0x5e6>
    20f2:	9c af       	std	Y+60, r25	; 0x3c
    20f4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20f6:	8d ad       	ldd	r24, Y+61	; 0x3d
    20f8:	9e ad       	ldd	r25, Y+62	; 0x3e
    20fa:	01 97       	sbiw	r24, 0x01	; 1
    20fc:	9e af       	std	Y+62, r25	; 0x3e
    20fe:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2100:	8d ad       	ldd	r24, Y+61	; 0x3d
    2102:	9e ad       	ldd	r25, Y+62	; 0x3e
    2104:	00 97       	sbiw	r24, 0x00	; 0
    2106:	69 f7       	brne	.-38     	; 0x20e2 <LED_voidShifLeft+0x5da>
    2108:	16 c0       	rjmp	.+44     	; 0x2136 <LED_voidShifLeft+0x62e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    210a:	fe 01       	movw	r30, r28
    210c:	ff 96       	adiw	r30, 0x3f	; 63
    210e:	60 81       	ld	r22, Z
    2110:	71 81       	ldd	r23, Z+1	; 0x01
    2112:	82 81       	ldd	r24, Z+2	; 0x02
    2114:	93 81       	ldd	r25, Z+3	; 0x03
    2116:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    211a:	dc 01       	movw	r26, r24
    211c:	cb 01       	movw	r24, r22
    211e:	9e af       	std	Y+62, r25	; 0x3e
    2120:	8d af       	std	Y+61, r24	; 0x3d
    2122:	8d ad       	ldd	r24, Y+61	; 0x3d
    2124:	9e ad       	ldd	r25, Y+62	; 0x3e
    2126:	9a af       	std	Y+58, r25	; 0x3a
    2128:	89 af       	std	Y+57, r24	; 0x39
    212a:	89 ad       	ldd	r24, Y+57	; 0x39
    212c:	9a ad       	ldd	r25, Y+58	; 0x3a
    212e:	01 97       	sbiw	r24, 0x01	; 1
    2130:	f1 f7       	brne	.-4      	; 0x212e <LED_voidShifLeft+0x626>
    2132:	9a af       	std	Y+58, r25	; 0x3a
    2134:	89 af       	std	Y+57, r24	; 0x39
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    2136:	fe 01       	movw	r30, r28
    2138:	ef 58       	subi	r30, 0x8F	; 143
    213a:	ff 4f       	sbci	r31, 0xFF	; 255
    213c:	80 81       	ld	r24, Z
    213e:	60 e0       	ldi	r22, 0x00	; 0
    2140:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN4, DIO_u8HIGH);
    2144:	fe 01       	movw	r30, r28
    2146:	ef 58       	subi	r30, 0x8F	; 143
    2148:	ff 4f       	sbci	r31, 0xFF	; 255
    214a:	80 81       	ld	r24, Z
    214c:	64 e0       	ldi	r22, 0x04	; 4
    214e:	41 e0       	ldi	r20, 0x01	; 1
    2150:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2154:	fe 01       	movw	r30, r28
    2156:	ee 58       	subi	r30, 0x8E	; 142
    2158:	ff 4f       	sbci	r31, 0xFF	; 255
    215a:	80 81       	ld	r24, Z
    215c:	88 2f       	mov	r24, r24
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	a0 e0       	ldi	r26, 0x00	; 0
    2162:	b0 e0       	ldi	r27, 0x00	; 0
    2164:	bc 01       	movw	r22, r24
    2166:	cd 01       	movw	r24, r26
    2168:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    216c:	dc 01       	movw	r26, r24
    216e:	cb 01       	movw	r24, r22
    2170:	8d ab       	std	Y+53, r24	; 0x35
    2172:	9e ab       	std	Y+54, r25	; 0x36
    2174:	af ab       	std	Y+55, r26	; 0x37
    2176:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2178:	6d a9       	ldd	r22, Y+53	; 0x35
    217a:	7e a9       	ldd	r23, Y+54	; 0x36
    217c:	8f a9       	ldd	r24, Y+55	; 0x37
    217e:	98 ad       	ldd	r25, Y+56	; 0x38
    2180:	20 e0       	ldi	r18, 0x00	; 0
    2182:	30 e0       	ldi	r19, 0x00	; 0
    2184:	4a ef       	ldi	r20, 0xFA	; 250
    2186:	54 e4       	ldi	r21, 0x44	; 68
    2188:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    218c:	dc 01       	movw	r26, r24
    218e:	cb 01       	movw	r24, r22
    2190:	89 ab       	std	Y+49, r24	; 0x31
    2192:	9a ab       	std	Y+50, r25	; 0x32
    2194:	ab ab       	std	Y+51, r26	; 0x33
    2196:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2198:	69 a9       	ldd	r22, Y+49	; 0x31
    219a:	7a a9       	ldd	r23, Y+50	; 0x32
    219c:	8b a9       	ldd	r24, Y+51	; 0x33
    219e:	9c a9       	ldd	r25, Y+52	; 0x34
    21a0:	20 e0       	ldi	r18, 0x00	; 0
    21a2:	30 e0       	ldi	r19, 0x00	; 0
    21a4:	40 e8       	ldi	r20, 0x80	; 128
    21a6:	5f e3       	ldi	r21, 0x3F	; 63
    21a8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21ac:	88 23       	and	r24, r24
    21ae:	2c f4       	brge	.+10     	; 0x21ba <LED_voidShifLeft+0x6b2>
		__ticks = 1;
    21b0:	81 e0       	ldi	r24, 0x01	; 1
    21b2:	90 e0       	ldi	r25, 0x00	; 0
    21b4:	98 ab       	std	Y+48, r25	; 0x30
    21b6:	8f a7       	std	Y+47, r24	; 0x2f
    21b8:	3f c0       	rjmp	.+126    	; 0x2238 <LED_voidShifLeft+0x730>
	else if (__tmp > 65535)
    21ba:	69 a9       	ldd	r22, Y+49	; 0x31
    21bc:	7a a9       	ldd	r23, Y+50	; 0x32
    21be:	8b a9       	ldd	r24, Y+51	; 0x33
    21c0:	9c a9       	ldd	r25, Y+52	; 0x34
    21c2:	20 e0       	ldi	r18, 0x00	; 0
    21c4:	3f ef       	ldi	r19, 0xFF	; 255
    21c6:	4f e7       	ldi	r20, 0x7F	; 127
    21c8:	57 e4       	ldi	r21, 0x47	; 71
    21ca:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21ce:	18 16       	cp	r1, r24
    21d0:	4c f5       	brge	.+82     	; 0x2224 <LED_voidShifLeft+0x71c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21d2:	6d a9       	ldd	r22, Y+53	; 0x35
    21d4:	7e a9       	ldd	r23, Y+54	; 0x36
    21d6:	8f a9       	ldd	r24, Y+55	; 0x37
    21d8:	98 ad       	ldd	r25, Y+56	; 0x38
    21da:	20 e0       	ldi	r18, 0x00	; 0
    21dc:	30 e0       	ldi	r19, 0x00	; 0
    21de:	40 e2       	ldi	r20, 0x20	; 32
    21e0:	51 e4       	ldi	r21, 0x41	; 65
    21e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21e6:	dc 01       	movw	r26, r24
    21e8:	cb 01       	movw	r24, r22
    21ea:	bc 01       	movw	r22, r24
    21ec:	cd 01       	movw	r24, r26
    21ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21f2:	dc 01       	movw	r26, r24
    21f4:	cb 01       	movw	r24, r22
    21f6:	98 ab       	std	Y+48, r25	; 0x30
    21f8:	8f a7       	std	Y+47, r24	; 0x2f
    21fa:	0f c0       	rjmp	.+30     	; 0x221a <LED_voidShifLeft+0x712>
    21fc:	88 ec       	ldi	r24, 0xC8	; 200
    21fe:	90 e0       	ldi	r25, 0x00	; 0
    2200:	9e a7       	std	Y+46, r25	; 0x2e
    2202:	8d a7       	std	Y+45, r24	; 0x2d
    2204:	8d a5       	ldd	r24, Y+45	; 0x2d
    2206:	9e a5       	ldd	r25, Y+46	; 0x2e
    2208:	01 97       	sbiw	r24, 0x01	; 1
    220a:	f1 f7       	brne	.-4      	; 0x2208 <LED_voidShifLeft+0x700>
    220c:	9e a7       	std	Y+46, r25	; 0x2e
    220e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2210:	8f a5       	ldd	r24, Y+47	; 0x2f
    2212:	98 a9       	ldd	r25, Y+48	; 0x30
    2214:	01 97       	sbiw	r24, 0x01	; 1
    2216:	98 ab       	std	Y+48, r25	; 0x30
    2218:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    221a:	8f a5       	ldd	r24, Y+47	; 0x2f
    221c:	98 a9       	ldd	r25, Y+48	; 0x30
    221e:	00 97       	sbiw	r24, 0x00	; 0
    2220:	69 f7       	brne	.-38     	; 0x21fc <LED_voidShifLeft+0x6f4>
    2222:	14 c0       	rjmp	.+40     	; 0x224c <LED_voidShifLeft+0x744>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2224:	69 a9       	ldd	r22, Y+49	; 0x31
    2226:	7a a9       	ldd	r23, Y+50	; 0x32
    2228:	8b a9       	ldd	r24, Y+51	; 0x33
    222a:	9c a9       	ldd	r25, Y+52	; 0x34
    222c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2230:	dc 01       	movw	r26, r24
    2232:	cb 01       	movw	r24, r22
    2234:	98 ab       	std	Y+48, r25	; 0x30
    2236:	8f a7       	std	Y+47, r24	; 0x2f
    2238:	8f a5       	ldd	r24, Y+47	; 0x2f
    223a:	98 a9       	ldd	r25, Y+48	; 0x30
    223c:	9c a7       	std	Y+44, r25	; 0x2c
    223e:	8b a7       	std	Y+43, r24	; 0x2b
    2240:	8b a5       	ldd	r24, Y+43	; 0x2b
    2242:	9c a5       	ldd	r25, Y+44	; 0x2c
    2244:	01 97       	sbiw	r24, 0x01	; 1
    2246:	f1 f7       	brne	.-4      	; 0x2244 <LED_voidShifLeft+0x73c>
    2248:	9c a7       	std	Y+44, r25	; 0x2c
    224a:	8b a7       	std	Y+43, r24	; 0x2b
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    224c:	fe 01       	movw	r30, r28
    224e:	ef 58       	subi	r30, 0x8F	; 143
    2250:	ff 4f       	sbci	r31, 0xFF	; 255
    2252:	80 81       	ld	r24, Z
    2254:	60 e0       	ldi	r22, 0x00	; 0
    2256:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN5, DIO_u8HIGH);
    225a:	fe 01       	movw	r30, r28
    225c:	ef 58       	subi	r30, 0x8F	; 143
    225e:	ff 4f       	sbci	r31, 0xFF	; 255
    2260:	80 81       	ld	r24, Z
    2262:	65 e0       	ldi	r22, 0x05	; 5
    2264:	41 e0       	ldi	r20, 0x01	; 1
    2266:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    226a:	fe 01       	movw	r30, r28
    226c:	ee 58       	subi	r30, 0x8E	; 142
    226e:	ff 4f       	sbci	r31, 0xFF	; 255
    2270:	80 81       	ld	r24, Z
    2272:	88 2f       	mov	r24, r24
    2274:	90 e0       	ldi	r25, 0x00	; 0
    2276:	a0 e0       	ldi	r26, 0x00	; 0
    2278:	b0 e0       	ldi	r27, 0x00	; 0
    227a:	bc 01       	movw	r22, r24
    227c:	cd 01       	movw	r24, r26
    227e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2282:	dc 01       	movw	r26, r24
    2284:	cb 01       	movw	r24, r22
    2286:	8f a3       	std	Y+39, r24	; 0x27
    2288:	98 a7       	std	Y+40, r25	; 0x28
    228a:	a9 a7       	std	Y+41, r26	; 0x29
    228c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    228e:	6f a1       	ldd	r22, Y+39	; 0x27
    2290:	78 a5       	ldd	r23, Y+40	; 0x28
    2292:	89 a5       	ldd	r24, Y+41	; 0x29
    2294:	9a a5       	ldd	r25, Y+42	; 0x2a
    2296:	20 e0       	ldi	r18, 0x00	; 0
    2298:	30 e0       	ldi	r19, 0x00	; 0
    229a:	4a ef       	ldi	r20, 0xFA	; 250
    229c:	54 e4       	ldi	r21, 0x44	; 68
    229e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22a2:	dc 01       	movw	r26, r24
    22a4:	cb 01       	movw	r24, r22
    22a6:	8b a3       	std	Y+35, r24	; 0x23
    22a8:	9c a3       	std	Y+36, r25	; 0x24
    22aa:	ad a3       	std	Y+37, r26	; 0x25
    22ac:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    22ae:	6b a1       	ldd	r22, Y+35	; 0x23
    22b0:	7c a1       	ldd	r23, Y+36	; 0x24
    22b2:	8d a1       	ldd	r24, Y+37	; 0x25
    22b4:	9e a1       	ldd	r25, Y+38	; 0x26
    22b6:	20 e0       	ldi	r18, 0x00	; 0
    22b8:	30 e0       	ldi	r19, 0x00	; 0
    22ba:	40 e8       	ldi	r20, 0x80	; 128
    22bc:	5f e3       	ldi	r21, 0x3F	; 63
    22be:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22c2:	88 23       	and	r24, r24
    22c4:	2c f4       	brge	.+10     	; 0x22d0 <LED_voidShifLeft+0x7c8>
		__ticks = 1;
    22c6:	81 e0       	ldi	r24, 0x01	; 1
    22c8:	90 e0       	ldi	r25, 0x00	; 0
    22ca:	9a a3       	std	Y+34, r25	; 0x22
    22cc:	89 a3       	std	Y+33, r24	; 0x21
    22ce:	3f c0       	rjmp	.+126    	; 0x234e <LED_voidShifLeft+0x846>
	else if (__tmp > 65535)
    22d0:	6b a1       	ldd	r22, Y+35	; 0x23
    22d2:	7c a1       	ldd	r23, Y+36	; 0x24
    22d4:	8d a1       	ldd	r24, Y+37	; 0x25
    22d6:	9e a1       	ldd	r25, Y+38	; 0x26
    22d8:	20 e0       	ldi	r18, 0x00	; 0
    22da:	3f ef       	ldi	r19, 0xFF	; 255
    22dc:	4f e7       	ldi	r20, 0x7F	; 127
    22de:	57 e4       	ldi	r21, 0x47	; 71
    22e0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22e4:	18 16       	cp	r1, r24
    22e6:	4c f5       	brge	.+82     	; 0x233a <LED_voidShifLeft+0x832>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22e8:	6f a1       	ldd	r22, Y+39	; 0x27
    22ea:	78 a5       	ldd	r23, Y+40	; 0x28
    22ec:	89 a5       	ldd	r24, Y+41	; 0x29
    22ee:	9a a5       	ldd	r25, Y+42	; 0x2a
    22f0:	20 e0       	ldi	r18, 0x00	; 0
    22f2:	30 e0       	ldi	r19, 0x00	; 0
    22f4:	40 e2       	ldi	r20, 0x20	; 32
    22f6:	51 e4       	ldi	r21, 0x41	; 65
    22f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22fc:	dc 01       	movw	r26, r24
    22fe:	cb 01       	movw	r24, r22
    2300:	bc 01       	movw	r22, r24
    2302:	cd 01       	movw	r24, r26
    2304:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2308:	dc 01       	movw	r26, r24
    230a:	cb 01       	movw	r24, r22
    230c:	9a a3       	std	Y+34, r25	; 0x22
    230e:	89 a3       	std	Y+33, r24	; 0x21
    2310:	0f c0       	rjmp	.+30     	; 0x2330 <LED_voidShifLeft+0x828>
    2312:	88 ec       	ldi	r24, 0xC8	; 200
    2314:	90 e0       	ldi	r25, 0x00	; 0
    2316:	98 a3       	std	Y+32, r25	; 0x20
    2318:	8f 8f       	std	Y+31, r24	; 0x1f
    231a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    231c:	98 a1       	ldd	r25, Y+32	; 0x20
    231e:	01 97       	sbiw	r24, 0x01	; 1
    2320:	f1 f7       	brne	.-4      	; 0x231e <LED_voidShifLeft+0x816>
    2322:	98 a3       	std	Y+32, r25	; 0x20
    2324:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2326:	89 a1       	ldd	r24, Y+33	; 0x21
    2328:	9a a1       	ldd	r25, Y+34	; 0x22
    232a:	01 97       	sbiw	r24, 0x01	; 1
    232c:	9a a3       	std	Y+34, r25	; 0x22
    232e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2330:	89 a1       	ldd	r24, Y+33	; 0x21
    2332:	9a a1       	ldd	r25, Y+34	; 0x22
    2334:	00 97       	sbiw	r24, 0x00	; 0
    2336:	69 f7       	brne	.-38     	; 0x2312 <LED_voidShifLeft+0x80a>
    2338:	14 c0       	rjmp	.+40     	; 0x2362 <LED_voidShifLeft+0x85a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    233a:	6b a1       	ldd	r22, Y+35	; 0x23
    233c:	7c a1       	ldd	r23, Y+36	; 0x24
    233e:	8d a1       	ldd	r24, Y+37	; 0x25
    2340:	9e a1       	ldd	r25, Y+38	; 0x26
    2342:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2346:	dc 01       	movw	r26, r24
    2348:	cb 01       	movw	r24, r22
    234a:	9a a3       	std	Y+34, r25	; 0x22
    234c:	89 a3       	std	Y+33, r24	; 0x21
    234e:	89 a1       	ldd	r24, Y+33	; 0x21
    2350:	9a a1       	ldd	r25, Y+34	; 0x22
    2352:	9e 8f       	std	Y+30, r25	; 0x1e
    2354:	8d 8f       	std	Y+29, r24	; 0x1d
    2356:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2358:	9e 8d       	ldd	r25, Y+30	; 0x1e
    235a:	01 97       	sbiw	r24, 0x01	; 1
    235c:	f1 f7       	brne	.-4      	; 0x235a <LED_voidShifLeft+0x852>
    235e:	9e 8f       	std	Y+30, r25	; 0x1e
    2360:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    2362:	fe 01       	movw	r30, r28
    2364:	ef 58       	subi	r30, 0x8F	; 143
    2366:	ff 4f       	sbci	r31, 0xFF	; 255
    2368:	80 81       	ld	r24, Z
    236a:	60 e0       	ldi	r22, 0x00	; 0
    236c:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN6, DIO_u8HIGH);
    2370:	fe 01       	movw	r30, r28
    2372:	ef 58       	subi	r30, 0x8F	; 143
    2374:	ff 4f       	sbci	r31, 0xFF	; 255
    2376:	80 81       	ld	r24, Z
    2378:	66 e0       	ldi	r22, 0x06	; 6
    237a:	41 e0       	ldi	r20, 0x01	; 1
    237c:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2380:	fe 01       	movw	r30, r28
    2382:	ee 58       	subi	r30, 0x8E	; 142
    2384:	ff 4f       	sbci	r31, 0xFF	; 255
    2386:	80 81       	ld	r24, Z
    2388:	88 2f       	mov	r24, r24
    238a:	90 e0       	ldi	r25, 0x00	; 0
    238c:	a0 e0       	ldi	r26, 0x00	; 0
    238e:	b0 e0       	ldi	r27, 0x00	; 0
    2390:	bc 01       	movw	r22, r24
    2392:	cd 01       	movw	r24, r26
    2394:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2398:	dc 01       	movw	r26, r24
    239a:	cb 01       	movw	r24, r22
    239c:	89 8f       	std	Y+25, r24	; 0x19
    239e:	9a 8f       	std	Y+26, r25	; 0x1a
    23a0:	ab 8f       	std	Y+27, r26	; 0x1b
    23a2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23a4:	69 8d       	ldd	r22, Y+25	; 0x19
    23a6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    23a8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    23aa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    23ac:	20 e0       	ldi	r18, 0x00	; 0
    23ae:	30 e0       	ldi	r19, 0x00	; 0
    23b0:	4a ef       	ldi	r20, 0xFA	; 250
    23b2:	54 e4       	ldi	r21, 0x44	; 68
    23b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23b8:	dc 01       	movw	r26, r24
    23ba:	cb 01       	movw	r24, r22
    23bc:	8d 8b       	std	Y+21, r24	; 0x15
    23be:	9e 8b       	std	Y+22, r25	; 0x16
    23c0:	af 8b       	std	Y+23, r26	; 0x17
    23c2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    23c4:	6d 89       	ldd	r22, Y+21	; 0x15
    23c6:	7e 89       	ldd	r23, Y+22	; 0x16
    23c8:	8f 89       	ldd	r24, Y+23	; 0x17
    23ca:	98 8d       	ldd	r25, Y+24	; 0x18
    23cc:	20 e0       	ldi	r18, 0x00	; 0
    23ce:	30 e0       	ldi	r19, 0x00	; 0
    23d0:	40 e8       	ldi	r20, 0x80	; 128
    23d2:	5f e3       	ldi	r21, 0x3F	; 63
    23d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23d8:	88 23       	and	r24, r24
    23da:	2c f4       	brge	.+10     	; 0x23e6 <LED_voidShifLeft+0x8de>
		__ticks = 1;
    23dc:	81 e0       	ldi	r24, 0x01	; 1
    23de:	90 e0       	ldi	r25, 0x00	; 0
    23e0:	9c 8b       	std	Y+20, r25	; 0x14
    23e2:	8b 8b       	std	Y+19, r24	; 0x13
    23e4:	3f c0       	rjmp	.+126    	; 0x2464 <LED_voidShifLeft+0x95c>
	else if (__tmp > 65535)
    23e6:	6d 89       	ldd	r22, Y+21	; 0x15
    23e8:	7e 89       	ldd	r23, Y+22	; 0x16
    23ea:	8f 89       	ldd	r24, Y+23	; 0x17
    23ec:	98 8d       	ldd	r25, Y+24	; 0x18
    23ee:	20 e0       	ldi	r18, 0x00	; 0
    23f0:	3f ef       	ldi	r19, 0xFF	; 255
    23f2:	4f e7       	ldi	r20, 0x7F	; 127
    23f4:	57 e4       	ldi	r21, 0x47	; 71
    23f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23fa:	18 16       	cp	r1, r24
    23fc:	4c f5       	brge	.+82     	; 0x2450 <LED_voidShifLeft+0x948>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23fe:	69 8d       	ldd	r22, Y+25	; 0x19
    2400:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2402:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2404:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2406:	20 e0       	ldi	r18, 0x00	; 0
    2408:	30 e0       	ldi	r19, 0x00	; 0
    240a:	40 e2       	ldi	r20, 0x20	; 32
    240c:	51 e4       	ldi	r21, 0x41	; 65
    240e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2412:	dc 01       	movw	r26, r24
    2414:	cb 01       	movw	r24, r22
    2416:	bc 01       	movw	r22, r24
    2418:	cd 01       	movw	r24, r26
    241a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    241e:	dc 01       	movw	r26, r24
    2420:	cb 01       	movw	r24, r22
    2422:	9c 8b       	std	Y+20, r25	; 0x14
    2424:	8b 8b       	std	Y+19, r24	; 0x13
    2426:	0f c0       	rjmp	.+30     	; 0x2446 <LED_voidShifLeft+0x93e>
    2428:	88 ec       	ldi	r24, 0xC8	; 200
    242a:	90 e0       	ldi	r25, 0x00	; 0
    242c:	9a 8b       	std	Y+18, r25	; 0x12
    242e:	89 8b       	std	Y+17, r24	; 0x11
    2430:	89 89       	ldd	r24, Y+17	; 0x11
    2432:	9a 89       	ldd	r25, Y+18	; 0x12
    2434:	01 97       	sbiw	r24, 0x01	; 1
    2436:	f1 f7       	brne	.-4      	; 0x2434 <LED_voidShifLeft+0x92c>
    2438:	9a 8b       	std	Y+18, r25	; 0x12
    243a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    243c:	8b 89       	ldd	r24, Y+19	; 0x13
    243e:	9c 89       	ldd	r25, Y+20	; 0x14
    2440:	01 97       	sbiw	r24, 0x01	; 1
    2442:	9c 8b       	std	Y+20, r25	; 0x14
    2444:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2446:	8b 89       	ldd	r24, Y+19	; 0x13
    2448:	9c 89       	ldd	r25, Y+20	; 0x14
    244a:	00 97       	sbiw	r24, 0x00	; 0
    244c:	69 f7       	brne	.-38     	; 0x2428 <LED_voidShifLeft+0x920>
    244e:	14 c0       	rjmp	.+40     	; 0x2478 <LED_voidShifLeft+0x970>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2450:	6d 89       	ldd	r22, Y+21	; 0x15
    2452:	7e 89       	ldd	r23, Y+22	; 0x16
    2454:	8f 89       	ldd	r24, Y+23	; 0x17
    2456:	98 8d       	ldd	r25, Y+24	; 0x18
    2458:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    245c:	dc 01       	movw	r26, r24
    245e:	cb 01       	movw	r24, r22
    2460:	9c 8b       	std	Y+20, r25	; 0x14
    2462:	8b 8b       	std	Y+19, r24	; 0x13
    2464:	8b 89       	ldd	r24, Y+19	; 0x13
    2466:	9c 89       	ldd	r25, Y+20	; 0x14
    2468:	98 8b       	std	Y+16, r25	; 0x10
    246a:	8f 87       	std	Y+15, r24	; 0x0f
    246c:	8f 85       	ldd	r24, Y+15	; 0x0f
    246e:	98 89       	ldd	r25, Y+16	; 0x10
    2470:	01 97       	sbiw	r24, 0x01	; 1
    2472:	f1 f7       	brne	.-4      	; 0x2470 <LED_voidShifLeft+0x968>
    2474:	98 8b       	std	Y+16, r25	; 0x10
    2476:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    2478:	fe 01       	movw	r30, r28
    247a:	ef 58       	subi	r30, 0x8F	; 143
    247c:	ff 4f       	sbci	r31, 0xFF	; 255
    247e:	80 81       	ld	r24, Z
    2480:	60 e0       	ldi	r22, 0x00	; 0
    2482:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN7, DIO_u8HIGH);
    2486:	fe 01       	movw	r30, r28
    2488:	ef 58       	subi	r30, 0x8F	; 143
    248a:	ff 4f       	sbci	r31, 0xFF	; 255
    248c:	80 81       	ld	r24, Z
    248e:	67 e0       	ldi	r22, 0x07	; 7
    2490:	41 e0       	ldi	r20, 0x01	; 1
    2492:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2496:	fe 01       	movw	r30, r28
    2498:	ee 58       	subi	r30, 0x8E	; 142
    249a:	ff 4f       	sbci	r31, 0xFF	; 255
    249c:	80 81       	ld	r24, Z
    249e:	88 2f       	mov	r24, r24
    24a0:	90 e0       	ldi	r25, 0x00	; 0
    24a2:	a0 e0       	ldi	r26, 0x00	; 0
    24a4:	b0 e0       	ldi	r27, 0x00	; 0
    24a6:	bc 01       	movw	r22, r24
    24a8:	cd 01       	movw	r24, r26
    24aa:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    24ae:	dc 01       	movw	r26, r24
    24b0:	cb 01       	movw	r24, r22
    24b2:	8b 87       	std	Y+11, r24	; 0x0b
    24b4:	9c 87       	std	Y+12, r25	; 0x0c
    24b6:	ad 87       	std	Y+13, r26	; 0x0d
    24b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    24bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    24be:	8d 85       	ldd	r24, Y+13	; 0x0d
    24c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    24c2:	20 e0       	ldi	r18, 0x00	; 0
    24c4:	30 e0       	ldi	r19, 0x00	; 0
    24c6:	4a ef       	ldi	r20, 0xFA	; 250
    24c8:	54 e4       	ldi	r21, 0x44	; 68
    24ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24ce:	dc 01       	movw	r26, r24
    24d0:	cb 01       	movw	r24, r22
    24d2:	8f 83       	std	Y+7, r24	; 0x07
    24d4:	98 87       	std	Y+8, r25	; 0x08
    24d6:	a9 87       	std	Y+9, r26	; 0x09
    24d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    24da:	6f 81       	ldd	r22, Y+7	; 0x07
    24dc:	78 85       	ldd	r23, Y+8	; 0x08
    24de:	89 85       	ldd	r24, Y+9	; 0x09
    24e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    24e2:	20 e0       	ldi	r18, 0x00	; 0
    24e4:	30 e0       	ldi	r19, 0x00	; 0
    24e6:	40 e8       	ldi	r20, 0x80	; 128
    24e8:	5f e3       	ldi	r21, 0x3F	; 63
    24ea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    24ee:	88 23       	and	r24, r24
    24f0:	2c f4       	brge	.+10     	; 0x24fc <LED_voidShifLeft+0x9f4>
		__ticks = 1;
    24f2:	81 e0       	ldi	r24, 0x01	; 1
    24f4:	90 e0       	ldi	r25, 0x00	; 0
    24f6:	9e 83       	std	Y+6, r25	; 0x06
    24f8:	8d 83       	std	Y+5, r24	; 0x05
    24fa:	3f c0       	rjmp	.+126    	; 0x257a <LED_voidShifLeft+0xa72>
	else if (__tmp > 65535)
    24fc:	6f 81       	ldd	r22, Y+7	; 0x07
    24fe:	78 85       	ldd	r23, Y+8	; 0x08
    2500:	89 85       	ldd	r24, Y+9	; 0x09
    2502:	9a 85       	ldd	r25, Y+10	; 0x0a
    2504:	20 e0       	ldi	r18, 0x00	; 0
    2506:	3f ef       	ldi	r19, 0xFF	; 255
    2508:	4f e7       	ldi	r20, 0x7F	; 127
    250a:	57 e4       	ldi	r21, 0x47	; 71
    250c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2510:	18 16       	cp	r1, r24
    2512:	4c f5       	brge	.+82     	; 0x2566 <LED_voidShifLeft+0xa5e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2514:	6b 85       	ldd	r22, Y+11	; 0x0b
    2516:	7c 85       	ldd	r23, Y+12	; 0x0c
    2518:	8d 85       	ldd	r24, Y+13	; 0x0d
    251a:	9e 85       	ldd	r25, Y+14	; 0x0e
    251c:	20 e0       	ldi	r18, 0x00	; 0
    251e:	30 e0       	ldi	r19, 0x00	; 0
    2520:	40 e2       	ldi	r20, 0x20	; 32
    2522:	51 e4       	ldi	r21, 0x41	; 65
    2524:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2528:	dc 01       	movw	r26, r24
    252a:	cb 01       	movw	r24, r22
    252c:	bc 01       	movw	r22, r24
    252e:	cd 01       	movw	r24, r26
    2530:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2534:	dc 01       	movw	r26, r24
    2536:	cb 01       	movw	r24, r22
    2538:	9e 83       	std	Y+6, r25	; 0x06
    253a:	8d 83       	std	Y+5, r24	; 0x05
    253c:	0f c0       	rjmp	.+30     	; 0x255c <LED_voidShifLeft+0xa54>
    253e:	88 ec       	ldi	r24, 0xC8	; 200
    2540:	90 e0       	ldi	r25, 0x00	; 0
    2542:	9c 83       	std	Y+4, r25	; 0x04
    2544:	8b 83       	std	Y+3, r24	; 0x03
    2546:	8b 81       	ldd	r24, Y+3	; 0x03
    2548:	9c 81       	ldd	r25, Y+4	; 0x04
    254a:	01 97       	sbiw	r24, 0x01	; 1
    254c:	f1 f7       	brne	.-4      	; 0x254a <LED_voidShifLeft+0xa42>
    254e:	9c 83       	std	Y+4, r25	; 0x04
    2550:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2552:	8d 81       	ldd	r24, Y+5	; 0x05
    2554:	9e 81       	ldd	r25, Y+6	; 0x06
    2556:	01 97       	sbiw	r24, 0x01	; 1
    2558:	9e 83       	std	Y+6, r25	; 0x06
    255a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    255c:	8d 81       	ldd	r24, Y+5	; 0x05
    255e:	9e 81       	ldd	r25, Y+6	; 0x06
    2560:	00 97       	sbiw	r24, 0x00	; 0
    2562:	69 f7       	brne	.-38     	; 0x253e <LED_voidShifLeft+0xa36>
    2564:	14 c0       	rjmp	.+40     	; 0x258e <LED_voidShifLeft+0xa86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2566:	6f 81       	ldd	r22, Y+7	; 0x07
    2568:	78 85       	ldd	r23, Y+8	; 0x08
    256a:	89 85       	ldd	r24, Y+9	; 0x09
    256c:	9a 85       	ldd	r25, Y+10	; 0x0a
    256e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2572:	dc 01       	movw	r26, r24
    2574:	cb 01       	movw	r24, r22
    2576:	9e 83       	std	Y+6, r25	; 0x06
    2578:	8d 83       	std	Y+5, r24	; 0x05
    257a:	8d 81       	ldd	r24, Y+5	; 0x05
    257c:	9e 81       	ldd	r25, Y+6	; 0x06
    257e:	9a 83       	std	Y+2, r25	; 0x02
    2580:	89 83       	std	Y+1, r24	; 0x01
    2582:	89 81       	ldd	r24, Y+1	; 0x01
    2584:	9a 81       	ldd	r25, Y+2	; 0x02
    2586:	01 97       	sbiw	r24, 0x01	; 1
    2588:	f1 f7       	brne	.-4      	; 0x2586 <LED_voidShifLeft+0xa7e>
    258a:	9a 83       	std	Y+2, r25	; 0x02
    258c:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    258e:	fe 01       	movw	r30, r28
    2590:	ef 58       	subi	r30, 0x8F	; 143
    2592:	ff 4f       	sbci	r31, 0xFF	; 255
    2594:	80 81       	ld	r24, Z
    2596:	60 e0       	ldi	r22, 0x00	; 0
    2598:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
}
    259c:	ce 58       	subi	r28, 0x8E	; 142
    259e:	df 4f       	sbci	r29, 0xFF	; 255
    25a0:	0f b6       	in	r0, 0x3f	; 63
    25a2:	f8 94       	cli
    25a4:	de bf       	out	0x3e, r29	; 62
    25a6:	0f be       	out	0x3f, r0	; 63
    25a8:	cd bf       	out	0x3d, r28	; 61
    25aa:	cf 91       	pop	r28
    25ac:	df 91       	pop	r29
    25ae:	1f 91       	pop	r17
    25b0:	0f 91       	pop	r16
    25b2:	08 95       	ret

000025b4 <LED_voidShifRight>:

void LED_voidShifRight (uint8 Copy_u8PortNum, uint8 Copy_u8Delayms)
{
    25b4:	0f 93       	push	r16
    25b6:	1f 93       	push	r17
    25b8:	df 93       	push	r29
    25ba:	cf 93       	push	r28
    25bc:	cd b7       	in	r28, 0x3d	; 61
    25be:	de b7       	in	r29, 0x3e	; 62
    25c0:	c2 57       	subi	r28, 0x72	; 114
    25c2:	d0 40       	sbci	r29, 0x00	; 0
    25c4:	0f b6       	in	r0, 0x3f	; 63
    25c6:	f8 94       	cli
    25c8:	de bf       	out	0x3e, r29	; 62
    25ca:	0f be       	out	0x3f, r0	; 63
    25cc:	cd bf       	out	0x3d, r28	; 61
    25ce:	fe 01       	movw	r30, r28
    25d0:	ef 58       	subi	r30, 0x8F	; 143
    25d2:	ff 4f       	sbci	r31, 0xFF	; 255
    25d4:	80 83       	st	Z, r24
    25d6:	fe 01       	movw	r30, r28
    25d8:	ee 58       	subi	r30, 0x8E	; 142
    25da:	ff 4f       	sbci	r31, 0xFF	; 255
    25dc:	60 83       	st	Z, r22
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
    25de:	fe 01       	movw	r30, r28
    25e0:	ef 58       	subi	r30, 0x8F	; 143
    25e2:	ff 4f       	sbci	r31, 0xFF	; 255
    25e4:	80 81       	ld	r24, Z
    25e6:	61 e0       	ldi	r22, 0x01	; 1
    25e8:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN7, DIO_u8HIGH);
    25ec:	fe 01       	movw	r30, r28
    25ee:	ef 58       	subi	r30, 0x8F	; 143
    25f0:	ff 4f       	sbci	r31, 0xFF	; 255
    25f2:	80 81       	ld	r24, Z
    25f4:	67 e0       	ldi	r22, 0x07	; 7
    25f6:	41 e0       	ldi	r20, 0x01	; 1
    25f8:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    25fc:	fe 01       	movw	r30, r28
    25fe:	ee 58       	subi	r30, 0x8E	; 142
    2600:	ff 4f       	sbci	r31, 0xFF	; 255
    2602:	80 81       	ld	r24, Z
    2604:	88 2f       	mov	r24, r24
    2606:	90 e0       	ldi	r25, 0x00	; 0
    2608:	a0 e0       	ldi	r26, 0x00	; 0
    260a:	b0 e0       	ldi	r27, 0x00	; 0
    260c:	bc 01       	movw	r22, r24
    260e:	cd 01       	movw	r24, r26
    2610:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2614:	dc 01       	movw	r26, r24
    2616:	cb 01       	movw	r24, r22
    2618:	fe 01       	movw	r30, r28
    261a:	e3 59       	subi	r30, 0x93	; 147
    261c:	ff 4f       	sbci	r31, 0xFF	; 255
    261e:	80 83       	st	Z, r24
    2620:	91 83       	std	Z+1, r25	; 0x01
    2622:	a2 83       	std	Z+2, r26	; 0x02
    2624:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2626:	8e 01       	movw	r16, r28
    2628:	07 59       	subi	r16, 0x97	; 151
    262a:	1f 4f       	sbci	r17, 0xFF	; 255
    262c:	fe 01       	movw	r30, r28
    262e:	e3 59       	subi	r30, 0x93	; 147
    2630:	ff 4f       	sbci	r31, 0xFF	; 255
    2632:	60 81       	ld	r22, Z
    2634:	71 81       	ldd	r23, Z+1	; 0x01
    2636:	82 81       	ldd	r24, Z+2	; 0x02
    2638:	93 81       	ldd	r25, Z+3	; 0x03
    263a:	20 e0       	ldi	r18, 0x00	; 0
    263c:	30 e0       	ldi	r19, 0x00	; 0
    263e:	4a ef       	ldi	r20, 0xFA	; 250
    2640:	54 e4       	ldi	r21, 0x44	; 68
    2642:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2646:	dc 01       	movw	r26, r24
    2648:	cb 01       	movw	r24, r22
    264a:	f8 01       	movw	r30, r16
    264c:	80 83       	st	Z, r24
    264e:	91 83       	std	Z+1, r25	; 0x01
    2650:	a2 83       	std	Z+2, r26	; 0x02
    2652:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2654:	fe 01       	movw	r30, r28
    2656:	e7 59       	subi	r30, 0x97	; 151
    2658:	ff 4f       	sbci	r31, 0xFF	; 255
    265a:	60 81       	ld	r22, Z
    265c:	71 81       	ldd	r23, Z+1	; 0x01
    265e:	82 81       	ldd	r24, Z+2	; 0x02
    2660:	93 81       	ldd	r25, Z+3	; 0x03
    2662:	20 e0       	ldi	r18, 0x00	; 0
    2664:	30 e0       	ldi	r19, 0x00	; 0
    2666:	40 e8       	ldi	r20, 0x80	; 128
    2668:	5f e3       	ldi	r21, 0x3F	; 63
    266a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    266e:	88 23       	and	r24, r24
    2670:	44 f4       	brge	.+16     	; 0x2682 <LED_voidShifRight+0xce>
		__ticks = 1;
    2672:	fe 01       	movw	r30, r28
    2674:	e9 59       	subi	r30, 0x99	; 153
    2676:	ff 4f       	sbci	r31, 0xFF	; 255
    2678:	81 e0       	ldi	r24, 0x01	; 1
    267a:	90 e0       	ldi	r25, 0x00	; 0
    267c:	91 83       	std	Z+1, r25	; 0x01
    267e:	80 83       	st	Z, r24
    2680:	64 c0       	rjmp	.+200    	; 0x274a <LED_voidShifRight+0x196>
	else if (__tmp > 65535)
    2682:	fe 01       	movw	r30, r28
    2684:	e7 59       	subi	r30, 0x97	; 151
    2686:	ff 4f       	sbci	r31, 0xFF	; 255
    2688:	60 81       	ld	r22, Z
    268a:	71 81       	ldd	r23, Z+1	; 0x01
    268c:	82 81       	ldd	r24, Z+2	; 0x02
    268e:	93 81       	ldd	r25, Z+3	; 0x03
    2690:	20 e0       	ldi	r18, 0x00	; 0
    2692:	3f ef       	ldi	r19, 0xFF	; 255
    2694:	4f e7       	ldi	r20, 0x7F	; 127
    2696:	57 e4       	ldi	r21, 0x47	; 71
    2698:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    269c:	18 16       	cp	r1, r24
    269e:	0c f0       	brlt	.+2      	; 0x26a2 <LED_voidShifRight+0xee>
    26a0:	43 c0       	rjmp	.+134    	; 0x2728 <LED_voidShifRight+0x174>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26a2:	fe 01       	movw	r30, r28
    26a4:	e3 59       	subi	r30, 0x93	; 147
    26a6:	ff 4f       	sbci	r31, 0xFF	; 255
    26a8:	60 81       	ld	r22, Z
    26aa:	71 81       	ldd	r23, Z+1	; 0x01
    26ac:	82 81       	ldd	r24, Z+2	; 0x02
    26ae:	93 81       	ldd	r25, Z+3	; 0x03
    26b0:	20 e0       	ldi	r18, 0x00	; 0
    26b2:	30 e0       	ldi	r19, 0x00	; 0
    26b4:	40 e2       	ldi	r20, 0x20	; 32
    26b6:	51 e4       	ldi	r21, 0x41	; 65
    26b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26bc:	dc 01       	movw	r26, r24
    26be:	cb 01       	movw	r24, r22
    26c0:	8e 01       	movw	r16, r28
    26c2:	09 59       	subi	r16, 0x99	; 153
    26c4:	1f 4f       	sbci	r17, 0xFF	; 255
    26c6:	bc 01       	movw	r22, r24
    26c8:	cd 01       	movw	r24, r26
    26ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26ce:	dc 01       	movw	r26, r24
    26d0:	cb 01       	movw	r24, r22
    26d2:	f8 01       	movw	r30, r16
    26d4:	91 83       	std	Z+1, r25	; 0x01
    26d6:	80 83       	st	Z, r24
    26d8:	1f c0       	rjmp	.+62     	; 0x2718 <LED_voidShifRight+0x164>
    26da:	fe 01       	movw	r30, r28
    26dc:	eb 59       	subi	r30, 0x9B	; 155
    26de:	ff 4f       	sbci	r31, 0xFF	; 255
    26e0:	88 ec       	ldi	r24, 0xC8	; 200
    26e2:	90 e0       	ldi	r25, 0x00	; 0
    26e4:	91 83       	std	Z+1, r25	; 0x01
    26e6:	80 83       	st	Z, r24
    26e8:	fe 01       	movw	r30, r28
    26ea:	eb 59       	subi	r30, 0x9B	; 155
    26ec:	ff 4f       	sbci	r31, 0xFF	; 255
    26ee:	80 81       	ld	r24, Z
    26f0:	91 81       	ldd	r25, Z+1	; 0x01
    26f2:	01 97       	sbiw	r24, 0x01	; 1
    26f4:	f1 f7       	brne	.-4      	; 0x26f2 <LED_voidShifRight+0x13e>
    26f6:	fe 01       	movw	r30, r28
    26f8:	eb 59       	subi	r30, 0x9B	; 155
    26fa:	ff 4f       	sbci	r31, 0xFF	; 255
    26fc:	91 83       	std	Z+1, r25	; 0x01
    26fe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2700:	de 01       	movw	r26, r28
    2702:	a9 59       	subi	r26, 0x99	; 153
    2704:	bf 4f       	sbci	r27, 0xFF	; 255
    2706:	fe 01       	movw	r30, r28
    2708:	e9 59       	subi	r30, 0x99	; 153
    270a:	ff 4f       	sbci	r31, 0xFF	; 255
    270c:	80 81       	ld	r24, Z
    270e:	91 81       	ldd	r25, Z+1	; 0x01
    2710:	01 97       	sbiw	r24, 0x01	; 1
    2712:	11 96       	adiw	r26, 0x01	; 1
    2714:	9c 93       	st	X, r25
    2716:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2718:	fe 01       	movw	r30, r28
    271a:	e9 59       	subi	r30, 0x99	; 153
    271c:	ff 4f       	sbci	r31, 0xFF	; 255
    271e:	80 81       	ld	r24, Z
    2720:	91 81       	ldd	r25, Z+1	; 0x01
    2722:	00 97       	sbiw	r24, 0x00	; 0
    2724:	d1 f6       	brne	.-76     	; 0x26da <LED_voidShifRight+0x126>
    2726:	27 c0       	rjmp	.+78     	; 0x2776 <LED_voidShifRight+0x1c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2728:	8e 01       	movw	r16, r28
    272a:	09 59       	subi	r16, 0x99	; 153
    272c:	1f 4f       	sbci	r17, 0xFF	; 255
    272e:	fe 01       	movw	r30, r28
    2730:	e7 59       	subi	r30, 0x97	; 151
    2732:	ff 4f       	sbci	r31, 0xFF	; 255
    2734:	60 81       	ld	r22, Z
    2736:	71 81       	ldd	r23, Z+1	; 0x01
    2738:	82 81       	ldd	r24, Z+2	; 0x02
    273a:	93 81       	ldd	r25, Z+3	; 0x03
    273c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2740:	dc 01       	movw	r26, r24
    2742:	cb 01       	movw	r24, r22
    2744:	f8 01       	movw	r30, r16
    2746:	91 83       	std	Z+1, r25	; 0x01
    2748:	80 83       	st	Z, r24
    274a:	de 01       	movw	r26, r28
    274c:	ad 59       	subi	r26, 0x9D	; 157
    274e:	bf 4f       	sbci	r27, 0xFF	; 255
    2750:	fe 01       	movw	r30, r28
    2752:	e9 59       	subi	r30, 0x99	; 153
    2754:	ff 4f       	sbci	r31, 0xFF	; 255
    2756:	80 81       	ld	r24, Z
    2758:	91 81       	ldd	r25, Z+1	; 0x01
    275a:	8d 93       	st	X+, r24
    275c:	9c 93       	st	X, r25
    275e:	fe 01       	movw	r30, r28
    2760:	ed 59       	subi	r30, 0x9D	; 157
    2762:	ff 4f       	sbci	r31, 0xFF	; 255
    2764:	80 81       	ld	r24, Z
    2766:	91 81       	ldd	r25, Z+1	; 0x01
    2768:	01 97       	sbiw	r24, 0x01	; 1
    276a:	f1 f7       	brne	.-4      	; 0x2768 <LED_voidShifRight+0x1b4>
    276c:	fe 01       	movw	r30, r28
    276e:	ed 59       	subi	r30, 0x9D	; 157
    2770:	ff 4f       	sbci	r31, 0xFF	; 255
    2772:	91 83       	std	Z+1, r25	; 0x01
    2774:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    2776:	fe 01       	movw	r30, r28
    2778:	ef 58       	subi	r30, 0x8F	; 143
    277a:	ff 4f       	sbci	r31, 0xFF	; 255
    277c:	80 81       	ld	r24, Z
    277e:	60 e0       	ldi	r22, 0x00	; 0
    2780:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN6, DIO_u8HIGH);
    2784:	fe 01       	movw	r30, r28
    2786:	ef 58       	subi	r30, 0x8F	; 143
    2788:	ff 4f       	sbci	r31, 0xFF	; 255
    278a:	80 81       	ld	r24, Z
    278c:	66 e0       	ldi	r22, 0x06	; 6
    278e:	41 e0       	ldi	r20, 0x01	; 1
    2790:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2794:	fe 01       	movw	r30, r28
    2796:	ee 58       	subi	r30, 0x8E	; 142
    2798:	ff 4f       	sbci	r31, 0xFF	; 255
    279a:	80 81       	ld	r24, Z
    279c:	88 2f       	mov	r24, r24
    279e:	90 e0       	ldi	r25, 0x00	; 0
    27a0:	a0 e0       	ldi	r26, 0x00	; 0
    27a2:	b0 e0       	ldi	r27, 0x00	; 0
    27a4:	bc 01       	movw	r22, r24
    27a6:	cd 01       	movw	r24, r26
    27a8:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    27ac:	dc 01       	movw	r26, r24
    27ae:	cb 01       	movw	r24, r22
    27b0:	fe 01       	movw	r30, r28
    27b2:	e1 5a       	subi	r30, 0xA1	; 161
    27b4:	ff 4f       	sbci	r31, 0xFF	; 255
    27b6:	80 83       	st	Z, r24
    27b8:	91 83       	std	Z+1, r25	; 0x01
    27ba:	a2 83       	std	Z+2, r26	; 0x02
    27bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27be:	8e 01       	movw	r16, r28
    27c0:	05 5a       	subi	r16, 0xA5	; 165
    27c2:	1f 4f       	sbci	r17, 0xFF	; 255
    27c4:	fe 01       	movw	r30, r28
    27c6:	e1 5a       	subi	r30, 0xA1	; 161
    27c8:	ff 4f       	sbci	r31, 0xFF	; 255
    27ca:	60 81       	ld	r22, Z
    27cc:	71 81       	ldd	r23, Z+1	; 0x01
    27ce:	82 81       	ldd	r24, Z+2	; 0x02
    27d0:	93 81       	ldd	r25, Z+3	; 0x03
    27d2:	20 e0       	ldi	r18, 0x00	; 0
    27d4:	30 e0       	ldi	r19, 0x00	; 0
    27d6:	4a ef       	ldi	r20, 0xFA	; 250
    27d8:	54 e4       	ldi	r21, 0x44	; 68
    27da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27de:	dc 01       	movw	r26, r24
    27e0:	cb 01       	movw	r24, r22
    27e2:	f8 01       	movw	r30, r16
    27e4:	80 83       	st	Z, r24
    27e6:	91 83       	std	Z+1, r25	; 0x01
    27e8:	a2 83       	std	Z+2, r26	; 0x02
    27ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27ec:	fe 01       	movw	r30, r28
    27ee:	e5 5a       	subi	r30, 0xA5	; 165
    27f0:	ff 4f       	sbci	r31, 0xFF	; 255
    27f2:	60 81       	ld	r22, Z
    27f4:	71 81       	ldd	r23, Z+1	; 0x01
    27f6:	82 81       	ldd	r24, Z+2	; 0x02
    27f8:	93 81       	ldd	r25, Z+3	; 0x03
    27fa:	20 e0       	ldi	r18, 0x00	; 0
    27fc:	30 e0       	ldi	r19, 0x00	; 0
    27fe:	40 e8       	ldi	r20, 0x80	; 128
    2800:	5f e3       	ldi	r21, 0x3F	; 63
    2802:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2806:	88 23       	and	r24, r24
    2808:	44 f4       	brge	.+16     	; 0x281a <LED_voidShifRight+0x266>
		__ticks = 1;
    280a:	fe 01       	movw	r30, r28
    280c:	e7 5a       	subi	r30, 0xA7	; 167
    280e:	ff 4f       	sbci	r31, 0xFF	; 255
    2810:	81 e0       	ldi	r24, 0x01	; 1
    2812:	90 e0       	ldi	r25, 0x00	; 0
    2814:	91 83       	std	Z+1, r25	; 0x01
    2816:	80 83       	st	Z, r24
    2818:	64 c0       	rjmp	.+200    	; 0x28e2 <LED_voidShifRight+0x32e>
	else if (__tmp > 65535)
    281a:	fe 01       	movw	r30, r28
    281c:	e5 5a       	subi	r30, 0xA5	; 165
    281e:	ff 4f       	sbci	r31, 0xFF	; 255
    2820:	60 81       	ld	r22, Z
    2822:	71 81       	ldd	r23, Z+1	; 0x01
    2824:	82 81       	ldd	r24, Z+2	; 0x02
    2826:	93 81       	ldd	r25, Z+3	; 0x03
    2828:	20 e0       	ldi	r18, 0x00	; 0
    282a:	3f ef       	ldi	r19, 0xFF	; 255
    282c:	4f e7       	ldi	r20, 0x7F	; 127
    282e:	57 e4       	ldi	r21, 0x47	; 71
    2830:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2834:	18 16       	cp	r1, r24
    2836:	0c f0       	brlt	.+2      	; 0x283a <LED_voidShifRight+0x286>
    2838:	43 c0       	rjmp	.+134    	; 0x28c0 <LED_voidShifRight+0x30c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    283a:	fe 01       	movw	r30, r28
    283c:	e1 5a       	subi	r30, 0xA1	; 161
    283e:	ff 4f       	sbci	r31, 0xFF	; 255
    2840:	60 81       	ld	r22, Z
    2842:	71 81       	ldd	r23, Z+1	; 0x01
    2844:	82 81       	ldd	r24, Z+2	; 0x02
    2846:	93 81       	ldd	r25, Z+3	; 0x03
    2848:	20 e0       	ldi	r18, 0x00	; 0
    284a:	30 e0       	ldi	r19, 0x00	; 0
    284c:	40 e2       	ldi	r20, 0x20	; 32
    284e:	51 e4       	ldi	r21, 0x41	; 65
    2850:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2854:	dc 01       	movw	r26, r24
    2856:	cb 01       	movw	r24, r22
    2858:	8e 01       	movw	r16, r28
    285a:	07 5a       	subi	r16, 0xA7	; 167
    285c:	1f 4f       	sbci	r17, 0xFF	; 255
    285e:	bc 01       	movw	r22, r24
    2860:	cd 01       	movw	r24, r26
    2862:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2866:	dc 01       	movw	r26, r24
    2868:	cb 01       	movw	r24, r22
    286a:	f8 01       	movw	r30, r16
    286c:	91 83       	std	Z+1, r25	; 0x01
    286e:	80 83       	st	Z, r24
    2870:	1f c0       	rjmp	.+62     	; 0x28b0 <LED_voidShifRight+0x2fc>
    2872:	fe 01       	movw	r30, r28
    2874:	e9 5a       	subi	r30, 0xA9	; 169
    2876:	ff 4f       	sbci	r31, 0xFF	; 255
    2878:	88 ec       	ldi	r24, 0xC8	; 200
    287a:	90 e0       	ldi	r25, 0x00	; 0
    287c:	91 83       	std	Z+1, r25	; 0x01
    287e:	80 83       	st	Z, r24
    2880:	fe 01       	movw	r30, r28
    2882:	e9 5a       	subi	r30, 0xA9	; 169
    2884:	ff 4f       	sbci	r31, 0xFF	; 255
    2886:	80 81       	ld	r24, Z
    2888:	91 81       	ldd	r25, Z+1	; 0x01
    288a:	01 97       	sbiw	r24, 0x01	; 1
    288c:	f1 f7       	brne	.-4      	; 0x288a <LED_voidShifRight+0x2d6>
    288e:	fe 01       	movw	r30, r28
    2890:	e9 5a       	subi	r30, 0xA9	; 169
    2892:	ff 4f       	sbci	r31, 0xFF	; 255
    2894:	91 83       	std	Z+1, r25	; 0x01
    2896:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2898:	de 01       	movw	r26, r28
    289a:	a7 5a       	subi	r26, 0xA7	; 167
    289c:	bf 4f       	sbci	r27, 0xFF	; 255
    289e:	fe 01       	movw	r30, r28
    28a0:	e7 5a       	subi	r30, 0xA7	; 167
    28a2:	ff 4f       	sbci	r31, 0xFF	; 255
    28a4:	80 81       	ld	r24, Z
    28a6:	91 81       	ldd	r25, Z+1	; 0x01
    28a8:	01 97       	sbiw	r24, 0x01	; 1
    28aa:	11 96       	adiw	r26, 0x01	; 1
    28ac:	9c 93       	st	X, r25
    28ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28b0:	fe 01       	movw	r30, r28
    28b2:	e7 5a       	subi	r30, 0xA7	; 167
    28b4:	ff 4f       	sbci	r31, 0xFF	; 255
    28b6:	80 81       	ld	r24, Z
    28b8:	91 81       	ldd	r25, Z+1	; 0x01
    28ba:	00 97       	sbiw	r24, 0x00	; 0
    28bc:	d1 f6       	brne	.-76     	; 0x2872 <LED_voidShifRight+0x2be>
    28be:	27 c0       	rjmp	.+78     	; 0x290e <LED_voidShifRight+0x35a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28c0:	8e 01       	movw	r16, r28
    28c2:	07 5a       	subi	r16, 0xA7	; 167
    28c4:	1f 4f       	sbci	r17, 0xFF	; 255
    28c6:	fe 01       	movw	r30, r28
    28c8:	e5 5a       	subi	r30, 0xA5	; 165
    28ca:	ff 4f       	sbci	r31, 0xFF	; 255
    28cc:	60 81       	ld	r22, Z
    28ce:	71 81       	ldd	r23, Z+1	; 0x01
    28d0:	82 81       	ldd	r24, Z+2	; 0x02
    28d2:	93 81       	ldd	r25, Z+3	; 0x03
    28d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28d8:	dc 01       	movw	r26, r24
    28da:	cb 01       	movw	r24, r22
    28dc:	f8 01       	movw	r30, r16
    28de:	91 83       	std	Z+1, r25	; 0x01
    28e0:	80 83       	st	Z, r24
    28e2:	de 01       	movw	r26, r28
    28e4:	ab 5a       	subi	r26, 0xAB	; 171
    28e6:	bf 4f       	sbci	r27, 0xFF	; 255
    28e8:	fe 01       	movw	r30, r28
    28ea:	e7 5a       	subi	r30, 0xA7	; 167
    28ec:	ff 4f       	sbci	r31, 0xFF	; 255
    28ee:	80 81       	ld	r24, Z
    28f0:	91 81       	ldd	r25, Z+1	; 0x01
    28f2:	8d 93       	st	X+, r24
    28f4:	9c 93       	st	X, r25
    28f6:	fe 01       	movw	r30, r28
    28f8:	eb 5a       	subi	r30, 0xAB	; 171
    28fa:	ff 4f       	sbci	r31, 0xFF	; 255
    28fc:	80 81       	ld	r24, Z
    28fe:	91 81       	ldd	r25, Z+1	; 0x01
    2900:	01 97       	sbiw	r24, 0x01	; 1
    2902:	f1 f7       	brne	.-4      	; 0x2900 <LED_voidShifRight+0x34c>
    2904:	fe 01       	movw	r30, r28
    2906:	eb 5a       	subi	r30, 0xAB	; 171
    2908:	ff 4f       	sbci	r31, 0xFF	; 255
    290a:	91 83       	std	Z+1, r25	; 0x01
    290c:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    290e:	fe 01       	movw	r30, r28
    2910:	ef 58       	subi	r30, 0x8F	; 143
    2912:	ff 4f       	sbci	r31, 0xFF	; 255
    2914:	80 81       	ld	r24, Z
    2916:	60 e0       	ldi	r22, 0x00	; 0
    2918:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN5, DIO_u8HIGH);
    291c:	fe 01       	movw	r30, r28
    291e:	ef 58       	subi	r30, 0x8F	; 143
    2920:	ff 4f       	sbci	r31, 0xFF	; 255
    2922:	80 81       	ld	r24, Z
    2924:	65 e0       	ldi	r22, 0x05	; 5
    2926:	41 e0       	ldi	r20, 0x01	; 1
    2928:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    292c:	fe 01       	movw	r30, r28
    292e:	ee 58       	subi	r30, 0x8E	; 142
    2930:	ff 4f       	sbci	r31, 0xFF	; 255
    2932:	80 81       	ld	r24, Z
    2934:	88 2f       	mov	r24, r24
    2936:	90 e0       	ldi	r25, 0x00	; 0
    2938:	a0 e0       	ldi	r26, 0x00	; 0
    293a:	b0 e0       	ldi	r27, 0x00	; 0
    293c:	bc 01       	movw	r22, r24
    293e:	cd 01       	movw	r24, r26
    2940:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2944:	dc 01       	movw	r26, r24
    2946:	cb 01       	movw	r24, r22
    2948:	fe 01       	movw	r30, r28
    294a:	ef 5a       	subi	r30, 0xAF	; 175
    294c:	ff 4f       	sbci	r31, 0xFF	; 255
    294e:	80 83       	st	Z, r24
    2950:	91 83       	std	Z+1, r25	; 0x01
    2952:	a2 83       	std	Z+2, r26	; 0x02
    2954:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2956:	8e 01       	movw	r16, r28
    2958:	03 5b       	subi	r16, 0xB3	; 179
    295a:	1f 4f       	sbci	r17, 0xFF	; 255
    295c:	fe 01       	movw	r30, r28
    295e:	ef 5a       	subi	r30, 0xAF	; 175
    2960:	ff 4f       	sbci	r31, 0xFF	; 255
    2962:	60 81       	ld	r22, Z
    2964:	71 81       	ldd	r23, Z+1	; 0x01
    2966:	82 81       	ldd	r24, Z+2	; 0x02
    2968:	93 81       	ldd	r25, Z+3	; 0x03
    296a:	20 e0       	ldi	r18, 0x00	; 0
    296c:	30 e0       	ldi	r19, 0x00	; 0
    296e:	4a ef       	ldi	r20, 0xFA	; 250
    2970:	54 e4       	ldi	r21, 0x44	; 68
    2972:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2976:	dc 01       	movw	r26, r24
    2978:	cb 01       	movw	r24, r22
    297a:	f8 01       	movw	r30, r16
    297c:	80 83       	st	Z, r24
    297e:	91 83       	std	Z+1, r25	; 0x01
    2980:	a2 83       	std	Z+2, r26	; 0x02
    2982:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2984:	fe 01       	movw	r30, r28
    2986:	e3 5b       	subi	r30, 0xB3	; 179
    2988:	ff 4f       	sbci	r31, 0xFF	; 255
    298a:	60 81       	ld	r22, Z
    298c:	71 81       	ldd	r23, Z+1	; 0x01
    298e:	82 81       	ldd	r24, Z+2	; 0x02
    2990:	93 81       	ldd	r25, Z+3	; 0x03
    2992:	20 e0       	ldi	r18, 0x00	; 0
    2994:	30 e0       	ldi	r19, 0x00	; 0
    2996:	40 e8       	ldi	r20, 0x80	; 128
    2998:	5f e3       	ldi	r21, 0x3F	; 63
    299a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    299e:	88 23       	and	r24, r24
    29a0:	44 f4       	brge	.+16     	; 0x29b2 <LED_voidShifRight+0x3fe>
		__ticks = 1;
    29a2:	fe 01       	movw	r30, r28
    29a4:	e5 5b       	subi	r30, 0xB5	; 181
    29a6:	ff 4f       	sbci	r31, 0xFF	; 255
    29a8:	81 e0       	ldi	r24, 0x01	; 1
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	91 83       	std	Z+1, r25	; 0x01
    29ae:	80 83       	st	Z, r24
    29b0:	64 c0       	rjmp	.+200    	; 0x2a7a <LED_voidShifRight+0x4c6>
	else if (__tmp > 65535)
    29b2:	fe 01       	movw	r30, r28
    29b4:	e3 5b       	subi	r30, 0xB3	; 179
    29b6:	ff 4f       	sbci	r31, 0xFF	; 255
    29b8:	60 81       	ld	r22, Z
    29ba:	71 81       	ldd	r23, Z+1	; 0x01
    29bc:	82 81       	ldd	r24, Z+2	; 0x02
    29be:	93 81       	ldd	r25, Z+3	; 0x03
    29c0:	20 e0       	ldi	r18, 0x00	; 0
    29c2:	3f ef       	ldi	r19, 0xFF	; 255
    29c4:	4f e7       	ldi	r20, 0x7F	; 127
    29c6:	57 e4       	ldi	r21, 0x47	; 71
    29c8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29cc:	18 16       	cp	r1, r24
    29ce:	0c f0       	brlt	.+2      	; 0x29d2 <LED_voidShifRight+0x41e>
    29d0:	43 c0       	rjmp	.+134    	; 0x2a58 <LED_voidShifRight+0x4a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29d2:	fe 01       	movw	r30, r28
    29d4:	ef 5a       	subi	r30, 0xAF	; 175
    29d6:	ff 4f       	sbci	r31, 0xFF	; 255
    29d8:	60 81       	ld	r22, Z
    29da:	71 81       	ldd	r23, Z+1	; 0x01
    29dc:	82 81       	ldd	r24, Z+2	; 0x02
    29de:	93 81       	ldd	r25, Z+3	; 0x03
    29e0:	20 e0       	ldi	r18, 0x00	; 0
    29e2:	30 e0       	ldi	r19, 0x00	; 0
    29e4:	40 e2       	ldi	r20, 0x20	; 32
    29e6:	51 e4       	ldi	r21, 0x41	; 65
    29e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29ec:	dc 01       	movw	r26, r24
    29ee:	cb 01       	movw	r24, r22
    29f0:	8e 01       	movw	r16, r28
    29f2:	05 5b       	subi	r16, 0xB5	; 181
    29f4:	1f 4f       	sbci	r17, 0xFF	; 255
    29f6:	bc 01       	movw	r22, r24
    29f8:	cd 01       	movw	r24, r26
    29fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29fe:	dc 01       	movw	r26, r24
    2a00:	cb 01       	movw	r24, r22
    2a02:	f8 01       	movw	r30, r16
    2a04:	91 83       	std	Z+1, r25	; 0x01
    2a06:	80 83       	st	Z, r24
    2a08:	1f c0       	rjmp	.+62     	; 0x2a48 <LED_voidShifRight+0x494>
    2a0a:	fe 01       	movw	r30, r28
    2a0c:	e7 5b       	subi	r30, 0xB7	; 183
    2a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a10:	88 ec       	ldi	r24, 0xC8	; 200
    2a12:	90 e0       	ldi	r25, 0x00	; 0
    2a14:	91 83       	std	Z+1, r25	; 0x01
    2a16:	80 83       	st	Z, r24
    2a18:	fe 01       	movw	r30, r28
    2a1a:	e7 5b       	subi	r30, 0xB7	; 183
    2a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a1e:	80 81       	ld	r24, Z
    2a20:	91 81       	ldd	r25, Z+1	; 0x01
    2a22:	01 97       	sbiw	r24, 0x01	; 1
    2a24:	f1 f7       	brne	.-4      	; 0x2a22 <LED_voidShifRight+0x46e>
    2a26:	fe 01       	movw	r30, r28
    2a28:	e7 5b       	subi	r30, 0xB7	; 183
    2a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a2c:	91 83       	std	Z+1, r25	; 0x01
    2a2e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a30:	de 01       	movw	r26, r28
    2a32:	a5 5b       	subi	r26, 0xB5	; 181
    2a34:	bf 4f       	sbci	r27, 0xFF	; 255
    2a36:	fe 01       	movw	r30, r28
    2a38:	e5 5b       	subi	r30, 0xB5	; 181
    2a3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a3c:	80 81       	ld	r24, Z
    2a3e:	91 81       	ldd	r25, Z+1	; 0x01
    2a40:	01 97       	sbiw	r24, 0x01	; 1
    2a42:	11 96       	adiw	r26, 0x01	; 1
    2a44:	9c 93       	st	X, r25
    2a46:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a48:	fe 01       	movw	r30, r28
    2a4a:	e5 5b       	subi	r30, 0xB5	; 181
    2a4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a4e:	80 81       	ld	r24, Z
    2a50:	91 81       	ldd	r25, Z+1	; 0x01
    2a52:	00 97       	sbiw	r24, 0x00	; 0
    2a54:	d1 f6       	brne	.-76     	; 0x2a0a <LED_voidShifRight+0x456>
    2a56:	27 c0       	rjmp	.+78     	; 0x2aa6 <LED_voidShifRight+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a58:	8e 01       	movw	r16, r28
    2a5a:	05 5b       	subi	r16, 0xB5	; 181
    2a5c:	1f 4f       	sbci	r17, 0xFF	; 255
    2a5e:	fe 01       	movw	r30, r28
    2a60:	e3 5b       	subi	r30, 0xB3	; 179
    2a62:	ff 4f       	sbci	r31, 0xFF	; 255
    2a64:	60 81       	ld	r22, Z
    2a66:	71 81       	ldd	r23, Z+1	; 0x01
    2a68:	82 81       	ldd	r24, Z+2	; 0x02
    2a6a:	93 81       	ldd	r25, Z+3	; 0x03
    2a6c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a70:	dc 01       	movw	r26, r24
    2a72:	cb 01       	movw	r24, r22
    2a74:	f8 01       	movw	r30, r16
    2a76:	91 83       	std	Z+1, r25	; 0x01
    2a78:	80 83       	st	Z, r24
    2a7a:	de 01       	movw	r26, r28
    2a7c:	a9 5b       	subi	r26, 0xB9	; 185
    2a7e:	bf 4f       	sbci	r27, 0xFF	; 255
    2a80:	fe 01       	movw	r30, r28
    2a82:	e5 5b       	subi	r30, 0xB5	; 181
    2a84:	ff 4f       	sbci	r31, 0xFF	; 255
    2a86:	80 81       	ld	r24, Z
    2a88:	91 81       	ldd	r25, Z+1	; 0x01
    2a8a:	8d 93       	st	X+, r24
    2a8c:	9c 93       	st	X, r25
    2a8e:	fe 01       	movw	r30, r28
    2a90:	e9 5b       	subi	r30, 0xB9	; 185
    2a92:	ff 4f       	sbci	r31, 0xFF	; 255
    2a94:	80 81       	ld	r24, Z
    2a96:	91 81       	ldd	r25, Z+1	; 0x01
    2a98:	01 97       	sbiw	r24, 0x01	; 1
    2a9a:	f1 f7       	brne	.-4      	; 0x2a98 <LED_voidShifRight+0x4e4>
    2a9c:	fe 01       	movw	r30, r28
    2a9e:	e9 5b       	subi	r30, 0xB9	; 185
    2aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa2:	91 83       	std	Z+1, r25	; 0x01
    2aa4:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    2aa6:	fe 01       	movw	r30, r28
    2aa8:	ef 58       	subi	r30, 0x8F	; 143
    2aaa:	ff 4f       	sbci	r31, 0xFF	; 255
    2aac:	80 81       	ld	r24, Z
    2aae:	60 e0       	ldi	r22, 0x00	; 0
    2ab0:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN4, DIO_u8HIGH);
    2ab4:	fe 01       	movw	r30, r28
    2ab6:	ef 58       	subi	r30, 0x8F	; 143
    2ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aba:	80 81       	ld	r24, Z
    2abc:	64 e0       	ldi	r22, 0x04	; 4
    2abe:	41 e0       	ldi	r20, 0x01	; 1
    2ac0:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2ac4:	fe 01       	movw	r30, r28
    2ac6:	ee 58       	subi	r30, 0x8E	; 142
    2ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aca:	80 81       	ld	r24, Z
    2acc:	88 2f       	mov	r24, r24
    2ace:	90 e0       	ldi	r25, 0x00	; 0
    2ad0:	a0 e0       	ldi	r26, 0x00	; 0
    2ad2:	b0 e0       	ldi	r27, 0x00	; 0
    2ad4:	bc 01       	movw	r22, r24
    2ad6:	cd 01       	movw	r24, r26
    2ad8:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2adc:	dc 01       	movw	r26, r24
    2ade:	cb 01       	movw	r24, r22
    2ae0:	fe 01       	movw	r30, r28
    2ae2:	ed 5b       	subi	r30, 0xBD	; 189
    2ae4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae6:	80 83       	st	Z, r24
    2ae8:	91 83       	std	Z+1, r25	; 0x01
    2aea:	a2 83       	std	Z+2, r26	; 0x02
    2aec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2aee:	8e 01       	movw	r16, r28
    2af0:	01 5c       	subi	r16, 0xC1	; 193
    2af2:	1f 4f       	sbci	r17, 0xFF	; 255
    2af4:	fe 01       	movw	r30, r28
    2af6:	ed 5b       	subi	r30, 0xBD	; 189
    2af8:	ff 4f       	sbci	r31, 0xFF	; 255
    2afa:	60 81       	ld	r22, Z
    2afc:	71 81       	ldd	r23, Z+1	; 0x01
    2afe:	82 81       	ldd	r24, Z+2	; 0x02
    2b00:	93 81       	ldd	r25, Z+3	; 0x03
    2b02:	20 e0       	ldi	r18, 0x00	; 0
    2b04:	30 e0       	ldi	r19, 0x00	; 0
    2b06:	4a ef       	ldi	r20, 0xFA	; 250
    2b08:	54 e4       	ldi	r21, 0x44	; 68
    2b0a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b0e:	dc 01       	movw	r26, r24
    2b10:	cb 01       	movw	r24, r22
    2b12:	f8 01       	movw	r30, r16
    2b14:	80 83       	st	Z, r24
    2b16:	91 83       	std	Z+1, r25	; 0x01
    2b18:	a2 83       	std	Z+2, r26	; 0x02
    2b1a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b1c:	fe 01       	movw	r30, r28
    2b1e:	ff 96       	adiw	r30, 0x3f	; 63
    2b20:	60 81       	ld	r22, Z
    2b22:	71 81       	ldd	r23, Z+1	; 0x01
    2b24:	82 81       	ldd	r24, Z+2	; 0x02
    2b26:	93 81       	ldd	r25, Z+3	; 0x03
    2b28:	20 e0       	ldi	r18, 0x00	; 0
    2b2a:	30 e0       	ldi	r19, 0x00	; 0
    2b2c:	40 e8       	ldi	r20, 0x80	; 128
    2b2e:	5f e3       	ldi	r21, 0x3F	; 63
    2b30:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b34:	88 23       	and	r24, r24
    2b36:	2c f4       	brge	.+10     	; 0x2b42 <LED_voidShifRight+0x58e>
		__ticks = 1;
    2b38:	81 e0       	ldi	r24, 0x01	; 1
    2b3a:	90 e0       	ldi	r25, 0x00	; 0
    2b3c:	9e af       	std	Y+62, r25	; 0x3e
    2b3e:	8d af       	std	Y+61, r24	; 0x3d
    2b40:	46 c0       	rjmp	.+140    	; 0x2bce <LED_voidShifRight+0x61a>
	else if (__tmp > 65535)
    2b42:	fe 01       	movw	r30, r28
    2b44:	ff 96       	adiw	r30, 0x3f	; 63
    2b46:	60 81       	ld	r22, Z
    2b48:	71 81       	ldd	r23, Z+1	; 0x01
    2b4a:	82 81       	ldd	r24, Z+2	; 0x02
    2b4c:	93 81       	ldd	r25, Z+3	; 0x03
    2b4e:	20 e0       	ldi	r18, 0x00	; 0
    2b50:	3f ef       	ldi	r19, 0xFF	; 255
    2b52:	4f e7       	ldi	r20, 0x7F	; 127
    2b54:	57 e4       	ldi	r21, 0x47	; 71
    2b56:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b5a:	18 16       	cp	r1, r24
    2b5c:	64 f5       	brge	.+88     	; 0x2bb6 <LED_voidShifRight+0x602>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b5e:	fe 01       	movw	r30, r28
    2b60:	ed 5b       	subi	r30, 0xBD	; 189
    2b62:	ff 4f       	sbci	r31, 0xFF	; 255
    2b64:	60 81       	ld	r22, Z
    2b66:	71 81       	ldd	r23, Z+1	; 0x01
    2b68:	82 81       	ldd	r24, Z+2	; 0x02
    2b6a:	93 81       	ldd	r25, Z+3	; 0x03
    2b6c:	20 e0       	ldi	r18, 0x00	; 0
    2b6e:	30 e0       	ldi	r19, 0x00	; 0
    2b70:	40 e2       	ldi	r20, 0x20	; 32
    2b72:	51 e4       	ldi	r21, 0x41	; 65
    2b74:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b78:	dc 01       	movw	r26, r24
    2b7a:	cb 01       	movw	r24, r22
    2b7c:	bc 01       	movw	r22, r24
    2b7e:	cd 01       	movw	r24, r26
    2b80:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b84:	dc 01       	movw	r26, r24
    2b86:	cb 01       	movw	r24, r22
    2b88:	9e af       	std	Y+62, r25	; 0x3e
    2b8a:	8d af       	std	Y+61, r24	; 0x3d
    2b8c:	0f c0       	rjmp	.+30     	; 0x2bac <LED_voidShifRight+0x5f8>
    2b8e:	88 ec       	ldi	r24, 0xC8	; 200
    2b90:	90 e0       	ldi	r25, 0x00	; 0
    2b92:	9c af       	std	Y+60, r25	; 0x3c
    2b94:	8b af       	std	Y+59, r24	; 0x3b
    2b96:	8b ad       	ldd	r24, Y+59	; 0x3b
    2b98:	9c ad       	ldd	r25, Y+60	; 0x3c
    2b9a:	01 97       	sbiw	r24, 0x01	; 1
    2b9c:	f1 f7       	brne	.-4      	; 0x2b9a <LED_voidShifRight+0x5e6>
    2b9e:	9c af       	std	Y+60, r25	; 0x3c
    2ba0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ba2:	8d ad       	ldd	r24, Y+61	; 0x3d
    2ba4:	9e ad       	ldd	r25, Y+62	; 0x3e
    2ba6:	01 97       	sbiw	r24, 0x01	; 1
    2ba8:	9e af       	std	Y+62, r25	; 0x3e
    2baa:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bac:	8d ad       	ldd	r24, Y+61	; 0x3d
    2bae:	9e ad       	ldd	r25, Y+62	; 0x3e
    2bb0:	00 97       	sbiw	r24, 0x00	; 0
    2bb2:	69 f7       	brne	.-38     	; 0x2b8e <LED_voidShifRight+0x5da>
    2bb4:	16 c0       	rjmp	.+44     	; 0x2be2 <LED_voidShifRight+0x62e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bb6:	fe 01       	movw	r30, r28
    2bb8:	ff 96       	adiw	r30, 0x3f	; 63
    2bba:	60 81       	ld	r22, Z
    2bbc:	71 81       	ldd	r23, Z+1	; 0x01
    2bbe:	82 81       	ldd	r24, Z+2	; 0x02
    2bc0:	93 81       	ldd	r25, Z+3	; 0x03
    2bc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bc6:	dc 01       	movw	r26, r24
    2bc8:	cb 01       	movw	r24, r22
    2bca:	9e af       	std	Y+62, r25	; 0x3e
    2bcc:	8d af       	std	Y+61, r24	; 0x3d
    2bce:	8d ad       	ldd	r24, Y+61	; 0x3d
    2bd0:	9e ad       	ldd	r25, Y+62	; 0x3e
    2bd2:	9a af       	std	Y+58, r25	; 0x3a
    2bd4:	89 af       	std	Y+57, r24	; 0x39
    2bd6:	89 ad       	ldd	r24, Y+57	; 0x39
    2bd8:	9a ad       	ldd	r25, Y+58	; 0x3a
    2bda:	01 97       	sbiw	r24, 0x01	; 1
    2bdc:	f1 f7       	brne	.-4      	; 0x2bda <LED_voidShifRight+0x626>
    2bde:	9a af       	std	Y+58, r25	; 0x3a
    2be0:	89 af       	std	Y+57, r24	; 0x39
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    2be2:	fe 01       	movw	r30, r28
    2be4:	ef 58       	subi	r30, 0x8F	; 143
    2be6:	ff 4f       	sbci	r31, 0xFF	; 255
    2be8:	80 81       	ld	r24, Z
    2bea:	60 e0       	ldi	r22, 0x00	; 0
    2bec:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN3, DIO_u8HIGH);
    2bf0:	fe 01       	movw	r30, r28
    2bf2:	ef 58       	subi	r30, 0x8F	; 143
    2bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf6:	80 81       	ld	r24, Z
    2bf8:	63 e0       	ldi	r22, 0x03	; 3
    2bfa:	41 e0       	ldi	r20, 0x01	; 1
    2bfc:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2c00:	fe 01       	movw	r30, r28
    2c02:	ee 58       	subi	r30, 0x8E	; 142
    2c04:	ff 4f       	sbci	r31, 0xFF	; 255
    2c06:	80 81       	ld	r24, Z
    2c08:	88 2f       	mov	r24, r24
    2c0a:	90 e0       	ldi	r25, 0x00	; 0
    2c0c:	a0 e0       	ldi	r26, 0x00	; 0
    2c0e:	b0 e0       	ldi	r27, 0x00	; 0
    2c10:	bc 01       	movw	r22, r24
    2c12:	cd 01       	movw	r24, r26
    2c14:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2c18:	dc 01       	movw	r26, r24
    2c1a:	cb 01       	movw	r24, r22
    2c1c:	8d ab       	std	Y+53, r24	; 0x35
    2c1e:	9e ab       	std	Y+54, r25	; 0x36
    2c20:	af ab       	std	Y+55, r26	; 0x37
    2c22:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c24:	6d a9       	ldd	r22, Y+53	; 0x35
    2c26:	7e a9       	ldd	r23, Y+54	; 0x36
    2c28:	8f a9       	ldd	r24, Y+55	; 0x37
    2c2a:	98 ad       	ldd	r25, Y+56	; 0x38
    2c2c:	20 e0       	ldi	r18, 0x00	; 0
    2c2e:	30 e0       	ldi	r19, 0x00	; 0
    2c30:	4a ef       	ldi	r20, 0xFA	; 250
    2c32:	54 e4       	ldi	r21, 0x44	; 68
    2c34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c38:	dc 01       	movw	r26, r24
    2c3a:	cb 01       	movw	r24, r22
    2c3c:	89 ab       	std	Y+49, r24	; 0x31
    2c3e:	9a ab       	std	Y+50, r25	; 0x32
    2c40:	ab ab       	std	Y+51, r26	; 0x33
    2c42:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2c44:	69 a9       	ldd	r22, Y+49	; 0x31
    2c46:	7a a9       	ldd	r23, Y+50	; 0x32
    2c48:	8b a9       	ldd	r24, Y+51	; 0x33
    2c4a:	9c a9       	ldd	r25, Y+52	; 0x34
    2c4c:	20 e0       	ldi	r18, 0x00	; 0
    2c4e:	30 e0       	ldi	r19, 0x00	; 0
    2c50:	40 e8       	ldi	r20, 0x80	; 128
    2c52:	5f e3       	ldi	r21, 0x3F	; 63
    2c54:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c58:	88 23       	and	r24, r24
    2c5a:	2c f4       	brge	.+10     	; 0x2c66 <LED_voidShifRight+0x6b2>
		__ticks = 1;
    2c5c:	81 e0       	ldi	r24, 0x01	; 1
    2c5e:	90 e0       	ldi	r25, 0x00	; 0
    2c60:	98 ab       	std	Y+48, r25	; 0x30
    2c62:	8f a7       	std	Y+47, r24	; 0x2f
    2c64:	3f c0       	rjmp	.+126    	; 0x2ce4 <LED_voidShifRight+0x730>
	else if (__tmp > 65535)
    2c66:	69 a9       	ldd	r22, Y+49	; 0x31
    2c68:	7a a9       	ldd	r23, Y+50	; 0x32
    2c6a:	8b a9       	ldd	r24, Y+51	; 0x33
    2c6c:	9c a9       	ldd	r25, Y+52	; 0x34
    2c6e:	20 e0       	ldi	r18, 0x00	; 0
    2c70:	3f ef       	ldi	r19, 0xFF	; 255
    2c72:	4f e7       	ldi	r20, 0x7F	; 127
    2c74:	57 e4       	ldi	r21, 0x47	; 71
    2c76:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c7a:	18 16       	cp	r1, r24
    2c7c:	4c f5       	brge	.+82     	; 0x2cd0 <LED_voidShifRight+0x71c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c7e:	6d a9       	ldd	r22, Y+53	; 0x35
    2c80:	7e a9       	ldd	r23, Y+54	; 0x36
    2c82:	8f a9       	ldd	r24, Y+55	; 0x37
    2c84:	98 ad       	ldd	r25, Y+56	; 0x38
    2c86:	20 e0       	ldi	r18, 0x00	; 0
    2c88:	30 e0       	ldi	r19, 0x00	; 0
    2c8a:	40 e2       	ldi	r20, 0x20	; 32
    2c8c:	51 e4       	ldi	r21, 0x41	; 65
    2c8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c92:	dc 01       	movw	r26, r24
    2c94:	cb 01       	movw	r24, r22
    2c96:	bc 01       	movw	r22, r24
    2c98:	cd 01       	movw	r24, r26
    2c9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c9e:	dc 01       	movw	r26, r24
    2ca0:	cb 01       	movw	r24, r22
    2ca2:	98 ab       	std	Y+48, r25	; 0x30
    2ca4:	8f a7       	std	Y+47, r24	; 0x2f
    2ca6:	0f c0       	rjmp	.+30     	; 0x2cc6 <LED_voidShifRight+0x712>
    2ca8:	88 ec       	ldi	r24, 0xC8	; 200
    2caa:	90 e0       	ldi	r25, 0x00	; 0
    2cac:	9e a7       	std	Y+46, r25	; 0x2e
    2cae:	8d a7       	std	Y+45, r24	; 0x2d
    2cb0:	8d a5       	ldd	r24, Y+45	; 0x2d
    2cb2:	9e a5       	ldd	r25, Y+46	; 0x2e
    2cb4:	01 97       	sbiw	r24, 0x01	; 1
    2cb6:	f1 f7       	brne	.-4      	; 0x2cb4 <LED_voidShifRight+0x700>
    2cb8:	9e a7       	std	Y+46, r25	; 0x2e
    2cba:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cbc:	8f a5       	ldd	r24, Y+47	; 0x2f
    2cbe:	98 a9       	ldd	r25, Y+48	; 0x30
    2cc0:	01 97       	sbiw	r24, 0x01	; 1
    2cc2:	98 ab       	std	Y+48, r25	; 0x30
    2cc4:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cc6:	8f a5       	ldd	r24, Y+47	; 0x2f
    2cc8:	98 a9       	ldd	r25, Y+48	; 0x30
    2cca:	00 97       	sbiw	r24, 0x00	; 0
    2ccc:	69 f7       	brne	.-38     	; 0x2ca8 <LED_voidShifRight+0x6f4>
    2cce:	14 c0       	rjmp	.+40     	; 0x2cf8 <LED_voidShifRight+0x744>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cd0:	69 a9       	ldd	r22, Y+49	; 0x31
    2cd2:	7a a9       	ldd	r23, Y+50	; 0x32
    2cd4:	8b a9       	ldd	r24, Y+51	; 0x33
    2cd6:	9c a9       	ldd	r25, Y+52	; 0x34
    2cd8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cdc:	dc 01       	movw	r26, r24
    2cde:	cb 01       	movw	r24, r22
    2ce0:	98 ab       	std	Y+48, r25	; 0x30
    2ce2:	8f a7       	std	Y+47, r24	; 0x2f
    2ce4:	8f a5       	ldd	r24, Y+47	; 0x2f
    2ce6:	98 a9       	ldd	r25, Y+48	; 0x30
    2ce8:	9c a7       	std	Y+44, r25	; 0x2c
    2cea:	8b a7       	std	Y+43, r24	; 0x2b
    2cec:	8b a5       	ldd	r24, Y+43	; 0x2b
    2cee:	9c a5       	ldd	r25, Y+44	; 0x2c
    2cf0:	01 97       	sbiw	r24, 0x01	; 1
    2cf2:	f1 f7       	brne	.-4      	; 0x2cf0 <LED_voidShifRight+0x73c>
    2cf4:	9c a7       	std	Y+44, r25	; 0x2c
    2cf6:	8b a7       	std	Y+43, r24	; 0x2b
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    2cf8:	fe 01       	movw	r30, r28
    2cfa:	ef 58       	subi	r30, 0x8F	; 143
    2cfc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cfe:	80 81       	ld	r24, Z
    2d00:	60 e0       	ldi	r22, 0x00	; 0
    2d02:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN2, DIO_u8HIGH);
    2d06:	fe 01       	movw	r30, r28
    2d08:	ef 58       	subi	r30, 0x8F	; 143
    2d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d0c:	80 81       	ld	r24, Z
    2d0e:	62 e0       	ldi	r22, 0x02	; 2
    2d10:	41 e0       	ldi	r20, 0x01	; 1
    2d12:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2d16:	fe 01       	movw	r30, r28
    2d18:	ee 58       	subi	r30, 0x8E	; 142
    2d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1c:	80 81       	ld	r24, Z
    2d1e:	88 2f       	mov	r24, r24
    2d20:	90 e0       	ldi	r25, 0x00	; 0
    2d22:	a0 e0       	ldi	r26, 0x00	; 0
    2d24:	b0 e0       	ldi	r27, 0x00	; 0
    2d26:	bc 01       	movw	r22, r24
    2d28:	cd 01       	movw	r24, r26
    2d2a:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2d2e:	dc 01       	movw	r26, r24
    2d30:	cb 01       	movw	r24, r22
    2d32:	8f a3       	std	Y+39, r24	; 0x27
    2d34:	98 a7       	std	Y+40, r25	; 0x28
    2d36:	a9 a7       	std	Y+41, r26	; 0x29
    2d38:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d3a:	6f a1       	ldd	r22, Y+39	; 0x27
    2d3c:	78 a5       	ldd	r23, Y+40	; 0x28
    2d3e:	89 a5       	ldd	r24, Y+41	; 0x29
    2d40:	9a a5       	ldd	r25, Y+42	; 0x2a
    2d42:	20 e0       	ldi	r18, 0x00	; 0
    2d44:	30 e0       	ldi	r19, 0x00	; 0
    2d46:	4a ef       	ldi	r20, 0xFA	; 250
    2d48:	54 e4       	ldi	r21, 0x44	; 68
    2d4a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d4e:	dc 01       	movw	r26, r24
    2d50:	cb 01       	movw	r24, r22
    2d52:	8b a3       	std	Y+35, r24	; 0x23
    2d54:	9c a3       	std	Y+36, r25	; 0x24
    2d56:	ad a3       	std	Y+37, r26	; 0x25
    2d58:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2d5a:	6b a1       	ldd	r22, Y+35	; 0x23
    2d5c:	7c a1       	ldd	r23, Y+36	; 0x24
    2d5e:	8d a1       	ldd	r24, Y+37	; 0x25
    2d60:	9e a1       	ldd	r25, Y+38	; 0x26
    2d62:	20 e0       	ldi	r18, 0x00	; 0
    2d64:	30 e0       	ldi	r19, 0x00	; 0
    2d66:	40 e8       	ldi	r20, 0x80	; 128
    2d68:	5f e3       	ldi	r21, 0x3F	; 63
    2d6a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d6e:	88 23       	and	r24, r24
    2d70:	2c f4       	brge	.+10     	; 0x2d7c <LED_voidShifRight+0x7c8>
		__ticks = 1;
    2d72:	81 e0       	ldi	r24, 0x01	; 1
    2d74:	90 e0       	ldi	r25, 0x00	; 0
    2d76:	9a a3       	std	Y+34, r25	; 0x22
    2d78:	89 a3       	std	Y+33, r24	; 0x21
    2d7a:	3f c0       	rjmp	.+126    	; 0x2dfa <LED_voidShifRight+0x846>
	else if (__tmp > 65535)
    2d7c:	6b a1       	ldd	r22, Y+35	; 0x23
    2d7e:	7c a1       	ldd	r23, Y+36	; 0x24
    2d80:	8d a1       	ldd	r24, Y+37	; 0x25
    2d82:	9e a1       	ldd	r25, Y+38	; 0x26
    2d84:	20 e0       	ldi	r18, 0x00	; 0
    2d86:	3f ef       	ldi	r19, 0xFF	; 255
    2d88:	4f e7       	ldi	r20, 0x7F	; 127
    2d8a:	57 e4       	ldi	r21, 0x47	; 71
    2d8c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d90:	18 16       	cp	r1, r24
    2d92:	4c f5       	brge	.+82     	; 0x2de6 <LED_voidShifRight+0x832>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d94:	6f a1       	ldd	r22, Y+39	; 0x27
    2d96:	78 a5       	ldd	r23, Y+40	; 0x28
    2d98:	89 a5       	ldd	r24, Y+41	; 0x29
    2d9a:	9a a5       	ldd	r25, Y+42	; 0x2a
    2d9c:	20 e0       	ldi	r18, 0x00	; 0
    2d9e:	30 e0       	ldi	r19, 0x00	; 0
    2da0:	40 e2       	ldi	r20, 0x20	; 32
    2da2:	51 e4       	ldi	r21, 0x41	; 65
    2da4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2da8:	dc 01       	movw	r26, r24
    2daa:	cb 01       	movw	r24, r22
    2dac:	bc 01       	movw	r22, r24
    2dae:	cd 01       	movw	r24, r26
    2db0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2db4:	dc 01       	movw	r26, r24
    2db6:	cb 01       	movw	r24, r22
    2db8:	9a a3       	std	Y+34, r25	; 0x22
    2dba:	89 a3       	std	Y+33, r24	; 0x21
    2dbc:	0f c0       	rjmp	.+30     	; 0x2ddc <LED_voidShifRight+0x828>
    2dbe:	88 ec       	ldi	r24, 0xC8	; 200
    2dc0:	90 e0       	ldi	r25, 0x00	; 0
    2dc2:	98 a3       	std	Y+32, r25	; 0x20
    2dc4:	8f 8f       	std	Y+31, r24	; 0x1f
    2dc6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2dc8:	98 a1       	ldd	r25, Y+32	; 0x20
    2dca:	01 97       	sbiw	r24, 0x01	; 1
    2dcc:	f1 f7       	brne	.-4      	; 0x2dca <LED_voidShifRight+0x816>
    2dce:	98 a3       	std	Y+32, r25	; 0x20
    2dd0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dd2:	89 a1       	ldd	r24, Y+33	; 0x21
    2dd4:	9a a1       	ldd	r25, Y+34	; 0x22
    2dd6:	01 97       	sbiw	r24, 0x01	; 1
    2dd8:	9a a3       	std	Y+34, r25	; 0x22
    2dda:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ddc:	89 a1       	ldd	r24, Y+33	; 0x21
    2dde:	9a a1       	ldd	r25, Y+34	; 0x22
    2de0:	00 97       	sbiw	r24, 0x00	; 0
    2de2:	69 f7       	brne	.-38     	; 0x2dbe <LED_voidShifRight+0x80a>
    2de4:	14 c0       	rjmp	.+40     	; 0x2e0e <LED_voidShifRight+0x85a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2de6:	6b a1       	ldd	r22, Y+35	; 0x23
    2de8:	7c a1       	ldd	r23, Y+36	; 0x24
    2dea:	8d a1       	ldd	r24, Y+37	; 0x25
    2dec:	9e a1       	ldd	r25, Y+38	; 0x26
    2dee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2df2:	dc 01       	movw	r26, r24
    2df4:	cb 01       	movw	r24, r22
    2df6:	9a a3       	std	Y+34, r25	; 0x22
    2df8:	89 a3       	std	Y+33, r24	; 0x21
    2dfa:	89 a1       	ldd	r24, Y+33	; 0x21
    2dfc:	9a a1       	ldd	r25, Y+34	; 0x22
    2dfe:	9e 8f       	std	Y+30, r25	; 0x1e
    2e00:	8d 8f       	std	Y+29, r24	; 0x1d
    2e02:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e04:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e06:	01 97       	sbiw	r24, 0x01	; 1
    2e08:	f1 f7       	brne	.-4      	; 0x2e06 <LED_voidShifRight+0x852>
    2e0a:	9e 8f       	std	Y+30, r25	; 0x1e
    2e0c:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    2e0e:	fe 01       	movw	r30, r28
    2e10:	ef 58       	subi	r30, 0x8F	; 143
    2e12:	ff 4f       	sbci	r31, 0xFF	; 255
    2e14:	80 81       	ld	r24, Z
    2e16:	60 e0       	ldi	r22, 0x00	; 0
    2e18:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN1, DIO_u8HIGH);
    2e1c:	fe 01       	movw	r30, r28
    2e1e:	ef 58       	subi	r30, 0x8F	; 143
    2e20:	ff 4f       	sbci	r31, 0xFF	; 255
    2e22:	80 81       	ld	r24, Z
    2e24:	61 e0       	ldi	r22, 0x01	; 1
    2e26:	41 e0       	ldi	r20, 0x01	; 1
    2e28:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2e2c:	fe 01       	movw	r30, r28
    2e2e:	ee 58       	subi	r30, 0x8E	; 142
    2e30:	ff 4f       	sbci	r31, 0xFF	; 255
    2e32:	80 81       	ld	r24, Z
    2e34:	88 2f       	mov	r24, r24
    2e36:	90 e0       	ldi	r25, 0x00	; 0
    2e38:	a0 e0       	ldi	r26, 0x00	; 0
    2e3a:	b0 e0       	ldi	r27, 0x00	; 0
    2e3c:	bc 01       	movw	r22, r24
    2e3e:	cd 01       	movw	r24, r26
    2e40:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2e44:	dc 01       	movw	r26, r24
    2e46:	cb 01       	movw	r24, r22
    2e48:	89 8f       	std	Y+25, r24	; 0x19
    2e4a:	9a 8f       	std	Y+26, r25	; 0x1a
    2e4c:	ab 8f       	std	Y+27, r26	; 0x1b
    2e4e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e50:	69 8d       	ldd	r22, Y+25	; 0x19
    2e52:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2e54:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2e56:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2e58:	20 e0       	ldi	r18, 0x00	; 0
    2e5a:	30 e0       	ldi	r19, 0x00	; 0
    2e5c:	4a ef       	ldi	r20, 0xFA	; 250
    2e5e:	54 e4       	ldi	r21, 0x44	; 68
    2e60:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e64:	dc 01       	movw	r26, r24
    2e66:	cb 01       	movw	r24, r22
    2e68:	8d 8b       	std	Y+21, r24	; 0x15
    2e6a:	9e 8b       	std	Y+22, r25	; 0x16
    2e6c:	af 8b       	std	Y+23, r26	; 0x17
    2e6e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2e70:	6d 89       	ldd	r22, Y+21	; 0x15
    2e72:	7e 89       	ldd	r23, Y+22	; 0x16
    2e74:	8f 89       	ldd	r24, Y+23	; 0x17
    2e76:	98 8d       	ldd	r25, Y+24	; 0x18
    2e78:	20 e0       	ldi	r18, 0x00	; 0
    2e7a:	30 e0       	ldi	r19, 0x00	; 0
    2e7c:	40 e8       	ldi	r20, 0x80	; 128
    2e7e:	5f e3       	ldi	r21, 0x3F	; 63
    2e80:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e84:	88 23       	and	r24, r24
    2e86:	2c f4       	brge	.+10     	; 0x2e92 <LED_voidShifRight+0x8de>
		__ticks = 1;
    2e88:	81 e0       	ldi	r24, 0x01	; 1
    2e8a:	90 e0       	ldi	r25, 0x00	; 0
    2e8c:	9c 8b       	std	Y+20, r25	; 0x14
    2e8e:	8b 8b       	std	Y+19, r24	; 0x13
    2e90:	3f c0       	rjmp	.+126    	; 0x2f10 <LED_voidShifRight+0x95c>
	else if (__tmp > 65535)
    2e92:	6d 89       	ldd	r22, Y+21	; 0x15
    2e94:	7e 89       	ldd	r23, Y+22	; 0x16
    2e96:	8f 89       	ldd	r24, Y+23	; 0x17
    2e98:	98 8d       	ldd	r25, Y+24	; 0x18
    2e9a:	20 e0       	ldi	r18, 0x00	; 0
    2e9c:	3f ef       	ldi	r19, 0xFF	; 255
    2e9e:	4f e7       	ldi	r20, 0x7F	; 127
    2ea0:	57 e4       	ldi	r21, 0x47	; 71
    2ea2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ea6:	18 16       	cp	r1, r24
    2ea8:	4c f5       	brge	.+82     	; 0x2efc <LED_voidShifRight+0x948>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2eaa:	69 8d       	ldd	r22, Y+25	; 0x19
    2eac:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2eae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2eb0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2eb2:	20 e0       	ldi	r18, 0x00	; 0
    2eb4:	30 e0       	ldi	r19, 0x00	; 0
    2eb6:	40 e2       	ldi	r20, 0x20	; 32
    2eb8:	51 e4       	ldi	r21, 0x41	; 65
    2eba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ebe:	dc 01       	movw	r26, r24
    2ec0:	cb 01       	movw	r24, r22
    2ec2:	bc 01       	movw	r22, r24
    2ec4:	cd 01       	movw	r24, r26
    2ec6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2eca:	dc 01       	movw	r26, r24
    2ecc:	cb 01       	movw	r24, r22
    2ece:	9c 8b       	std	Y+20, r25	; 0x14
    2ed0:	8b 8b       	std	Y+19, r24	; 0x13
    2ed2:	0f c0       	rjmp	.+30     	; 0x2ef2 <LED_voidShifRight+0x93e>
    2ed4:	88 ec       	ldi	r24, 0xC8	; 200
    2ed6:	90 e0       	ldi	r25, 0x00	; 0
    2ed8:	9a 8b       	std	Y+18, r25	; 0x12
    2eda:	89 8b       	std	Y+17, r24	; 0x11
    2edc:	89 89       	ldd	r24, Y+17	; 0x11
    2ede:	9a 89       	ldd	r25, Y+18	; 0x12
    2ee0:	01 97       	sbiw	r24, 0x01	; 1
    2ee2:	f1 f7       	brne	.-4      	; 0x2ee0 <LED_voidShifRight+0x92c>
    2ee4:	9a 8b       	std	Y+18, r25	; 0x12
    2ee6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ee8:	8b 89       	ldd	r24, Y+19	; 0x13
    2eea:	9c 89       	ldd	r25, Y+20	; 0x14
    2eec:	01 97       	sbiw	r24, 0x01	; 1
    2eee:	9c 8b       	std	Y+20, r25	; 0x14
    2ef0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ef2:	8b 89       	ldd	r24, Y+19	; 0x13
    2ef4:	9c 89       	ldd	r25, Y+20	; 0x14
    2ef6:	00 97       	sbiw	r24, 0x00	; 0
    2ef8:	69 f7       	brne	.-38     	; 0x2ed4 <LED_voidShifRight+0x920>
    2efa:	14 c0       	rjmp	.+40     	; 0x2f24 <LED_voidShifRight+0x970>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2efc:	6d 89       	ldd	r22, Y+21	; 0x15
    2efe:	7e 89       	ldd	r23, Y+22	; 0x16
    2f00:	8f 89       	ldd	r24, Y+23	; 0x17
    2f02:	98 8d       	ldd	r25, Y+24	; 0x18
    2f04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f08:	dc 01       	movw	r26, r24
    2f0a:	cb 01       	movw	r24, r22
    2f0c:	9c 8b       	std	Y+20, r25	; 0x14
    2f0e:	8b 8b       	std	Y+19, r24	; 0x13
    2f10:	8b 89       	ldd	r24, Y+19	; 0x13
    2f12:	9c 89       	ldd	r25, Y+20	; 0x14
    2f14:	98 8b       	std	Y+16, r25	; 0x10
    2f16:	8f 87       	std	Y+15, r24	; 0x0f
    2f18:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f1a:	98 89       	ldd	r25, Y+16	; 0x10
    2f1c:	01 97       	sbiw	r24, 0x01	; 1
    2f1e:	f1 f7       	brne	.-4      	; 0x2f1c <LED_voidShifRight+0x968>
    2f20:	98 8b       	std	Y+16, r25	; 0x10
    2f22:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    2f24:	fe 01       	movw	r30, r28
    2f26:	ef 58       	subi	r30, 0x8F	; 143
    2f28:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2a:	80 81       	ld	r24, Z
    2f2c:	60 e0       	ldi	r22, 0x00	; 0
    2f2e:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN0, DIO_u8HIGH);
    2f32:	fe 01       	movw	r30, r28
    2f34:	ef 58       	subi	r30, 0x8F	; 143
    2f36:	ff 4f       	sbci	r31, 0xFF	; 255
    2f38:	80 81       	ld	r24, Z
    2f3a:	60 e0       	ldi	r22, 0x00	; 0
    2f3c:	41 e0       	ldi	r20, 0x01	; 1
    2f3e:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    2f42:	fe 01       	movw	r30, r28
    2f44:	ee 58       	subi	r30, 0x8E	; 142
    2f46:	ff 4f       	sbci	r31, 0xFF	; 255
    2f48:	80 81       	ld	r24, Z
    2f4a:	88 2f       	mov	r24, r24
    2f4c:	90 e0       	ldi	r25, 0x00	; 0
    2f4e:	a0 e0       	ldi	r26, 0x00	; 0
    2f50:	b0 e0       	ldi	r27, 0x00	; 0
    2f52:	bc 01       	movw	r22, r24
    2f54:	cd 01       	movw	r24, r26
    2f56:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2f5a:	dc 01       	movw	r26, r24
    2f5c:	cb 01       	movw	r24, r22
    2f5e:	8b 87       	std	Y+11, r24	; 0x0b
    2f60:	9c 87       	std	Y+12, r25	; 0x0c
    2f62:	ad 87       	std	Y+13, r26	; 0x0d
    2f64:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f66:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f68:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f6c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f6e:	20 e0       	ldi	r18, 0x00	; 0
    2f70:	30 e0       	ldi	r19, 0x00	; 0
    2f72:	4a ef       	ldi	r20, 0xFA	; 250
    2f74:	54 e4       	ldi	r21, 0x44	; 68
    2f76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f7a:	dc 01       	movw	r26, r24
    2f7c:	cb 01       	movw	r24, r22
    2f7e:	8f 83       	std	Y+7, r24	; 0x07
    2f80:	98 87       	std	Y+8, r25	; 0x08
    2f82:	a9 87       	std	Y+9, r26	; 0x09
    2f84:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2f86:	6f 81       	ldd	r22, Y+7	; 0x07
    2f88:	78 85       	ldd	r23, Y+8	; 0x08
    2f8a:	89 85       	ldd	r24, Y+9	; 0x09
    2f8c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f8e:	20 e0       	ldi	r18, 0x00	; 0
    2f90:	30 e0       	ldi	r19, 0x00	; 0
    2f92:	40 e8       	ldi	r20, 0x80	; 128
    2f94:	5f e3       	ldi	r21, 0x3F	; 63
    2f96:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f9a:	88 23       	and	r24, r24
    2f9c:	2c f4       	brge	.+10     	; 0x2fa8 <LED_voidShifRight+0x9f4>
		__ticks = 1;
    2f9e:	81 e0       	ldi	r24, 0x01	; 1
    2fa0:	90 e0       	ldi	r25, 0x00	; 0
    2fa2:	9e 83       	std	Y+6, r25	; 0x06
    2fa4:	8d 83       	std	Y+5, r24	; 0x05
    2fa6:	3f c0       	rjmp	.+126    	; 0x3026 <LED_voidShifRight+0xa72>
	else if (__tmp > 65535)
    2fa8:	6f 81       	ldd	r22, Y+7	; 0x07
    2faa:	78 85       	ldd	r23, Y+8	; 0x08
    2fac:	89 85       	ldd	r24, Y+9	; 0x09
    2fae:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fb0:	20 e0       	ldi	r18, 0x00	; 0
    2fb2:	3f ef       	ldi	r19, 0xFF	; 255
    2fb4:	4f e7       	ldi	r20, 0x7F	; 127
    2fb6:	57 e4       	ldi	r21, 0x47	; 71
    2fb8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2fbc:	18 16       	cp	r1, r24
    2fbe:	4c f5       	brge	.+82     	; 0x3012 <LED_voidShifRight+0xa5e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fc0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2fc2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2fc4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fc6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fc8:	20 e0       	ldi	r18, 0x00	; 0
    2fca:	30 e0       	ldi	r19, 0x00	; 0
    2fcc:	40 e2       	ldi	r20, 0x20	; 32
    2fce:	51 e4       	ldi	r21, 0x41	; 65
    2fd0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fd4:	dc 01       	movw	r26, r24
    2fd6:	cb 01       	movw	r24, r22
    2fd8:	bc 01       	movw	r22, r24
    2fda:	cd 01       	movw	r24, r26
    2fdc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fe0:	dc 01       	movw	r26, r24
    2fe2:	cb 01       	movw	r24, r22
    2fe4:	9e 83       	std	Y+6, r25	; 0x06
    2fe6:	8d 83       	std	Y+5, r24	; 0x05
    2fe8:	0f c0       	rjmp	.+30     	; 0x3008 <LED_voidShifRight+0xa54>
    2fea:	88 ec       	ldi	r24, 0xC8	; 200
    2fec:	90 e0       	ldi	r25, 0x00	; 0
    2fee:	9c 83       	std	Y+4, r25	; 0x04
    2ff0:	8b 83       	std	Y+3, r24	; 0x03
    2ff2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ff4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ff6:	01 97       	sbiw	r24, 0x01	; 1
    2ff8:	f1 f7       	brne	.-4      	; 0x2ff6 <LED_voidShifRight+0xa42>
    2ffa:	9c 83       	std	Y+4, r25	; 0x04
    2ffc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ffe:	8d 81       	ldd	r24, Y+5	; 0x05
    3000:	9e 81       	ldd	r25, Y+6	; 0x06
    3002:	01 97       	sbiw	r24, 0x01	; 1
    3004:	9e 83       	std	Y+6, r25	; 0x06
    3006:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3008:	8d 81       	ldd	r24, Y+5	; 0x05
    300a:	9e 81       	ldd	r25, Y+6	; 0x06
    300c:	00 97       	sbiw	r24, 0x00	; 0
    300e:	69 f7       	brne	.-38     	; 0x2fea <LED_voidShifRight+0xa36>
    3010:	14 c0       	rjmp	.+40     	; 0x303a <LED_voidShifRight+0xa86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3012:	6f 81       	ldd	r22, Y+7	; 0x07
    3014:	78 85       	ldd	r23, Y+8	; 0x08
    3016:	89 85       	ldd	r24, Y+9	; 0x09
    3018:	9a 85       	ldd	r25, Y+10	; 0x0a
    301a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    301e:	dc 01       	movw	r26, r24
    3020:	cb 01       	movw	r24, r22
    3022:	9e 83       	std	Y+6, r25	; 0x06
    3024:	8d 83       	std	Y+5, r24	; 0x05
    3026:	8d 81       	ldd	r24, Y+5	; 0x05
    3028:	9e 81       	ldd	r25, Y+6	; 0x06
    302a:	9a 83       	std	Y+2, r25	; 0x02
    302c:	89 83       	std	Y+1, r24	; 0x01
    302e:	89 81       	ldd	r24, Y+1	; 0x01
    3030:	9a 81       	ldd	r25, Y+2	; 0x02
    3032:	01 97       	sbiw	r24, 0x01	; 1
    3034:	f1 f7       	brne	.-4      	; 0x3032 <LED_voidShifRight+0xa7e>
    3036:	9a 83       	std	Y+2, r25	; 0x02
    3038:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    303a:	fe 01       	movw	r30, r28
    303c:	ef 58       	subi	r30, 0x8F	; 143
    303e:	ff 4f       	sbci	r31, 0xFF	; 255
    3040:	80 81       	ld	r24, Z
    3042:	60 e0       	ldi	r22, 0x00	; 0
    3044:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
}
    3048:	ce 58       	subi	r28, 0x8E	; 142
    304a:	df 4f       	sbci	r29, 0xFF	; 255
    304c:	0f b6       	in	r0, 0x3f	; 63
    304e:	f8 94       	cli
    3050:	de bf       	out	0x3e, r29	; 62
    3052:	0f be       	out	0x3f, r0	; 63
    3054:	cd bf       	out	0x3d, r28	; 61
    3056:	cf 91       	pop	r28
    3058:	df 91       	pop	r29
    305a:	1f 91       	pop	r17
    305c:	0f 91       	pop	r16
    305e:	08 95       	ret

00003060 <LED_voidShiftRightLeft>:

void LED_voidShiftRightLeft (uint8 Copy_u8PortNum, uint8 Copy_u8Delayms)
{
    3060:	0f 93       	push	r16
    3062:	1f 93       	push	r17
    3064:	df 93       	push	r29
    3066:	cf 93       	push	r28
    3068:	cd b7       	in	r28, 0x3d	; 61
    306a:	de b7       	in	r29, 0x3e	; 62
    306c:	c4 5d       	subi	r28, 0xD4	; 212
    306e:	d0 40       	sbci	r29, 0x00	; 0
    3070:	0f b6       	in	r0, 0x3f	; 63
    3072:	f8 94       	cli
    3074:	de bf       	out	0x3e, r29	; 62
    3076:	0f be       	out	0x3f, r0	; 63
    3078:	cd bf       	out	0x3d, r28	; 61
    307a:	fe 01       	movw	r30, r28
    307c:	ed 52       	subi	r30, 0x2D	; 45
    307e:	ff 4f       	sbci	r31, 0xFF	; 255
    3080:	80 83       	st	Z, r24
    3082:	fe 01       	movw	r30, r28
    3084:	ec 52       	subi	r30, 0x2C	; 44
    3086:	ff 4f       	sbci	r31, 0xFF	; 255
    3088:	60 83       	st	Z, r22
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
    308a:	fe 01       	movw	r30, r28
    308c:	ed 52       	subi	r30, 0x2D	; 45
    308e:	ff 4f       	sbci	r31, 0xFF	; 255
    3090:	80 81       	ld	r24, Z
    3092:	61 e0       	ldi	r22, 0x01	; 1
    3094:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>

	/*     	Shift Right		*/

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN7, DIO_u8HIGH);
    3098:	fe 01       	movw	r30, r28
    309a:	ed 52       	subi	r30, 0x2D	; 45
    309c:	ff 4f       	sbci	r31, 0xFF	; 255
    309e:	80 81       	ld	r24, Z
    30a0:	67 e0       	ldi	r22, 0x07	; 7
    30a2:	41 e0       	ldi	r20, 0x01	; 1
    30a4:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    30a8:	fe 01       	movw	r30, r28
    30aa:	ec 52       	subi	r30, 0x2C	; 44
    30ac:	ff 4f       	sbci	r31, 0xFF	; 255
    30ae:	80 81       	ld	r24, Z
    30b0:	88 2f       	mov	r24, r24
    30b2:	90 e0       	ldi	r25, 0x00	; 0
    30b4:	a0 e0       	ldi	r26, 0x00	; 0
    30b6:	b0 e0       	ldi	r27, 0x00	; 0
    30b8:	bc 01       	movw	r22, r24
    30ba:	cd 01       	movw	r24, r26
    30bc:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    30c0:	dc 01       	movw	r26, r24
    30c2:	cb 01       	movw	r24, r22
    30c4:	fe 01       	movw	r30, r28
    30c6:	e1 53       	subi	r30, 0x31	; 49
    30c8:	ff 4f       	sbci	r31, 0xFF	; 255
    30ca:	80 83       	st	Z, r24
    30cc:	91 83       	std	Z+1, r25	; 0x01
    30ce:	a2 83       	std	Z+2, r26	; 0x02
    30d0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30d2:	8e 01       	movw	r16, r28
    30d4:	05 53       	subi	r16, 0x35	; 53
    30d6:	1f 4f       	sbci	r17, 0xFF	; 255
    30d8:	fe 01       	movw	r30, r28
    30da:	e1 53       	subi	r30, 0x31	; 49
    30dc:	ff 4f       	sbci	r31, 0xFF	; 255
    30de:	60 81       	ld	r22, Z
    30e0:	71 81       	ldd	r23, Z+1	; 0x01
    30e2:	82 81       	ldd	r24, Z+2	; 0x02
    30e4:	93 81       	ldd	r25, Z+3	; 0x03
    30e6:	20 e0       	ldi	r18, 0x00	; 0
    30e8:	30 e0       	ldi	r19, 0x00	; 0
    30ea:	4a ef       	ldi	r20, 0xFA	; 250
    30ec:	54 e4       	ldi	r21, 0x44	; 68
    30ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30f2:	dc 01       	movw	r26, r24
    30f4:	cb 01       	movw	r24, r22
    30f6:	f8 01       	movw	r30, r16
    30f8:	80 83       	st	Z, r24
    30fa:	91 83       	std	Z+1, r25	; 0x01
    30fc:	a2 83       	std	Z+2, r26	; 0x02
    30fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3100:	fe 01       	movw	r30, r28
    3102:	e5 53       	subi	r30, 0x35	; 53
    3104:	ff 4f       	sbci	r31, 0xFF	; 255
    3106:	60 81       	ld	r22, Z
    3108:	71 81       	ldd	r23, Z+1	; 0x01
    310a:	82 81       	ldd	r24, Z+2	; 0x02
    310c:	93 81       	ldd	r25, Z+3	; 0x03
    310e:	20 e0       	ldi	r18, 0x00	; 0
    3110:	30 e0       	ldi	r19, 0x00	; 0
    3112:	40 e8       	ldi	r20, 0x80	; 128
    3114:	5f e3       	ldi	r21, 0x3F	; 63
    3116:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    311a:	88 23       	and	r24, r24
    311c:	44 f4       	brge	.+16     	; 0x312e <LED_voidShiftRightLeft+0xce>
		__ticks = 1;
    311e:	fe 01       	movw	r30, r28
    3120:	e7 53       	subi	r30, 0x37	; 55
    3122:	ff 4f       	sbci	r31, 0xFF	; 255
    3124:	81 e0       	ldi	r24, 0x01	; 1
    3126:	90 e0       	ldi	r25, 0x00	; 0
    3128:	91 83       	std	Z+1, r25	; 0x01
    312a:	80 83       	st	Z, r24
    312c:	64 c0       	rjmp	.+200    	; 0x31f6 <LED_voidShiftRightLeft+0x196>
	else if (__tmp > 65535)
    312e:	fe 01       	movw	r30, r28
    3130:	e5 53       	subi	r30, 0x35	; 53
    3132:	ff 4f       	sbci	r31, 0xFF	; 255
    3134:	60 81       	ld	r22, Z
    3136:	71 81       	ldd	r23, Z+1	; 0x01
    3138:	82 81       	ldd	r24, Z+2	; 0x02
    313a:	93 81       	ldd	r25, Z+3	; 0x03
    313c:	20 e0       	ldi	r18, 0x00	; 0
    313e:	3f ef       	ldi	r19, 0xFF	; 255
    3140:	4f e7       	ldi	r20, 0x7F	; 127
    3142:	57 e4       	ldi	r21, 0x47	; 71
    3144:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3148:	18 16       	cp	r1, r24
    314a:	0c f0       	brlt	.+2      	; 0x314e <LED_voidShiftRightLeft+0xee>
    314c:	43 c0       	rjmp	.+134    	; 0x31d4 <LED_voidShiftRightLeft+0x174>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    314e:	fe 01       	movw	r30, r28
    3150:	e1 53       	subi	r30, 0x31	; 49
    3152:	ff 4f       	sbci	r31, 0xFF	; 255
    3154:	60 81       	ld	r22, Z
    3156:	71 81       	ldd	r23, Z+1	; 0x01
    3158:	82 81       	ldd	r24, Z+2	; 0x02
    315a:	93 81       	ldd	r25, Z+3	; 0x03
    315c:	20 e0       	ldi	r18, 0x00	; 0
    315e:	30 e0       	ldi	r19, 0x00	; 0
    3160:	40 e2       	ldi	r20, 0x20	; 32
    3162:	51 e4       	ldi	r21, 0x41	; 65
    3164:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3168:	dc 01       	movw	r26, r24
    316a:	cb 01       	movw	r24, r22
    316c:	8e 01       	movw	r16, r28
    316e:	07 53       	subi	r16, 0x37	; 55
    3170:	1f 4f       	sbci	r17, 0xFF	; 255
    3172:	bc 01       	movw	r22, r24
    3174:	cd 01       	movw	r24, r26
    3176:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    317a:	dc 01       	movw	r26, r24
    317c:	cb 01       	movw	r24, r22
    317e:	f8 01       	movw	r30, r16
    3180:	91 83       	std	Z+1, r25	; 0x01
    3182:	80 83       	st	Z, r24
    3184:	1f c0       	rjmp	.+62     	; 0x31c4 <LED_voidShiftRightLeft+0x164>
    3186:	fe 01       	movw	r30, r28
    3188:	e9 53       	subi	r30, 0x39	; 57
    318a:	ff 4f       	sbci	r31, 0xFF	; 255
    318c:	88 ec       	ldi	r24, 0xC8	; 200
    318e:	90 e0       	ldi	r25, 0x00	; 0
    3190:	91 83       	std	Z+1, r25	; 0x01
    3192:	80 83       	st	Z, r24
    3194:	fe 01       	movw	r30, r28
    3196:	e9 53       	subi	r30, 0x39	; 57
    3198:	ff 4f       	sbci	r31, 0xFF	; 255
    319a:	80 81       	ld	r24, Z
    319c:	91 81       	ldd	r25, Z+1	; 0x01
    319e:	01 97       	sbiw	r24, 0x01	; 1
    31a0:	f1 f7       	brne	.-4      	; 0x319e <LED_voidShiftRightLeft+0x13e>
    31a2:	fe 01       	movw	r30, r28
    31a4:	e9 53       	subi	r30, 0x39	; 57
    31a6:	ff 4f       	sbci	r31, 0xFF	; 255
    31a8:	91 83       	std	Z+1, r25	; 0x01
    31aa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31ac:	de 01       	movw	r26, r28
    31ae:	a7 53       	subi	r26, 0x37	; 55
    31b0:	bf 4f       	sbci	r27, 0xFF	; 255
    31b2:	fe 01       	movw	r30, r28
    31b4:	e7 53       	subi	r30, 0x37	; 55
    31b6:	ff 4f       	sbci	r31, 0xFF	; 255
    31b8:	80 81       	ld	r24, Z
    31ba:	91 81       	ldd	r25, Z+1	; 0x01
    31bc:	01 97       	sbiw	r24, 0x01	; 1
    31be:	11 96       	adiw	r26, 0x01	; 1
    31c0:	9c 93       	st	X, r25
    31c2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31c4:	fe 01       	movw	r30, r28
    31c6:	e7 53       	subi	r30, 0x37	; 55
    31c8:	ff 4f       	sbci	r31, 0xFF	; 255
    31ca:	80 81       	ld	r24, Z
    31cc:	91 81       	ldd	r25, Z+1	; 0x01
    31ce:	00 97       	sbiw	r24, 0x00	; 0
    31d0:	d1 f6       	brne	.-76     	; 0x3186 <LED_voidShiftRightLeft+0x126>
    31d2:	27 c0       	rjmp	.+78     	; 0x3222 <LED_voidShiftRightLeft+0x1c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31d4:	8e 01       	movw	r16, r28
    31d6:	07 53       	subi	r16, 0x37	; 55
    31d8:	1f 4f       	sbci	r17, 0xFF	; 255
    31da:	fe 01       	movw	r30, r28
    31dc:	e5 53       	subi	r30, 0x35	; 53
    31de:	ff 4f       	sbci	r31, 0xFF	; 255
    31e0:	60 81       	ld	r22, Z
    31e2:	71 81       	ldd	r23, Z+1	; 0x01
    31e4:	82 81       	ldd	r24, Z+2	; 0x02
    31e6:	93 81       	ldd	r25, Z+3	; 0x03
    31e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31ec:	dc 01       	movw	r26, r24
    31ee:	cb 01       	movw	r24, r22
    31f0:	f8 01       	movw	r30, r16
    31f2:	91 83       	std	Z+1, r25	; 0x01
    31f4:	80 83       	st	Z, r24
    31f6:	de 01       	movw	r26, r28
    31f8:	ab 53       	subi	r26, 0x3B	; 59
    31fa:	bf 4f       	sbci	r27, 0xFF	; 255
    31fc:	fe 01       	movw	r30, r28
    31fe:	e7 53       	subi	r30, 0x37	; 55
    3200:	ff 4f       	sbci	r31, 0xFF	; 255
    3202:	80 81       	ld	r24, Z
    3204:	91 81       	ldd	r25, Z+1	; 0x01
    3206:	8d 93       	st	X+, r24
    3208:	9c 93       	st	X, r25
    320a:	fe 01       	movw	r30, r28
    320c:	eb 53       	subi	r30, 0x3B	; 59
    320e:	ff 4f       	sbci	r31, 0xFF	; 255
    3210:	80 81       	ld	r24, Z
    3212:	91 81       	ldd	r25, Z+1	; 0x01
    3214:	01 97       	sbiw	r24, 0x01	; 1
    3216:	f1 f7       	brne	.-4      	; 0x3214 <LED_voidShiftRightLeft+0x1b4>
    3218:	fe 01       	movw	r30, r28
    321a:	eb 53       	subi	r30, 0x3B	; 59
    321c:	ff 4f       	sbci	r31, 0xFF	; 255
    321e:	91 83       	std	Z+1, r25	; 0x01
    3220:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    3222:	fe 01       	movw	r30, r28
    3224:	ed 52       	subi	r30, 0x2D	; 45
    3226:	ff 4f       	sbci	r31, 0xFF	; 255
    3228:	80 81       	ld	r24, Z
    322a:	60 e0       	ldi	r22, 0x00	; 0
    322c:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN6, DIO_u8HIGH);
    3230:	fe 01       	movw	r30, r28
    3232:	ed 52       	subi	r30, 0x2D	; 45
    3234:	ff 4f       	sbci	r31, 0xFF	; 255
    3236:	80 81       	ld	r24, Z
    3238:	66 e0       	ldi	r22, 0x06	; 6
    323a:	41 e0       	ldi	r20, 0x01	; 1
    323c:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    3240:	fe 01       	movw	r30, r28
    3242:	ec 52       	subi	r30, 0x2C	; 44
    3244:	ff 4f       	sbci	r31, 0xFF	; 255
    3246:	80 81       	ld	r24, Z
    3248:	88 2f       	mov	r24, r24
    324a:	90 e0       	ldi	r25, 0x00	; 0
    324c:	a0 e0       	ldi	r26, 0x00	; 0
    324e:	b0 e0       	ldi	r27, 0x00	; 0
    3250:	bc 01       	movw	r22, r24
    3252:	cd 01       	movw	r24, r26
    3254:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    3258:	dc 01       	movw	r26, r24
    325a:	cb 01       	movw	r24, r22
    325c:	fe 01       	movw	r30, r28
    325e:	ef 53       	subi	r30, 0x3F	; 63
    3260:	ff 4f       	sbci	r31, 0xFF	; 255
    3262:	80 83       	st	Z, r24
    3264:	91 83       	std	Z+1, r25	; 0x01
    3266:	a2 83       	std	Z+2, r26	; 0x02
    3268:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    326a:	8e 01       	movw	r16, r28
    326c:	03 54       	subi	r16, 0x43	; 67
    326e:	1f 4f       	sbci	r17, 0xFF	; 255
    3270:	fe 01       	movw	r30, r28
    3272:	ef 53       	subi	r30, 0x3F	; 63
    3274:	ff 4f       	sbci	r31, 0xFF	; 255
    3276:	60 81       	ld	r22, Z
    3278:	71 81       	ldd	r23, Z+1	; 0x01
    327a:	82 81       	ldd	r24, Z+2	; 0x02
    327c:	93 81       	ldd	r25, Z+3	; 0x03
    327e:	20 e0       	ldi	r18, 0x00	; 0
    3280:	30 e0       	ldi	r19, 0x00	; 0
    3282:	4a ef       	ldi	r20, 0xFA	; 250
    3284:	54 e4       	ldi	r21, 0x44	; 68
    3286:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    328a:	dc 01       	movw	r26, r24
    328c:	cb 01       	movw	r24, r22
    328e:	f8 01       	movw	r30, r16
    3290:	80 83       	st	Z, r24
    3292:	91 83       	std	Z+1, r25	; 0x01
    3294:	a2 83       	std	Z+2, r26	; 0x02
    3296:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3298:	fe 01       	movw	r30, r28
    329a:	e3 54       	subi	r30, 0x43	; 67
    329c:	ff 4f       	sbci	r31, 0xFF	; 255
    329e:	60 81       	ld	r22, Z
    32a0:	71 81       	ldd	r23, Z+1	; 0x01
    32a2:	82 81       	ldd	r24, Z+2	; 0x02
    32a4:	93 81       	ldd	r25, Z+3	; 0x03
    32a6:	20 e0       	ldi	r18, 0x00	; 0
    32a8:	30 e0       	ldi	r19, 0x00	; 0
    32aa:	40 e8       	ldi	r20, 0x80	; 128
    32ac:	5f e3       	ldi	r21, 0x3F	; 63
    32ae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32b2:	88 23       	and	r24, r24
    32b4:	44 f4       	brge	.+16     	; 0x32c6 <LED_voidShiftRightLeft+0x266>
		__ticks = 1;
    32b6:	fe 01       	movw	r30, r28
    32b8:	e5 54       	subi	r30, 0x45	; 69
    32ba:	ff 4f       	sbci	r31, 0xFF	; 255
    32bc:	81 e0       	ldi	r24, 0x01	; 1
    32be:	90 e0       	ldi	r25, 0x00	; 0
    32c0:	91 83       	std	Z+1, r25	; 0x01
    32c2:	80 83       	st	Z, r24
    32c4:	64 c0       	rjmp	.+200    	; 0x338e <LED_voidShiftRightLeft+0x32e>
	else if (__tmp > 65535)
    32c6:	fe 01       	movw	r30, r28
    32c8:	e3 54       	subi	r30, 0x43	; 67
    32ca:	ff 4f       	sbci	r31, 0xFF	; 255
    32cc:	60 81       	ld	r22, Z
    32ce:	71 81       	ldd	r23, Z+1	; 0x01
    32d0:	82 81       	ldd	r24, Z+2	; 0x02
    32d2:	93 81       	ldd	r25, Z+3	; 0x03
    32d4:	20 e0       	ldi	r18, 0x00	; 0
    32d6:	3f ef       	ldi	r19, 0xFF	; 255
    32d8:	4f e7       	ldi	r20, 0x7F	; 127
    32da:	57 e4       	ldi	r21, 0x47	; 71
    32dc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    32e0:	18 16       	cp	r1, r24
    32e2:	0c f0       	brlt	.+2      	; 0x32e6 <LED_voidShiftRightLeft+0x286>
    32e4:	43 c0       	rjmp	.+134    	; 0x336c <LED_voidShiftRightLeft+0x30c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32e6:	fe 01       	movw	r30, r28
    32e8:	ef 53       	subi	r30, 0x3F	; 63
    32ea:	ff 4f       	sbci	r31, 0xFF	; 255
    32ec:	60 81       	ld	r22, Z
    32ee:	71 81       	ldd	r23, Z+1	; 0x01
    32f0:	82 81       	ldd	r24, Z+2	; 0x02
    32f2:	93 81       	ldd	r25, Z+3	; 0x03
    32f4:	20 e0       	ldi	r18, 0x00	; 0
    32f6:	30 e0       	ldi	r19, 0x00	; 0
    32f8:	40 e2       	ldi	r20, 0x20	; 32
    32fa:	51 e4       	ldi	r21, 0x41	; 65
    32fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3300:	dc 01       	movw	r26, r24
    3302:	cb 01       	movw	r24, r22
    3304:	8e 01       	movw	r16, r28
    3306:	05 54       	subi	r16, 0x45	; 69
    3308:	1f 4f       	sbci	r17, 0xFF	; 255
    330a:	bc 01       	movw	r22, r24
    330c:	cd 01       	movw	r24, r26
    330e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3312:	dc 01       	movw	r26, r24
    3314:	cb 01       	movw	r24, r22
    3316:	f8 01       	movw	r30, r16
    3318:	91 83       	std	Z+1, r25	; 0x01
    331a:	80 83       	st	Z, r24
    331c:	1f c0       	rjmp	.+62     	; 0x335c <LED_voidShiftRightLeft+0x2fc>
    331e:	fe 01       	movw	r30, r28
    3320:	e7 54       	subi	r30, 0x47	; 71
    3322:	ff 4f       	sbci	r31, 0xFF	; 255
    3324:	88 ec       	ldi	r24, 0xC8	; 200
    3326:	90 e0       	ldi	r25, 0x00	; 0
    3328:	91 83       	std	Z+1, r25	; 0x01
    332a:	80 83       	st	Z, r24
    332c:	fe 01       	movw	r30, r28
    332e:	e7 54       	subi	r30, 0x47	; 71
    3330:	ff 4f       	sbci	r31, 0xFF	; 255
    3332:	80 81       	ld	r24, Z
    3334:	91 81       	ldd	r25, Z+1	; 0x01
    3336:	01 97       	sbiw	r24, 0x01	; 1
    3338:	f1 f7       	brne	.-4      	; 0x3336 <LED_voidShiftRightLeft+0x2d6>
    333a:	fe 01       	movw	r30, r28
    333c:	e7 54       	subi	r30, 0x47	; 71
    333e:	ff 4f       	sbci	r31, 0xFF	; 255
    3340:	91 83       	std	Z+1, r25	; 0x01
    3342:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3344:	de 01       	movw	r26, r28
    3346:	a5 54       	subi	r26, 0x45	; 69
    3348:	bf 4f       	sbci	r27, 0xFF	; 255
    334a:	fe 01       	movw	r30, r28
    334c:	e5 54       	subi	r30, 0x45	; 69
    334e:	ff 4f       	sbci	r31, 0xFF	; 255
    3350:	80 81       	ld	r24, Z
    3352:	91 81       	ldd	r25, Z+1	; 0x01
    3354:	01 97       	sbiw	r24, 0x01	; 1
    3356:	11 96       	adiw	r26, 0x01	; 1
    3358:	9c 93       	st	X, r25
    335a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    335c:	fe 01       	movw	r30, r28
    335e:	e5 54       	subi	r30, 0x45	; 69
    3360:	ff 4f       	sbci	r31, 0xFF	; 255
    3362:	80 81       	ld	r24, Z
    3364:	91 81       	ldd	r25, Z+1	; 0x01
    3366:	00 97       	sbiw	r24, 0x00	; 0
    3368:	d1 f6       	brne	.-76     	; 0x331e <LED_voidShiftRightLeft+0x2be>
    336a:	27 c0       	rjmp	.+78     	; 0x33ba <LED_voidShiftRightLeft+0x35a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    336c:	8e 01       	movw	r16, r28
    336e:	05 54       	subi	r16, 0x45	; 69
    3370:	1f 4f       	sbci	r17, 0xFF	; 255
    3372:	fe 01       	movw	r30, r28
    3374:	e3 54       	subi	r30, 0x43	; 67
    3376:	ff 4f       	sbci	r31, 0xFF	; 255
    3378:	60 81       	ld	r22, Z
    337a:	71 81       	ldd	r23, Z+1	; 0x01
    337c:	82 81       	ldd	r24, Z+2	; 0x02
    337e:	93 81       	ldd	r25, Z+3	; 0x03
    3380:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3384:	dc 01       	movw	r26, r24
    3386:	cb 01       	movw	r24, r22
    3388:	f8 01       	movw	r30, r16
    338a:	91 83       	std	Z+1, r25	; 0x01
    338c:	80 83       	st	Z, r24
    338e:	de 01       	movw	r26, r28
    3390:	a9 54       	subi	r26, 0x49	; 73
    3392:	bf 4f       	sbci	r27, 0xFF	; 255
    3394:	fe 01       	movw	r30, r28
    3396:	e5 54       	subi	r30, 0x45	; 69
    3398:	ff 4f       	sbci	r31, 0xFF	; 255
    339a:	80 81       	ld	r24, Z
    339c:	91 81       	ldd	r25, Z+1	; 0x01
    339e:	8d 93       	st	X+, r24
    33a0:	9c 93       	st	X, r25
    33a2:	fe 01       	movw	r30, r28
    33a4:	e9 54       	subi	r30, 0x49	; 73
    33a6:	ff 4f       	sbci	r31, 0xFF	; 255
    33a8:	80 81       	ld	r24, Z
    33aa:	91 81       	ldd	r25, Z+1	; 0x01
    33ac:	01 97       	sbiw	r24, 0x01	; 1
    33ae:	f1 f7       	brne	.-4      	; 0x33ac <LED_voidShiftRightLeft+0x34c>
    33b0:	fe 01       	movw	r30, r28
    33b2:	e9 54       	subi	r30, 0x49	; 73
    33b4:	ff 4f       	sbci	r31, 0xFF	; 255
    33b6:	91 83       	std	Z+1, r25	; 0x01
    33b8:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    33ba:	fe 01       	movw	r30, r28
    33bc:	ed 52       	subi	r30, 0x2D	; 45
    33be:	ff 4f       	sbci	r31, 0xFF	; 255
    33c0:	80 81       	ld	r24, Z
    33c2:	60 e0       	ldi	r22, 0x00	; 0
    33c4:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN5, DIO_u8HIGH);
    33c8:	fe 01       	movw	r30, r28
    33ca:	ed 52       	subi	r30, 0x2D	; 45
    33cc:	ff 4f       	sbci	r31, 0xFF	; 255
    33ce:	80 81       	ld	r24, Z
    33d0:	65 e0       	ldi	r22, 0x05	; 5
    33d2:	41 e0       	ldi	r20, 0x01	; 1
    33d4:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    33d8:	fe 01       	movw	r30, r28
    33da:	ec 52       	subi	r30, 0x2C	; 44
    33dc:	ff 4f       	sbci	r31, 0xFF	; 255
    33de:	80 81       	ld	r24, Z
    33e0:	88 2f       	mov	r24, r24
    33e2:	90 e0       	ldi	r25, 0x00	; 0
    33e4:	a0 e0       	ldi	r26, 0x00	; 0
    33e6:	b0 e0       	ldi	r27, 0x00	; 0
    33e8:	bc 01       	movw	r22, r24
    33ea:	cd 01       	movw	r24, r26
    33ec:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    33f0:	dc 01       	movw	r26, r24
    33f2:	cb 01       	movw	r24, r22
    33f4:	fe 01       	movw	r30, r28
    33f6:	ed 54       	subi	r30, 0x4D	; 77
    33f8:	ff 4f       	sbci	r31, 0xFF	; 255
    33fa:	80 83       	st	Z, r24
    33fc:	91 83       	std	Z+1, r25	; 0x01
    33fe:	a2 83       	std	Z+2, r26	; 0x02
    3400:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3402:	8e 01       	movw	r16, r28
    3404:	01 55       	subi	r16, 0x51	; 81
    3406:	1f 4f       	sbci	r17, 0xFF	; 255
    3408:	fe 01       	movw	r30, r28
    340a:	ed 54       	subi	r30, 0x4D	; 77
    340c:	ff 4f       	sbci	r31, 0xFF	; 255
    340e:	60 81       	ld	r22, Z
    3410:	71 81       	ldd	r23, Z+1	; 0x01
    3412:	82 81       	ldd	r24, Z+2	; 0x02
    3414:	93 81       	ldd	r25, Z+3	; 0x03
    3416:	20 e0       	ldi	r18, 0x00	; 0
    3418:	30 e0       	ldi	r19, 0x00	; 0
    341a:	4a ef       	ldi	r20, 0xFA	; 250
    341c:	54 e4       	ldi	r21, 0x44	; 68
    341e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3422:	dc 01       	movw	r26, r24
    3424:	cb 01       	movw	r24, r22
    3426:	f8 01       	movw	r30, r16
    3428:	80 83       	st	Z, r24
    342a:	91 83       	std	Z+1, r25	; 0x01
    342c:	a2 83       	std	Z+2, r26	; 0x02
    342e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3430:	fe 01       	movw	r30, r28
    3432:	e1 55       	subi	r30, 0x51	; 81
    3434:	ff 4f       	sbci	r31, 0xFF	; 255
    3436:	60 81       	ld	r22, Z
    3438:	71 81       	ldd	r23, Z+1	; 0x01
    343a:	82 81       	ldd	r24, Z+2	; 0x02
    343c:	93 81       	ldd	r25, Z+3	; 0x03
    343e:	20 e0       	ldi	r18, 0x00	; 0
    3440:	30 e0       	ldi	r19, 0x00	; 0
    3442:	40 e8       	ldi	r20, 0x80	; 128
    3444:	5f e3       	ldi	r21, 0x3F	; 63
    3446:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    344a:	88 23       	and	r24, r24
    344c:	44 f4       	brge	.+16     	; 0x345e <LED_voidShiftRightLeft+0x3fe>
		__ticks = 1;
    344e:	fe 01       	movw	r30, r28
    3450:	e3 55       	subi	r30, 0x53	; 83
    3452:	ff 4f       	sbci	r31, 0xFF	; 255
    3454:	81 e0       	ldi	r24, 0x01	; 1
    3456:	90 e0       	ldi	r25, 0x00	; 0
    3458:	91 83       	std	Z+1, r25	; 0x01
    345a:	80 83       	st	Z, r24
    345c:	64 c0       	rjmp	.+200    	; 0x3526 <LED_voidShiftRightLeft+0x4c6>
	else if (__tmp > 65535)
    345e:	fe 01       	movw	r30, r28
    3460:	e1 55       	subi	r30, 0x51	; 81
    3462:	ff 4f       	sbci	r31, 0xFF	; 255
    3464:	60 81       	ld	r22, Z
    3466:	71 81       	ldd	r23, Z+1	; 0x01
    3468:	82 81       	ldd	r24, Z+2	; 0x02
    346a:	93 81       	ldd	r25, Z+3	; 0x03
    346c:	20 e0       	ldi	r18, 0x00	; 0
    346e:	3f ef       	ldi	r19, 0xFF	; 255
    3470:	4f e7       	ldi	r20, 0x7F	; 127
    3472:	57 e4       	ldi	r21, 0x47	; 71
    3474:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3478:	18 16       	cp	r1, r24
    347a:	0c f0       	brlt	.+2      	; 0x347e <LED_voidShiftRightLeft+0x41e>
    347c:	43 c0       	rjmp	.+134    	; 0x3504 <LED_voidShiftRightLeft+0x4a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    347e:	fe 01       	movw	r30, r28
    3480:	ed 54       	subi	r30, 0x4D	; 77
    3482:	ff 4f       	sbci	r31, 0xFF	; 255
    3484:	60 81       	ld	r22, Z
    3486:	71 81       	ldd	r23, Z+1	; 0x01
    3488:	82 81       	ldd	r24, Z+2	; 0x02
    348a:	93 81       	ldd	r25, Z+3	; 0x03
    348c:	20 e0       	ldi	r18, 0x00	; 0
    348e:	30 e0       	ldi	r19, 0x00	; 0
    3490:	40 e2       	ldi	r20, 0x20	; 32
    3492:	51 e4       	ldi	r21, 0x41	; 65
    3494:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3498:	dc 01       	movw	r26, r24
    349a:	cb 01       	movw	r24, r22
    349c:	8e 01       	movw	r16, r28
    349e:	03 55       	subi	r16, 0x53	; 83
    34a0:	1f 4f       	sbci	r17, 0xFF	; 255
    34a2:	bc 01       	movw	r22, r24
    34a4:	cd 01       	movw	r24, r26
    34a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34aa:	dc 01       	movw	r26, r24
    34ac:	cb 01       	movw	r24, r22
    34ae:	f8 01       	movw	r30, r16
    34b0:	91 83       	std	Z+1, r25	; 0x01
    34b2:	80 83       	st	Z, r24
    34b4:	1f c0       	rjmp	.+62     	; 0x34f4 <LED_voidShiftRightLeft+0x494>
    34b6:	fe 01       	movw	r30, r28
    34b8:	e5 55       	subi	r30, 0x55	; 85
    34ba:	ff 4f       	sbci	r31, 0xFF	; 255
    34bc:	88 ec       	ldi	r24, 0xC8	; 200
    34be:	90 e0       	ldi	r25, 0x00	; 0
    34c0:	91 83       	std	Z+1, r25	; 0x01
    34c2:	80 83       	st	Z, r24
    34c4:	fe 01       	movw	r30, r28
    34c6:	e5 55       	subi	r30, 0x55	; 85
    34c8:	ff 4f       	sbci	r31, 0xFF	; 255
    34ca:	80 81       	ld	r24, Z
    34cc:	91 81       	ldd	r25, Z+1	; 0x01
    34ce:	01 97       	sbiw	r24, 0x01	; 1
    34d0:	f1 f7       	brne	.-4      	; 0x34ce <LED_voidShiftRightLeft+0x46e>
    34d2:	fe 01       	movw	r30, r28
    34d4:	e5 55       	subi	r30, 0x55	; 85
    34d6:	ff 4f       	sbci	r31, 0xFF	; 255
    34d8:	91 83       	std	Z+1, r25	; 0x01
    34da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34dc:	de 01       	movw	r26, r28
    34de:	a3 55       	subi	r26, 0x53	; 83
    34e0:	bf 4f       	sbci	r27, 0xFF	; 255
    34e2:	fe 01       	movw	r30, r28
    34e4:	e3 55       	subi	r30, 0x53	; 83
    34e6:	ff 4f       	sbci	r31, 0xFF	; 255
    34e8:	80 81       	ld	r24, Z
    34ea:	91 81       	ldd	r25, Z+1	; 0x01
    34ec:	01 97       	sbiw	r24, 0x01	; 1
    34ee:	11 96       	adiw	r26, 0x01	; 1
    34f0:	9c 93       	st	X, r25
    34f2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34f4:	fe 01       	movw	r30, r28
    34f6:	e3 55       	subi	r30, 0x53	; 83
    34f8:	ff 4f       	sbci	r31, 0xFF	; 255
    34fa:	80 81       	ld	r24, Z
    34fc:	91 81       	ldd	r25, Z+1	; 0x01
    34fe:	00 97       	sbiw	r24, 0x00	; 0
    3500:	d1 f6       	brne	.-76     	; 0x34b6 <LED_voidShiftRightLeft+0x456>
    3502:	27 c0       	rjmp	.+78     	; 0x3552 <LED_voidShiftRightLeft+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3504:	8e 01       	movw	r16, r28
    3506:	03 55       	subi	r16, 0x53	; 83
    3508:	1f 4f       	sbci	r17, 0xFF	; 255
    350a:	fe 01       	movw	r30, r28
    350c:	e1 55       	subi	r30, 0x51	; 81
    350e:	ff 4f       	sbci	r31, 0xFF	; 255
    3510:	60 81       	ld	r22, Z
    3512:	71 81       	ldd	r23, Z+1	; 0x01
    3514:	82 81       	ldd	r24, Z+2	; 0x02
    3516:	93 81       	ldd	r25, Z+3	; 0x03
    3518:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    351c:	dc 01       	movw	r26, r24
    351e:	cb 01       	movw	r24, r22
    3520:	f8 01       	movw	r30, r16
    3522:	91 83       	std	Z+1, r25	; 0x01
    3524:	80 83       	st	Z, r24
    3526:	de 01       	movw	r26, r28
    3528:	a7 55       	subi	r26, 0x57	; 87
    352a:	bf 4f       	sbci	r27, 0xFF	; 255
    352c:	fe 01       	movw	r30, r28
    352e:	e3 55       	subi	r30, 0x53	; 83
    3530:	ff 4f       	sbci	r31, 0xFF	; 255
    3532:	80 81       	ld	r24, Z
    3534:	91 81       	ldd	r25, Z+1	; 0x01
    3536:	8d 93       	st	X+, r24
    3538:	9c 93       	st	X, r25
    353a:	fe 01       	movw	r30, r28
    353c:	e7 55       	subi	r30, 0x57	; 87
    353e:	ff 4f       	sbci	r31, 0xFF	; 255
    3540:	80 81       	ld	r24, Z
    3542:	91 81       	ldd	r25, Z+1	; 0x01
    3544:	01 97       	sbiw	r24, 0x01	; 1
    3546:	f1 f7       	brne	.-4      	; 0x3544 <LED_voidShiftRightLeft+0x4e4>
    3548:	fe 01       	movw	r30, r28
    354a:	e7 55       	subi	r30, 0x57	; 87
    354c:	ff 4f       	sbci	r31, 0xFF	; 255
    354e:	91 83       	std	Z+1, r25	; 0x01
    3550:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    3552:	fe 01       	movw	r30, r28
    3554:	ed 52       	subi	r30, 0x2D	; 45
    3556:	ff 4f       	sbci	r31, 0xFF	; 255
    3558:	80 81       	ld	r24, Z
    355a:	60 e0       	ldi	r22, 0x00	; 0
    355c:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN4, DIO_u8HIGH);
    3560:	fe 01       	movw	r30, r28
    3562:	ed 52       	subi	r30, 0x2D	; 45
    3564:	ff 4f       	sbci	r31, 0xFF	; 255
    3566:	80 81       	ld	r24, Z
    3568:	64 e0       	ldi	r22, 0x04	; 4
    356a:	41 e0       	ldi	r20, 0x01	; 1
    356c:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    3570:	fe 01       	movw	r30, r28
    3572:	ec 52       	subi	r30, 0x2C	; 44
    3574:	ff 4f       	sbci	r31, 0xFF	; 255
    3576:	80 81       	ld	r24, Z
    3578:	88 2f       	mov	r24, r24
    357a:	90 e0       	ldi	r25, 0x00	; 0
    357c:	a0 e0       	ldi	r26, 0x00	; 0
    357e:	b0 e0       	ldi	r27, 0x00	; 0
    3580:	bc 01       	movw	r22, r24
    3582:	cd 01       	movw	r24, r26
    3584:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    3588:	dc 01       	movw	r26, r24
    358a:	cb 01       	movw	r24, r22
    358c:	fe 01       	movw	r30, r28
    358e:	eb 55       	subi	r30, 0x5B	; 91
    3590:	ff 4f       	sbci	r31, 0xFF	; 255
    3592:	80 83       	st	Z, r24
    3594:	91 83       	std	Z+1, r25	; 0x01
    3596:	a2 83       	std	Z+2, r26	; 0x02
    3598:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    359a:	8e 01       	movw	r16, r28
    359c:	0f 55       	subi	r16, 0x5F	; 95
    359e:	1f 4f       	sbci	r17, 0xFF	; 255
    35a0:	fe 01       	movw	r30, r28
    35a2:	eb 55       	subi	r30, 0x5B	; 91
    35a4:	ff 4f       	sbci	r31, 0xFF	; 255
    35a6:	60 81       	ld	r22, Z
    35a8:	71 81       	ldd	r23, Z+1	; 0x01
    35aa:	82 81       	ldd	r24, Z+2	; 0x02
    35ac:	93 81       	ldd	r25, Z+3	; 0x03
    35ae:	20 e0       	ldi	r18, 0x00	; 0
    35b0:	30 e0       	ldi	r19, 0x00	; 0
    35b2:	4a ef       	ldi	r20, 0xFA	; 250
    35b4:	54 e4       	ldi	r21, 0x44	; 68
    35b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35ba:	dc 01       	movw	r26, r24
    35bc:	cb 01       	movw	r24, r22
    35be:	f8 01       	movw	r30, r16
    35c0:	80 83       	st	Z, r24
    35c2:	91 83       	std	Z+1, r25	; 0x01
    35c4:	a2 83       	std	Z+2, r26	; 0x02
    35c6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35c8:	fe 01       	movw	r30, r28
    35ca:	ef 55       	subi	r30, 0x5F	; 95
    35cc:	ff 4f       	sbci	r31, 0xFF	; 255
    35ce:	60 81       	ld	r22, Z
    35d0:	71 81       	ldd	r23, Z+1	; 0x01
    35d2:	82 81       	ldd	r24, Z+2	; 0x02
    35d4:	93 81       	ldd	r25, Z+3	; 0x03
    35d6:	20 e0       	ldi	r18, 0x00	; 0
    35d8:	30 e0       	ldi	r19, 0x00	; 0
    35da:	40 e8       	ldi	r20, 0x80	; 128
    35dc:	5f e3       	ldi	r21, 0x3F	; 63
    35de:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35e2:	88 23       	and	r24, r24
    35e4:	44 f4       	brge	.+16     	; 0x35f6 <LED_voidShiftRightLeft+0x596>
		__ticks = 1;
    35e6:	fe 01       	movw	r30, r28
    35e8:	e1 56       	subi	r30, 0x61	; 97
    35ea:	ff 4f       	sbci	r31, 0xFF	; 255
    35ec:	81 e0       	ldi	r24, 0x01	; 1
    35ee:	90 e0       	ldi	r25, 0x00	; 0
    35f0:	91 83       	std	Z+1, r25	; 0x01
    35f2:	80 83       	st	Z, r24
    35f4:	64 c0       	rjmp	.+200    	; 0x36be <LED_voidShiftRightLeft+0x65e>
	else if (__tmp > 65535)
    35f6:	fe 01       	movw	r30, r28
    35f8:	ef 55       	subi	r30, 0x5F	; 95
    35fa:	ff 4f       	sbci	r31, 0xFF	; 255
    35fc:	60 81       	ld	r22, Z
    35fe:	71 81       	ldd	r23, Z+1	; 0x01
    3600:	82 81       	ldd	r24, Z+2	; 0x02
    3602:	93 81       	ldd	r25, Z+3	; 0x03
    3604:	20 e0       	ldi	r18, 0x00	; 0
    3606:	3f ef       	ldi	r19, 0xFF	; 255
    3608:	4f e7       	ldi	r20, 0x7F	; 127
    360a:	57 e4       	ldi	r21, 0x47	; 71
    360c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3610:	18 16       	cp	r1, r24
    3612:	0c f0       	brlt	.+2      	; 0x3616 <LED_voidShiftRightLeft+0x5b6>
    3614:	43 c0       	rjmp	.+134    	; 0x369c <LED_voidShiftRightLeft+0x63c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3616:	fe 01       	movw	r30, r28
    3618:	eb 55       	subi	r30, 0x5B	; 91
    361a:	ff 4f       	sbci	r31, 0xFF	; 255
    361c:	60 81       	ld	r22, Z
    361e:	71 81       	ldd	r23, Z+1	; 0x01
    3620:	82 81       	ldd	r24, Z+2	; 0x02
    3622:	93 81       	ldd	r25, Z+3	; 0x03
    3624:	20 e0       	ldi	r18, 0x00	; 0
    3626:	30 e0       	ldi	r19, 0x00	; 0
    3628:	40 e2       	ldi	r20, 0x20	; 32
    362a:	51 e4       	ldi	r21, 0x41	; 65
    362c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3630:	dc 01       	movw	r26, r24
    3632:	cb 01       	movw	r24, r22
    3634:	8e 01       	movw	r16, r28
    3636:	01 56       	subi	r16, 0x61	; 97
    3638:	1f 4f       	sbci	r17, 0xFF	; 255
    363a:	bc 01       	movw	r22, r24
    363c:	cd 01       	movw	r24, r26
    363e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3642:	dc 01       	movw	r26, r24
    3644:	cb 01       	movw	r24, r22
    3646:	f8 01       	movw	r30, r16
    3648:	91 83       	std	Z+1, r25	; 0x01
    364a:	80 83       	st	Z, r24
    364c:	1f c0       	rjmp	.+62     	; 0x368c <LED_voidShiftRightLeft+0x62c>
    364e:	fe 01       	movw	r30, r28
    3650:	e3 56       	subi	r30, 0x63	; 99
    3652:	ff 4f       	sbci	r31, 0xFF	; 255
    3654:	88 ec       	ldi	r24, 0xC8	; 200
    3656:	90 e0       	ldi	r25, 0x00	; 0
    3658:	91 83       	std	Z+1, r25	; 0x01
    365a:	80 83       	st	Z, r24
    365c:	fe 01       	movw	r30, r28
    365e:	e3 56       	subi	r30, 0x63	; 99
    3660:	ff 4f       	sbci	r31, 0xFF	; 255
    3662:	80 81       	ld	r24, Z
    3664:	91 81       	ldd	r25, Z+1	; 0x01
    3666:	01 97       	sbiw	r24, 0x01	; 1
    3668:	f1 f7       	brne	.-4      	; 0x3666 <LED_voidShiftRightLeft+0x606>
    366a:	fe 01       	movw	r30, r28
    366c:	e3 56       	subi	r30, 0x63	; 99
    366e:	ff 4f       	sbci	r31, 0xFF	; 255
    3670:	91 83       	std	Z+1, r25	; 0x01
    3672:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3674:	de 01       	movw	r26, r28
    3676:	a1 56       	subi	r26, 0x61	; 97
    3678:	bf 4f       	sbci	r27, 0xFF	; 255
    367a:	fe 01       	movw	r30, r28
    367c:	e1 56       	subi	r30, 0x61	; 97
    367e:	ff 4f       	sbci	r31, 0xFF	; 255
    3680:	80 81       	ld	r24, Z
    3682:	91 81       	ldd	r25, Z+1	; 0x01
    3684:	01 97       	sbiw	r24, 0x01	; 1
    3686:	11 96       	adiw	r26, 0x01	; 1
    3688:	9c 93       	st	X, r25
    368a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    368c:	fe 01       	movw	r30, r28
    368e:	e1 56       	subi	r30, 0x61	; 97
    3690:	ff 4f       	sbci	r31, 0xFF	; 255
    3692:	80 81       	ld	r24, Z
    3694:	91 81       	ldd	r25, Z+1	; 0x01
    3696:	00 97       	sbiw	r24, 0x00	; 0
    3698:	d1 f6       	brne	.-76     	; 0x364e <LED_voidShiftRightLeft+0x5ee>
    369a:	27 c0       	rjmp	.+78     	; 0x36ea <LED_voidShiftRightLeft+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    369c:	8e 01       	movw	r16, r28
    369e:	01 56       	subi	r16, 0x61	; 97
    36a0:	1f 4f       	sbci	r17, 0xFF	; 255
    36a2:	fe 01       	movw	r30, r28
    36a4:	ef 55       	subi	r30, 0x5F	; 95
    36a6:	ff 4f       	sbci	r31, 0xFF	; 255
    36a8:	60 81       	ld	r22, Z
    36aa:	71 81       	ldd	r23, Z+1	; 0x01
    36ac:	82 81       	ldd	r24, Z+2	; 0x02
    36ae:	93 81       	ldd	r25, Z+3	; 0x03
    36b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36b4:	dc 01       	movw	r26, r24
    36b6:	cb 01       	movw	r24, r22
    36b8:	f8 01       	movw	r30, r16
    36ba:	91 83       	std	Z+1, r25	; 0x01
    36bc:	80 83       	st	Z, r24
    36be:	de 01       	movw	r26, r28
    36c0:	a5 56       	subi	r26, 0x65	; 101
    36c2:	bf 4f       	sbci	r27, 0xFF	; 255
    36c4:	fe 01       	movw	r30, r28
    36c6:	e1 56       	subi	r30, 0x61	; 97
    36c8:	ff 4f       	sbci	r31, 0xFF	; 255
    36ca:	80 81       	ld	r24, Z
    36cc:	91 81       	ldd	r25, Z+1	; 0x01
    36ce:	8d 93       	st	X+, r24
    36d0:	9c 93       	st	X, r25
    36d2:	fe 01       	movw	r30, r28
    36d4:	e5 56       	subi	r30, 0x65	; 101
    36d6:	ff 4f       	sbci	r31, 0xFF	; 255
    36d8:	80 81       	ld	r24, Z
    36da:	91 81       	ldd	r25, Z+1	; 0x01
    36dc:	01 97       	sbiw	r24, 0x01	; 1
    36de:	f1 f7       	brne	.-4      	; 0x36dc <LED_voidShiftRightLeft+0x67c>
    36e0:	fe 01       	movw	r30, r28
    36e2:	e5 56       	subi	r30, 0x65	; 101
    36e4:	ff 4f       	sbci	r31, 0xFF	; 255
    36e6:	91 83       	std	Z+1, r25	; 0x01
    36e8:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    36ea:	fe 01       	movw	r30, r28
    36ec:	ed 52       	subi	r30, 0x2D	; 45
    36ee:	ff 4f       	sbci	r31, 0xFF	; 255
    36f0:	80 81       	ld	r24, Z
    36f2:	60 e0       	ldi	r22, 0x00	; 0
    36f4:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN3, DIO_u8HIGH);
    36f8:	fe 01       	movw	r30, r28
    36fa:	ed 52       	subi	r30, 0x2D	; 45
    36fc:	ff 4f       	sbci	r31, 0xFF	; 255
    36fe:	80 81       	ld	r24, Z
    3700:	63 e0       	ldi	r22, 0x03	; 3
    3702:	41 e0       	ldi	r20, 0x01	; 1
    3704:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    3708:	fe 01       	movw	r30, r28
    370a:	ec 52       	subi	r30, 0x2C	; 44
    370c:	ff 4f       	sbci	r31, 0xFF	; 255
    370e:	80 81       	ld	r24, Z
    3710:	88 2f       	mov	r24, r24
    3712:	90 e0       	ldi	r25, 0x00	; 0
    3714:	a0 e0       	ldi	r26, 0x00	; 0
    3716:	b0 e0       	ldi	r27, 0x00	; 0
    3718:	bc 01       	movw	r22, r24
    371a:	cd 01       	movw	r24, r26
    371c:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    3720:	dc 01       	movw	r26, r24
    3722:	cb 01       	movw	r24, r22
    3724:	fe 01       	movw	r30, r28
    3726:	e9 56       	subi	r30, 0x69	; 105
    3728:	ff 4f       	sbci	r31, 0xFF	; 255
    372a:	80 83       	st	Z, r24
    372c:	91 83       	std	Z+1, r25	; 0x01
    372e:	a2 83       	std	Z+2, r26	; 0x02
    3730:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3732:	8e 01       	movw	r16, r28
    3734:	0d 56       	subi	r16, 0x6D	; 109
    3736:	1f 4f       	sbci	r17, 0xFF	; 255
    3738:	fe 01       	movw	r30, r28
    373a:	e9 56       	subi	r30, 0x69	; 105
    373c:	ff 4f       	sbci	r31, 0xFF	; 255
    373e:	60 81       	ld	r22, Z
    3740:	71 81       	ldd	r23, Z+1	; 0x01
    3742:	82 81       	ldd	r24, Z+2	; 0x02
    3744:	93 81       	ldd	r25, Z+3	; 0x03
    3746:	20 e0       	ldi	r18, 0x00	; 0
    3748:	30 e0       	ldi	r19, 0x00	; 0
    374a:	4a ef       	ldi	r20, 0xFA	; 250
    374c:	54 e4       	ldi	r21, 0x44	; 68
    374e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3752:	dc 01       	movw	r26, r24
    3754:	cb 01       	movw	r24, r22
    3756:	f8 01       	movw	r30, r16
    3758:	80 83       	st	Z, r24
    375a:	91 83       	std	Z+1, r25	; 0x01
    375c:	a2 83       	std	Z+2, r26	; 0x02
    375e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3760:	fe 01       	movw	r30, r28
    3762:	ed 56       	subi	r30, 0x6D	; 109
    3764:	ff 4f       	sbci	r31, 0xFF	; 255
    3766:	60 81       	ld	r22, Z
    3768:	71 81       	ldd	r23, Z+1	; 0x01
    376a:	82 81       	ldd	r24, Z+2	; 0x02
    376c:	93 81       	ldd	r25, Z+3	; 0x03
    376e:	20 e0       	ldi	r18, 0x00	; 0
    3770:	30 e0       	ldi	r19, 0x00	; 0
    3772:	40 e8       	ldi	r20, 0x80	; 128
    3774:	5f e3       	ldi	r21, 0x3F	; 63
    3776:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    377a:	88 23       	and	r24, r24
    377c:	44 f4       	brge	.+16     	; 0x378e <LED_voidShiftRightLeft+0x72e>
		__ticks = 1;
    377e:	fe 01       	movw	r30, r28
    3780:	ef 56       	subi	r30, 0x6F	; 111
    3782:	ff 4f       	sbci	r31, 0xFF	; 255
    3784:	81 e0       	ldi	r24, 0x01	; 1
    3786:	90 e0       	ldi	r25, 0x00	; 0
    3788:	91 83       	std	Z+1, r25	; 0x01
    378a:	80 83       	st	Z, r24
    378c:	64 c0       	rjmp	.+200    	; 0x3856 <LED_voidShiftRightLeft+0x7f6>
	else if (__tmp > 65535)
    378e:	fe 01       	movw	r30, r28
    3790:	ed 56       	subi	r30, 0x6D	; 109
    3792:	ff 4f       	sbci	r31, 0xFF	; 255
    3794:	60 81       	ld	r22, Z
    3796:	71 81       	ldd	r23, Z+1	; 0x01
    3798:	82 81       	ldd	r24, Z+2	; 0x02
    379a:	93 81       	ldd	r25, Z+3	; 0x03
    379c:	20 e0       	ldi	r18, 0x00	; 0
    379e:	3f ef       	ldi	r19, 0xFF	; 255
    37a0:	4f e7       	ldi	r20, 0x7F	; 127
    37a2:	57 e4       	ldi	r21, 0x47	; 71
    37a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    37a8:	18 16       	cp	r1, r24
    37aa:	0c f0       	brlt	.+2      	; 0x37ae <LED_voidShiftRightLeft+0x74e>
    37ac:	43 c0       	rjmp	.+134    	; 0x3834 <LED_voidShiftRightLeft+0x7d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37ae:	fe 01       	movw	r30, r28
    37b0:	e9 56       	subi	r30, 0x69	; 105
    37b2:	ff 4f       	sbci	r31, 0xFF	; 255
    37b4:	60 81       	ld	r22, Z
    37b6:	71 81       	ldd	r23, Z+1	; 0x01
    37b8:	82 81       	ldd	r24, Z+2	; 0x02
    37ba:	93 81       	ldd	r25, Z+3	; 0x03
    37bc:	20 e0       	ldi	r18, 0x00	; 0
    37be:	30 e0       	ldi	r19, 0x00	; 0
    37c0:	40 e2       	ldi	r20, 0x20	; 32
    37c2:	51 e4       	ldi	r21, 0x41	; 65
    37c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37c8:	dc 01       	movw	r26, r24
    37ca:	cb 01       	movw	r24, r22
    37cc:	8e 01       	movw	r16, r28
    37ce:	0f 56       	subi	r16, 0x6F	; 111
    37d0:	1f 4f       	sbci	r17, 0xFF	; 255
    37d2:	bc 01       	movw	r22, r24
    37d4:	cd 01       	movw	r24, r26
    37d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37da:	dc 01       	movw	r26, r24
    37dc:	cb 01       	movw	r24, r22
    37de:	f8 01       	movw	r30, r16
    37e0:	91 83       	std	Z+1, r25	; 0x01
    37e2:	80 83       	st	Z, r24
    37e4:	1f c0       	rjmp	.+62     	; 0x3824 <LED_voidShiftRightLeft+0x7c4>
    37e6:	fe 01       	movw	r30, r28
    37e8:	e1 57       	subi	r30, 0x71	; 113
    37ea:	ff 4f       	sbci	r31, 0xFF	; 255
    37ec:	88 ec       	ldi	r24, 0xC8	; 200
    37ee:	90 e0       	ldi	r25, 0x00	; 0
    37f0:	91 83       	std	Z+1, r25	; 0x01
    37f2:	80 83       	st	Z, r24
    37f4:	fe 01       	movw	r30, r28
    37f6:	e1 57       	subi	r30, 0x71	; 113
    37f8:	ff 4f       	sbci	r31, 0xFF	; 255
    37fa:	80 81       	ld	r24, Z
    37fc:	91 81       	ldd	r25, Z+1	; 0x01
    37fe:	01 97       	sbiw	r24, 0x01	; 1
    3800:	f1 f7       	brne	.-4      	; 0x37fe <LED_voidShiftRightLeft+0x79e>
    3802:	fe 01       	movw	r30, r28
    3804:	e1 57       	subi	r30, 0x71	; 113
    3806:	ff 4f       	sbci	r31, 0xFF	; 255
    3808:	91 83       	std	Z+1, r25	; 0x01
    380a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    380c:	de 01       	movw	r26, r28
    380e:	af 56       	subi	r26, 0x6F	; 111
    3810:	bf 4f       	sbci	r27, 0xFF	; 255
    3812:	fe 01       	movw	r30, r28
    3814:	ef 56       	subi	r30, 0x6F	; 111
    3816:	ff 4f       	sbci	r31, 0xFF	; 255
    3818:	80 81       	ld	r24, Z
    381a:	91 81       	ldd	r25, Z+1	; 0x01
    381c:	01 97       	sbiw	r24, 0x01	; 1
    381e:	11 96       	adiw	r26, 0x01	; 1
    3820:	9c 93       	st	X, r25
    3822:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3824:	fe 01       	movw	r30, r28
    3826:	ef 56       	subi	r30, 0x6F	; 111
    3828:	ff 4f       	sbci	r31, 0xFF	; 255
    382a:	80 81       	ld	r24, Z
    382c:	91 81       	ldd	r25, Z+1	; 0x01
    382e:	00 97       	sbiw	r24, 0x00	; 0
    3830:	d1 f6       	brne	.-76     	; 0x37e6 <LED_voidShiftRightLeft+0x786>
    3832:	27 c0       	rjmp	.+78     	; 0x3882 <LED_voidShiftRightLeft+0x822>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3834:	8e 01       	movw	r16, r28
    3836:	0f 56       	subi	r16, 0x6F	; 111
    3838:	1f 4f       	sbci	r17, 0xFF	; 255
    383a:	fe 01       	movw	r30, r28
    383c:	ed 56       	subi	r30, 0x6D	; 109
    383e:	ff 4f       	sbci	r31, 0xFF	; 255
    3840:	60 81       	ld	r22, Z
    3842:	71 81       	ldd	r23, Z+1	; 0x01
    3844:	82 81       	ldd	r24, Z+2	; 0x02
    3846:	93 81       	ldd	r25, Z+3	; 0x03
    3848:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    384c:	dc 01       	movw	r26, r24
    384e:	cb 01       	movw	r24, r22
    3850:	f8 01       	movw	r30, r16
    3852:	91 83       	std	Z+1, r25	; 0x01
    3854:	80 83       	st	Z, r24
    3856:	de 01       	movw	r26, r28
    3858:	a3 57       	subi	r26, 0x73	; 115
    385a:	bf 4f       	sbci	r27, 0xFF	; 255
    385c:	fe 01       	movw	r30, r28
    385e:	ef 56       	subi	r30, 0x6F	; 111
    3860:	ff 4f       	sbci	r31, 0xFF	; 255
    3862:	80 81       	ld	r24, Z
    3864:	91 81       	ldd	r25, Z+1	; 0x01
    3866:	8d 93       	st	X+, r24
    3868:	9c 93       	st	X, r25
    386a:	fe 01       	movw	r30, r28
    386c:	e3 57       	subi	r30, 0x73	; 115
    386e:	ff 4f       	sbci	r31, 0xFF	; 255
    3870:	80 81       	ld	r24, Z
    3872:	91 81       	ldd	r25, Z+1	; 0x01
    3874:	01 97       	sbiw	r24, 0x01	; 1
    3876:	f1 f7       	brne	.-4      	; 0x3874 <LED_voidShiftRightLeft+0x814>
    3878:	fe 01       	movw	r30, r28
    387a:	e3 57       	subi	r30, 0x73	; 115
    387c:	ff 4f       	sbci	r31, 0xFF	; 255
    387e:	91 83       	std	Z+1, r25	; 0x01
    3880:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    3882:	fe 01       	movw	r30, r28
    3884:	ed 52       	subi	r30, 0x2D	; 45
    3886:	ff 4f       	sbci	r31, 0xFF	; 255
    3888:	80 81       	ld	r24, Z
    388a:	60 e0       	ldi	r22, 0x00	; 0
    388c:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN2, DIO_u8HIGH);
    3890:	fe 01       	movw	r30, r28
    3892:	ed 52       	subi	r30, 0x2D	; 45
    3894:	ff 4f       	sbci	r31, 0xFF	; 255
    3896:	80 81       	ld	r24, Z
    3898:	62 e0       	ldi	r22, 0x02	; 2
    389a:	41 e0       	ldi	r20, 0x01	; 1
    389c:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    38a0:	fe 01       	movw	r30, r28
    38a2:	ec 52       	subi	r30, 0x2C	; 44
    38a4:	ff 4f       	sbci	r31, 0xFF	; 255
    38a6:	80 81       	ld	r24, Z
    38a8:	88 2f       	mov	r24, r24
    38aa:	90 e0       	ldi	r25, 0x00	; 0
    38ac:	a0 e0       	ldi	r26, 0x00	; 0
    38ae:	b0 e0       	ldi	r27, 0x00	; 0
    38b0:	bc 01       	movw	r22, r24
    38b2:	cd 01       	movw	r24, r26
    38b4:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    38b8:	dc 01       	movw	r26, r24
    38ba:	cb 01       	movw	r24, r22
    38bc:	fe 01       	movw	r30, r28
    38be:	e7 57       	subi	r30, 0x77	; 119
    38c0:	ff 4f       	sbci	r31, 0xFF	; 255
    38c2:	80 83       	st	Z, r24
    38c4:	91 83       	std	Z+1, r25	; 0x01
    38c6:	a2 83       	std	Z+2, r26	; 0x02
    38c8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38ca:	8e 01       	movw	r16, r28
    38cc:	0b 57       	subi	r16, 0x7B	; 123
    38ce:	1f 4f       	sbci	r17, 0xFF	; 255
    38d0:	fe 01       	movw	r30, r28
    38d2:	e7 57       	subi	r30, 0x77	; 119
    38d4:	ff 4f       	sbci	r31, 0xFF	; 255
    38d6:	60 81       	ld	r22, Z
    38d8:	71 81       	ldd	r23, Z+1	; 0x01
    38da:	82 81       	ldd	r24, Z+2	; 0x02
    38dc:	93 81       	ldd	r25, Z+3	; 0x03
    38de:	20 e0       	ldi	r18, 0x00	; 0
    38e0:	30 e0       	ldi	r19, 0x00	; 0
    38e2:	4a ef       	ldi	r20, 0xFA	; 250
    38e4:	54 e4       	ldi	r21, 0x44	; 68
    38e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38ea:	dc 01       	movw	r26, r24
    38ec:	cb 01       	movw	r24, r22
    38ee:	f8 01       	movw	r30, r16
    38f0:	80 83       	st	Z, r24
    38f2:	91 83       	std	Z+1, r25	; 0x01
    38f4:	a2 83       	std	Z+2, r26	; 0x02
    38f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38f8:	fe 01       	movw	r30, r28
    38fa:	eb 57       	subi	r30, 0x7B	; 123
    38fc:	ff 4f       	sbci	r31, 0xFF	; 255
    38fe:	60 81       	ld	r22, Z
    3900:	71 81       	ldd	r23, Z+1	; 0x01
    3902:	82 81       	ldd	r24, Z+2	; 0x02
    3904:	93 81       	ldd	r25, Z+3	; 0x03
    3906:	20 e0       	ldi	r18, 0x00	; 0
    3908:	30 e0       	ldi	r19, 0x00	; 0
    390a:	40 e8       	ldi	r20, 0x80	; 128
    390c:	5f e3       	ldi	r21, 0x3F	; 63
    390e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3912:	88 23       	and	r24, r24
    3914:	44 f4       	brge	.+16     	; 0x3926 <LED_voidShiftRightLeft+0x8c6>
		__ticks = 1;
    3916:	fe 01       	movw	r30, r28
    3918:	ed 57       	subi	r30, 0x7D	; 125
    391a:	ff 4f       	sbci	r31, 0xFF	; 255
    391c:	81 e0       	ldi	r24, 0x01	; 1
    391e:	90 e0       	ldi	r25, 0x00	; 0
    3920:	91 83       	std	Z+1, r25	; 0x01
    3922:	80 83       	st	Z, r24
    3924:	64 c0       	rjmp	.+200    	; 0x39ee <LED_voidShiftRightLeft+0x98e>
	else if (__tmp > 65535)
    3926:	fe 01       	movw	r30, r28
    3928:	eb 57       	subi	r30, 0x7B	; 123
    392a:	ff 4f       	sbci	r31, 0xFF	; 255
    392c:	60 81       	ld	r22, Z
    392e:	71 81       	ldd	r23, Z+1	; 0x01
    3930:	82 81       	ldd	r24, Z+2	; 0x02
    3932:	93 81       	ldd	r25, Z+3	; 0x03
    3934:	20 e0       	ldi	r18, 0x00	; 0
    3936:	3f ef       	ldi	r19, 0xFF	; 255
    3938:	4f e7       	ldi	r20, 0x7F	; 127
    393a:	57 e4       	ldi	r21, 0x47	; 71
    393c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3940:	18 16       	cp	r1, r24
    3942:	0c f0       	brlt	.+2      	; 0x3946 <LED_voidShiftRightLeft+0x8e6>
    3944:	43 c0       	rjmp	.+134    	; 0x39cc <LED_voidShiftRightLeft+0x96c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3946:	fe 01       	movw	r30, r28
    3948:	e7 57       	subi	r30, 0x77	; 119
    394a:	ff 4f       	sbci	r31, 0xFF	; 255
    394c:	60 81       	ld	r22, Z
    394e:	71 81       	ldd	r23, Z+1	; 0x01
    3950:	82 81       	ldd	r24, Z+2	; 0x02
    3952:	93 81       	ldd	r25, Z+3	; 0x03
    3954:	20 e0       	ldi	r18, 0x00	; 0
    3956:	30 e0       	ldi	r19, 0x00	; 0
    3958:	40 e2       	ldi	r20, 0x20	; 32
    395a:	51 e4       	ldi	r21, 0x41	; 65
    395c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3960:	dc 01       	movw	r26, r24
    3962:	cb 01       	movw	r24, r22
    3964:	8e 01       	movw	r16, r28
    3966:	0d 57       	subi	r16, 0x7D	; 125
    3968:	1f 4f       	sbci	r17, 0xFF	; 255
    396a:	bc 01       	movw	r22, r24
    396c:	cd 01       	movw	r24, r26
    396e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3972:	dc 01       	movw	r26, r24
    3974:	cb 01       	movw	r24, r22
    3976:	f8 01       	movw	r30, r16
    3978:	91 83       	std	Z+1, r25	; 0x01
    397a:	80 83       	st	Z, r24
    397c:	1f c0       	rjmp	.+62     	; 0x39bc <LED_voidShiftRightLeft+0x95c>
    397e:	fe 01       	movw	r30, r28
    3980:	ef 57       	subi	r30, 0x7F	; 127
    3982:	ff 4f       	sbci	r31, 0xFF	; 255
    3984:	88 ec       	ldi	r24, 0xC8	; 200
    3986:	90 e0       	ldi	r25, 0x00	; 0
    3988:	91 83       	std	Z+1, r25	; 0x01
    398a:	80 83       	st	Z, r24
    398c:	fe 01       	movw	r30, r28
    398e:	ef 57       	subi	r30, 0x7F	; 127
    3990:	ff 4f       	sbci	r31, 0xFF	; 255
    3992:	80 81       	ld	r24, Z
    3994:	91 81       	ldd	r25, Z+1	; 0x01
    3996:	01 97       	sbiw	r24, 0x01	; 1
    3998:	f1 f7       	brne	.-4      	; 0x3996 <LED_voidShiftRightLeft+0x936>
    399a:	fe 01       	movw	r30, r28
    399c:	ef 57       	subi	r30, 0x7F	; 127
    399e:	ff 4f       	sbci	r31, 0xFF	; 255
    39a0:	91 83       	std	Z+1, r25	; 0x01
    39a2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39a4:	de 01       	movw	r26, r28
    39a6:	ad 57       	subi	r26, 0x7D	; 125
    39a8:	bf 4f       	sbci	r27, 0xFF	; 255
    39aa:	fe 01       	movw	r30, r28
    39ac:	ed 57       	subi	r30, 0x7D	; 125
    39ae:	ff 4f       	sbci	r31, 0xFF	; 255
    39b0:	80 81       	ld	r24, Z
    39b2:	91 81       	ldd	r25, Z+1	; 0x01
    39b4:	01 97       	sbiw	r24, 0x01	; 1
    39b6:	11 96       	adiw	r26, 0x01	; 1
    39b8:	9c 93       	st	X, r25
    39ba:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39bc:	fe 01       	movw	r30, r28
    39be:	ed 57       	subi	r30, 0x7D	; 125
    39c0:	ff 4f       	sbci	r31, 0xFF	; 255
    39c2:	80 81       	ld	r24, Z
    39c4:	91 81       	ldd	r25, Z+1	; 0x01
    39c6:	00 97       	sbiw	r24, 0x00	; 0
    39c8:	d1 f6       	brne	.-76     	; 0x397e <LED_voidShiftRightLeft+0x91e>
    39ca:	27 c0       	rjmp	.+78     	; 0x3a1a <LED_voidShiftRightLeft+0x9ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39cc:	8e 01       	movw	r16, r28
    39ce:	0d 57       	subi	r16, 0x7D	; 125
    39d0:	1f 4f       	sbci	r17, 0xFF	; 255
    39d2:	fe 01       	movw	r30, r28
    39d4:	eb 57       	subi	r30, 0x7B	; 123
    39d6:	ff 4f       	sbci	r31, 0xFF	; 255
    39d8:	60 81       	ld	r22, Z
    39da:	71 81       	ldd	r23, Z+1	; 0x01
    39dc:	82 81       	ldd	r24, Z+2	; 0x02
    39de:	93 81       	ldd	r25, Z+3	; 0x03
    39e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39e4:	dc 01       	movw	r26, r24
    39e6:	cb 01       	movw	r24, r22
    39e8:	f8 01       	movw	r30, r16
    39ea:	91 83       	std	Z+1, r25	; 0x01
    39ec:	80 83       	st	Z, r24
    39ee:	de 01       	movw	r26, r28
    39f0:	a1 58       	subi	r26, 0x81	; 129
    39f2:	bf 4f       	sbci	r27, 0xFF	; 255
    39f4:	fe 01       	movw	r30, r28
    39f6:	ed 57       	subi	r30, 0x7D	; 125
    39f8:	ff 4f       	sbci	r31, 0xFF	; 255
    39fa:	80 81       	ld	r24, Z
    39fc:	91 81       	ldd	r25, Z+1	; 0x01
    39fe:	8d 93       	st	X+, r24
    3a00:	9c 93       	st	X, r25
    3a02:	fe 01       	movw	r30, r28
    3a04:	e1 58       	subi	r30, 0x81	; 129
    3a06:	ff 4f       	sbci	r31, 0xFF	; 255
    3a08:	80 81       	ld	r24, Z
    3a0a:	91 81       	ldd	r25, Z+1	; 0x01
    3a0c:	01 97       	sbiw	r24, 0x01	; 1
    3a0e:	f1 f7       	brne	.-4      	; 0x3a0c <LED_voidShiftRightLeft+0x9ac>
    3a10:	fe 01       	movw	r30, r28
    3a12:	e1 58       	subi	r30, 0x81	; 129
    3a14:	ff 4f       	sbci	r31, 0xFF	; 255
    3a16:	91 83       	std	Z+1, r25	; 0x01
    3a18:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    3a1a:	fe 01       	movw	r30, r28
    3a1c:	ed 52       	subi	r30, 0x2D	; 45
    3a1e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a20:	80 81       	ld	r24, Z
    3a22:	60 e0       	ldi	r22, 0x00	; 0
    3a24:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN1, DIO_u8HIGH);
    3a28:	fe 01       	movw	r30, r28
    3a2a:	ed 52       	subi	r30, 0x2D	; 45
    3a2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a2e:	80 81       	ld	r24, Z
    3a30:	61 e0       	ldi	r22, 0x01	; 1
    3a32:	41 e0       	ldi	r20, 0x01	; 1
    3a34:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    3a38:	fe 01       	movw	r30, r28
    3a3a:	ec 52       	subi	r30, 0x2C	; 44
    3a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a3e:	80 81       	ld	r24, Z
    3a40:	88 2f       	mov	r24, r24
    3a42:	90 e0       	ldi	r25, 0x00	; 0
    3a44:	a0 e0       	ldi	r26, 0x00	; 0
    3a46:	b0 e0       	ldi	r27, 0x00	; 0
    3a48:	bc 01       	movw	r22, r24
    3a4a:	cd 01       	movw	r24, r26
    3a4c:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    3a50:	dc 01       	movw	r26, r24
    3a52:	cb 01       	movw	r24, r22
    3a54:	fe 01       	movw	r30, r28
    3a56:	e5 58       	subi	r30, 0x85	; 133
    3a58:	ff 4f       	sbci	r31, 0xFF	; 255
    3a5a:	80 83       	st	Z, r24
    3a5c:	91 83       	std	Z+1, r25	; 0x01
    3a5e:	a2 83       	std	Z+2, r26	; 0x02
    3a60:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a62:	8e 01       	movw	r16, r28
    3a64:	09 58       	subi	r16, 0x89	; 137
    3a66:	1f 4f       	sbci	r17, 0xFF	; 255
    3a68:	fe 01       	movw	r30, r28
    3a6a:	e5 58       	subi	r30, 0x85	; 133
    3a6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a6e:	60 81       	ld	r22, Z
    3a70:	71 81       	ldd	r23, Z+1	; 0x01
    3a72:	82 81       	ldd	r24, Z+2	; 0x02
    3a74:	93 81       	ldd	r25, Z+3	; 0x03
    3a76:	20 e0       	ldi	r18, 0x00	; 0
    3a78:	30 e0       	ldi	r19, 0x00	; 0
    3a7a:	4a ef       	ldi	r20, 0xFA	; 250
    3a7c:	54 e4       	ldi	r21, 0x44	; 68
    3a7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a82:	dc 01       	movw	r26, r24
    3a84:	cb 01       	movw	r24, r22
    3a86:	f8 01       	movw	r30, r16
    3a88:	80 83       	st	Z, r24
    3a8a:	91 83       	std	Z+1, r25	; 0x01
    3a8c:	a2 83       	std	Z+2, r26	; 0x02
    3a8e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a90:	fe 01       	movw	r30, r28
    3a92:	e9 58       	subi	r30, 0x89	; 137
    3a94:	ff 4f       	sbci	r31, 0xFF	; 255
    3a96:	60 81       	ld	r22, Z
    3a98:	71 81       	ldd	r23, Z+1	; 0x01
    3a9a:	82 81       	ldd	r24, Z+2	; 0x02
    3a9c:	93 81       	ldd	r25, Z+3	; 0x03
    3a9e:	20 e0       	ldi	r18, 0x00	; 0
    3aa0:	30 e0       	ldi	r19, 0x00	; 0
    3aa2:	40 e8       	ldi	r20, 0x80	; 128
    3aa4:	5f e3       	ldi	r21, 0x3F	; 63
    3aa6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3aaa:	88 23       	and	r24, r24
    3aac:	44 f4       	brge	.+16     	; 0x3abe <LED_voidShiftRightLeft+0xa5e>
		__ticks = 1;
    3aae:	fe 01       	movw	r30, r28
    3ab0:	eb 58       	subi	r30, 0x8B	; 139
    3ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ab4:	81 e0       	ldi	r24, 0x01	; 1
    3ab6:	90 e0       	ldi	r25, 0x00	; 0
    3ab8:	91 83       	std	Z+1, r25	; 0x01
    3aba:	80 83       	st	Z, r24
    3abc:	64 c0       	rjmp	.+200    	; 0x3b86 <LED_voidShiftRightLeft+0xb26>
	else if (__tmp > 65535)
    3abe:	fe 01       	movw	r30, r28
    3ac0:	e9 58       	subi	r30, 0x89	; 137
    3ac2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac4:	60 81       	ld	r22, Z
    3ac6:	71 81       	ldd	r23, Z+1	; 0x01
    3ac8:	82 81       	ldd	r24, Z+2	; 0x02
    3aca:	93 81       	ldd	r25, Z+3	; 0x03
    3acc:	20 e0       	ldi	r18, 0x00	; 0
    3ace:	3f ef       	ldi	r19, 0xFF	; 255
    3ad0:	4f e7       	ldi	r20, 0x7F	; 127
    3ad2:	57 e4       	ldi	r21, 0x47	; 71
    3ad4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3ad8:	18 16       	cp	r1, r24
    3ada:	0c f0       	brlt	.+2      	; 0x3ade <LED_voidShiftRightLeft+0xa7e>
    3adc:	43 c0       	rjmp	.+134    	; 0x3b64 <LED_voidShiftRightLeft+0xb04>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ade:	fe 01       	movw	r30, r28
    3ae0:	e5 58       	subi	r30, 0x85	; 133
    3ae2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae4:	60 81       	ld	r22, Z
    3ae6:	71 81       	ldd	r23, Z+1	; 0x01
    3ae8:	82 81       	ldd	r24, Z+2	; 0x02
    3aea:	93 81       	ldd	r25, Z+3	; 0x03
    3aec:	20 e0       	ldi	r18, 0x00	; 0
    3aee:	30 e0       	ldi	r19, 0x00	; 0
    3af0:	40 e2       	ldi	r20, 0x20	; 32
    3af2:	51 e4       	ldi	r21, 0x41	; 65
    3af4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3af8:	dc 01       	movw	r26, r24
    3afa:	cb 01       	movw	r24, r22
    3afc:	8e 01       	movw	r16, r28
    3afe:	0b 58       	subi	r16, 0x8B	; 139
    3b00:	1f 4f       	sbci	r17, 0xFF	; 255
    3b02:	bc 01       	movw	r22, r24
    3b04:	cd 01       	movw	r24, r26
    3b06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b0a:	dc 01       	movw	r26, r24
    3b0c:	cb 01       	movw	r24, r22
    3b0e:	f8 01       	movw	r30, r16
    3b10:	91 83       	std	Z+1, r25	; 0x01
    3b12:	80 83       	st	Z, r24
    3b14:	1f c0       	rjmp	.+62     	; 0x3b54 <LED_voidShiftRightLeft+0xaf4>
    3b16:	fe 01       	movw	r30, r28
    3b18:	ed 58       	subi	r30, 0x8D	; 141
    3b1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b1c:	88 ec       	ldi	r24, 0xC8	; 200
    3b1e:	90 e0       	ldi	r25, 0x00	; 0
    3b20:	91 83       	std	Z+1, r25	; 0x01
    3b22:	80 83       	st	Z, r24
    3b24:	fe 01       	movw	r30, r28
    3b26:	ed 58       	subi	r30, 0x8D	; 141
    3b28:	ff 4f       	sbci	r31, 0xFF	; 255
    3b2a:	80 81       	ld	r24, Z
    3b2c:	91 81       	ldd	r25, Z+1	; 0x01
    3b2e:	01 97       	sbiw	r24, 0x01	; 1
    3b30:	f1 f7       	brne	.-4      	; 0x3b2e <LED_voidShiftRightLeft+0xace>
    3b32:	fe 01       	movw	r30, r28
    3b34:	ed 58       	subi	r30, 0x8D	; 141
    3b36:	ff 4f       	sbci	r31, 0xFF	; 255
    3b38:	91 83       	std	Z+1, r25	; 0x01
    3b3a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b3c:	de 01       	movw	r26, r28
    3b3e:	ab 58       	subi	r26, 0x8B	; 139
    3b40:	bf 4f       	sbci	r27, 0xFF	; 255
    3b42:	fe 01       	movw	r30, r28
    3b44:	eb 58       	subi	r30, 0x8B	; 139
    3b46:	ff 4f       	sbci	r31, 0xFF	; 255
    3b48:	80 81       	ld	r24, Z
    3b4a:	91 81       	ldd	r25, Z+1	; 0x01
    3b4c:	01 97       	sbiw	r24, 0x01	; 1
    3b4e:	11 96       	adiw	r26, 0x01	; 1
    3b50:	9c 93       	st	X, r25
    3b52:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b54:	fe 01       	movw	r30, r28
    3b56:	eb 58       	subi	r30, 0x8B	; 139
    3b58:	ff 4f       	sbci	r31, 0xFF	; 255
    3b5a:	80 81       	ld	r24, Z
    3b5c:	91 81       	ldd	r25, Z+1	; 0x01
    3b5e:	00 97       	sbiw	r24, 0x00	; 0
    3b60:	d1 f6       	brne	.-76     	; 0x3b16 <LED_voidShiftRightLeft+0xab6>
    3b62:	27 c0       	rjmp	.+78     	; 0x3bb2 <LED_voidShiftRightLeft+0xb52>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b64:	8e 01       	movw	r16, r28
    3b66:	0b 58       	subi	r16, 0x8B	; 139
    3b68:	1f 4f       	sbci	r17, 0xFF	; 255
    3b6a:	fe 01       	movw	r30, r28
    3b6c:	e9 58       	subi	r30, 0x89	; 137
    3b6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b70:	60 81       	ld	r22, Z
    3b72:	71 81       	ldd	r23, Z+1	; 0x01
    3b74:	82 81       	ldd	r24, Z+2	; 0x02
    3b76:	93 81       	ldd	r25, Z+3	; 0x03
    3b78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b7c:	dc 01       	movw	r26, r24
    3b7e:	cb 01       	movw	r24, r22
    3b80:	f8 01       	movw	r30, r16
    3b82:	91 83       	std	Z+1, r25	; 0x01
    3b84:	80 83       	st	Z, r24
    3b86:	de 01       	movw	r26, r28
    3b88:	af 58       	subi	r26, 0x8F	; 143
    3b8a:	bf 4f       	sbci	r27, 0xFF	; 255
    3b8c:	fe 01       	movw	r30, r28
    3b8e:	eb 58       	subi	r30, 0x8B	; 139
    3b90:	ff 4f       	sbci	r31, 0xFF	; 255
    3b92:	80 81       	ld	r24, Z
    3b94:	91 81       	ldd	r25, Z+1	; 0x01
    3b96:	8d 93       	st	X+, r24
    3b98:	9c 93       	st	X, r25
    3b9a:	fe 01       	movw	r30, r28
    3b9c:	ef 58       	subi	r30, 0x8F	; 143
    3b9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3ba0:	80 81       	ld	r24, Z
    3ba2:	91 81       	ldd	r25, Z+1	; 0x01
    3ba4:	01 97       	sbiw	r24, 0x01	; 1
    3ba6:	f1 f7       	brne	.-4      	; 0x3ba4 <LED_voidShiftRightLeft+0xb44>
    3ba8:	fe 01       	movw	r30, r28
    3baa:	ef 58       	subi	r30, 0x8F	; 143
    3bac:	ff 4f       	sbci	r31, 0xFF	; 255
    3bae:	91 83       	std	Z+1, r25	; 0x01
    3bb0:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    3bb2:	fe 01       	movw	r30, r28
    3bb4:	ed 52       	subi	r30, 0x2D	; 45
    3bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3bb8:	80 81       	ld	r24, Z
    3bba:	60 e0       	ldi	r22, 0x00	; 0
    3bbc:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN0, DIO_u8HIGH);
    3bc0:	fe 01       	movw	r30, r28
    3bc2:	ed 52       	subi	r30, 0x2D	; 45
    3bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    3bc6:	80 81       	ld	r24, Z
    3bc8:	60 e0       	ldi	r22, 0x00	; 0
    3bca:	41 e0       	ldi	r20, 0x01	; 1
    3bcc:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    3bd0:	fe 01       	movw	r30, r28
    3bd2:	ec 52       	subi	r30, 0x2C	; 44
    3bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd6:	80 81       	ld	r24, Z
    3bd8:	88 2f       	mov	r24, r24
    3bda:	90 e0       	ldi	r25, 0x00	; 0
    3bdc:	a0 e0       	ldi	r26, 0x00	; 0
    3bde:	b0 e0       	ldi	r27, 0x00	; 0
    3be0:	bc 01       	movw	r22, r24
    3be2:	cd 01       	movw	r24, r26
    3be4:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    3be8:	dc 01       	movw	r26, r24
    3bea:	cb 01       	movw	r24, r22
    3bec:	fe 01       	movw	r30, r28
    3bee:	e3 59       	subi	r30, 0x93	; 147
    3bf0:	ff 4f       	sbci	r31, 0xFF	; 255
    3bf2:	80 83       	st	Z, r24
    3bf4:	91 83       	std	Z+1, r25	; 0x01
    3bf6:	a2 83       	std	Z+2, r26	; 0x02
    3bf8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bfa:	8e 01       	movw	r16, r28
    3bfc:	07 59       	subi	r16, 0x97	; 151
    3bfe:	1f 4f       	sbci	r17, 0xFF	; 255
    3c00:	fe 01       	movw	r30, r28
    3c02:	e3 59       	subi	r30, 0x93	; 147
    3c04:	ff 4f       	sbci	r31, 0xFF	; 255
    3c06:	60 81       	ld	r22, Z
    3c08:	71 81       	ldd	r23, Z+1	; 0x01
    3c0a:	82 81       	ldd	r24, Z+2	; 0x02
    3c0c:	93 81       	ldd	r25, Z+3	; 0x03
    3c0e:	20 e0       	ldi	r18, 0x00	; 0
    3c10:	30 e0       	ldi	r19, 0x00	; 0
    3c12:	4a ef       	ldi	r20, 0xFA	; 250
    3c14:	54 e4       	ldi	r21, 0x44	; 68
    3c16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c1a:	dc 01       	movw	r26, r24
    3c1c:	cb 01       	movw	r24, r22
    3c1e:	f8 01       	movw	r30, r16
    3c20:	80 83       	st	Z, r24
    3c22:	91 83       	std	Z+1, r25	; 0x01
    3c24:	a2 83       	std	Z+2, r26	; 0x02
    3c26:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c28:	fe 01       	movw	r30, r28
    3c2a:	e7 59       	subi	r30, 0x97	; 151
    3c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c2e:	60 81       	ld	r22, Z
    3c30:	71 81       	ldd	r23, Z+1	; 0x01
    3c32:	82 81       	ldd	r24, Z+2	; 0x02
    3c34:	93 81       	ldd	r25, Z+3	; 0x03
    3c36:	20 e0       	ldi	r18, 0x00	; 0
    3c38:	30 e0       	ldi	r19, 0x00	; 0
    3c3a:	40 e8       	ldi	r20, 0x80	; 128
    3c3c:	5f e3       	ldi	r21, 0x3F	; 63
    3c3e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c42:	88 23       	and	r24, r24
    3c44:	44 f4       	brge	.+16     	; 0x3c56 <LED_voidShiftRightLeft+0xbf6>
		__ticks = 1;
    3c46:	fe 01       	movw	r30, r28
    3c48:	e9 59       	subi	r30, 0x99	; 153
    3c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c4c:	81 e0       	ldi	r24, 0x01	; 1
    3c4e:	90 e0       	ldi	r25, 0x00	; 0
    3c50:	91 83       	std	Z+1, r25	; 0x01
    3c52:	80 83       	st	Z, r24
    3c54:	64 c0       	rjmp	.+200    	; 0x3d1e <LED_voidShiftRightLeft+0xcbe>
	else if (__tmp > 65535)
    3c56:	fe 01       	movw	r30, r28
    3c58:	e7 59       	subi	r30, 0x97	; 151
    3c5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c5c:	60 81       	ld	r22, Z
    3c5e:	71 81       	ldd	r23, Z+1	; 0x01
    3c60:	82 81       	ldd	r24, Z+2	; 0x02
    3c62:	93 81       	ldd	r25, Z+3	; 0x03
    3c64:	20 e0       	ldi	r18, 0x00	; 0
    3c66:	3f ef       	ldi	r19, 0xFF	; 255
    3c68:	4f e7       	ldi	r20, 0x7F	; 127
    3c6a:	57 e4       	ldi	r21, 0x47	; 71
    3c6c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c70:	18 16       	cp	r1, r24
    3c72:	0c f0       	brlt	.+2      	; 0x3c76 <LED_voidShiftRightLeft+0xc16>
    3c74:	43 c0       	rjmp	.+134    	; 0x3cfc <LED_voidShiftRightLeft+0xc9c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c76:	fe 01       	movw	r30, r28
    3c78:	e3 59       	subi	r30, 0x93	; 147
    3c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c7c:	60 81       	ld	r22, Z
    3c7e:	71 81       	ldd	r23, Z+1	; 0x01
    3c80:	82 81       	ldd	r24, Z+2	; 0x02
    3c82:	93 81       	ldd	r25, Z+3	; 0x03
    3c84:	20 e0       	ldi	r18, 0x00	; 0
    3c86:	30 e0       	ldi	r19, 0x00	; 0
    3c88:	40 e2       	ldi	r20, 0x20	; 32
    3c8a:	51 e4       	ldi	r21, 0x41	; 65
    3c8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c90:	dc 01       	movw	r26, r24
    3c92:	cb 01       	movw	r24, r22
    3c94:	8e 01       	movw	r16, r28
    3c96:	09 59       	subi	r16, 0x99	; 153
    3c98:	1f 4f       	sbci	r17, 0xFF	; 255
    3c9a:	bc 01       	movw	r22, r24
    3c9c:	cd 01       	movw	r24, r26
    3c9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ca2:	dc 01       	movw	r26, r24
    3ca4:	cb 01       	movw	r24, r22
    3ca6:	f8 01       	movw	r30, r16
    3ca8:	91 83       	std	Z+1, r25	; 0x01
    3caa:	80 83       	st	Z, r24
    3cac:	1f c0       	rjmp	.+62     	; 0x3cec <LED_voidShiftRightLeft+0xc8c>
    3cae:	fe 01       	movw	r30, r28
    3cb0:	eb 59       	subi	r30, 0x9B	; 155
    3cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb4:	88 ec       	ldi	r24, 0xC8	; 200
    3cb6:	90 e0       	ldi	r25, 0x00	; 0
    3cb8:	91 83       	std	Z+1, r25	; 0x01
    3cba:	80 83       	st	Z, r24
    3cbc:	fe 01       	movw	r30, r28
    3cbe:	eb 59       	subi	r30, 0x9B	; 155
    3cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    3cc2:	80 81       	ld	r24, Z
    3cc4:	91 81       	ldd	r25, Z+1	; 0x01
    3cc6:	01 97       	sbiw	r24, 0x01	; 1
    3cc8:	f1 f7       	brne	.-4      	; 0x3cc6 <LED_voidShiftRightLeft+0xc66>
    3cca:	fe 01       	movw	r30, r28
    3ccc:	eb 59       	subi	r30, 0x9B	; 155
    3cce:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd0:	91 83       	std	Z+1, r25	; 0x01
    3cd2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cd4:	de 01       	movw	r26, r28
    3cd6:	a9 59       	subi	r26, 0x99	; 153
    3cd8:	bf 4f       	sbci	r27, 0xFF	; 255
    3cda:	fe 01       	movw	r30, r28
    3cdc:	e9 59       	subi	r30, 0x99	; 153
    3cde:	ff 4f       	sbci	r31, 0xFF	; 255
    3ce0:	80 81       	ld	r24, Z
    3ce2:	91 81       	ldd	r25, Z+1	; 0x01
    3ce4:	01 97       	sbiw	r24, 0x01	; 1
    3ce6:	11 96       	adiw	r26, 0x01	; 1
    3ce8:	9c 93       	st	X, r25
    3cea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cec:	fe 01       	movw	r30, r28
    3cee:	e9 59       	subi	r30, 0x99	; 153
    3cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    3cf2:	80 81       	ld	r24, Z
    3cf4:	91 81       	ldd	r25, Z+1	; 0x01
    3cf6:	00 97       	sbiw	r24, 0x00	; 0
    3cf8:	d1 f6       	brne	.-76     	; 0x3cae <LED_voidShiftRightLeft+0xc4e>
    3cfa:	27 c0       	rjmp	.+78     	; 0x3d4a <LED_voidShiftRightLeft+0xcea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cfc:	8e 01       	movw	r16, r28
    3cfe:	09 59       	subi	r16, 0x99	; 153
    3d00:	1f 4f       	sbci	r17, 0xFF	; 255
    3d02:	fe 01       	movw	r30, r28
    3d04:	e7 59       	subi	r30, 0x97	; 151
    3d06:	ff 4f       	sbci	r31, 0xFF	; 255
    3d08:	60 81       	ld	r22, Z
    3d0a:	71 81       	ldd	r23, Z+1	; 0x01
    3d0c:	82 81       	ldd	r24, Z+2	; 0x02
    3d0e:	93 81       	ldd	r25, Z+3	; 0x03
    3d10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d14:	dc 01       	movw	r26, r24
    3d16:	cb 01       	movw	r24, r22
    3d18:	f8 01       	movw	r30, r16
    3d1a:	91 83       	std	Z+1, r25	; 0x01
    3d1c:	80 83       	st	Z, r24
    3d1e:	de 01       	movw	r26, r28
    3d20:	ad 59       	subi	r26, 0x9D	; 157
    3d22:	bf 4f       	sbci	r27, 0xFF	; 255
    3d24:	fe 01       	movw	r30, r28
    3d26:	e9 59       	subi	r30, 0x99	; 153
    3d28:	ff 4f       	sbci	r31, 0xFF	; 255
    3d2a:	80 81       	ld	r24, Z
    3d2c:	91 81       	ldd	r25, Z+1	; 0x01
    3d2e:	8d 93       	st	X+, r24
    3d30:	9c 93       	st	X, r25
    3d32:	fe 01       	movw	r30, r28
    3d34:	ed 59       	subi	r30, 0x9D	; 157
    3d36:	ff 4f       	sbci	r31, 0xFF	; 255
    3d38:	80 81       	ld	r24, Z
    3d3a:	91 81       	ldd	r25, Z+1	; 0x01
    3d3c:	01 97       	sbiw	r24, 0x01	; 1
    3d3e:	f1 f7       	brne	.-4      	; 0x3d3c <LED_voidShiftRightLeft+0xcdc>
    3d40:	fe 01       	movw	r30, r28
    3d42:	ed 59       	subi	r30, 0x9D	; 157
    3d44:	ff 4f       	sbci	r31, 0xFF	; 255
    3d46:	91 83       	std	Z+1, r25	; 0x01
    3d48:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    3d4a:	fe 01       	movw	r30, r28
    3d4c:	ed 52       	subi	r30, 0x2D	; 45
    3d4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d50:	80 81       	ld	r24, Z
    3d52:	60 e0       	ldi	r22, 0x00	; 0
    3d54:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>


	/*     	Shift Left		*/

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN1, DIO_u8HIGH);
    3d58:	fe 01       	movw	r30, r28
    3d5a:	ed 52       	subi	r30, 0x2D	; 45
    3d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d5e:	80 81       	ld	r24, Z
    3d60:	61 e0       	ldi	r22, 0x01	; 1
    3d62:	41 e0       	ldi	r20, 0x01	; 1
    3d64:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    3d68:	fe 01       	movw	r30, r28
    3d6a:	ec 52       	subi	r30, 0x2C	; 44
    3d6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d6e:	80 81       	ld	r24, Z
    3d70:	88 2f       	mov	r24, r24
    3d72:	90 e0       	ldi	r25, 0x00	; 0
    3d74:	a0 e0       	ldi	r26, 0x00	; 0
    3d76:	b0 e0       	ldi	r27, 0x00	; 0
    3d78:	bc 01       	movw	r22, r24
    3d7a:	cd 01       	movw	r24, r26
    3d7c:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    3d80:	dc 01       	movw	r26, r24
    3d82:	cb 01       	movw	r24, r22
    3d84:	fe 01       	movw	r30, r28
    3d86:	e1 5a       	subi	r30, 0xA1	; 161
    3d88:	ff 4f       	sbci	r31, 0xFF	; 255
    3d8a:	80 83       	st	Z, r24
    3d8c:	91 83       	std	Z+1, r25	; 0x01
    3d8e:	a2 83       	std	Z+2, r26	; 0x02
    3d90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d92:	8e 01       	movw	r16, r28
    3d94:	05 5a       	subi	r16, 0xA5	; 165
    3d96:	1f 4f       	sbci	r17, 0xFF	; 255
    3d98:	fe 01       	movw	r30, r28
    3d9a:	e1 5a       	subi	r30, 0xA1	; 161
    3d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d9e:	60 81       	ld	r22, Z
    3da0:	71 81       	ldd	r23, Z+1	; 0x01
    3da2:	82 81       	ldd	r24, Z+2	; 0x02
    3da4:	93 81       	ldd	r25, Z+3	; 0x03
    3da6:	20 e0       	ldi	r18, 0x00	; 0
    3da8:	30 e0       	ldi	r19, 0x00	; 0
    3daa:	4a ef       	ldi	r20, 0xFA	; 250
    3dac:	54 e4       	ldi	r21, 0x44	; 68
    3dae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3db2:	dc 01       	movw	r26, r24
    3db4:	cb 01       	movw	r24, r22
    3db6:	f8 01       	movw	r30, r16
    3db8:	80 83       	st	Z, r24
    3dba:	91 83       	std	Z+1, r25	; 0x01
    3dbc:	a2 83       	std	Z+2, r26	; 0x02
    3dbe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3dc0:	fe 01       	movw	r30, r28
    3dc2:	e5 5a       	subi	r30, 0xA5	; 165
    3dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    3dc6:	60 81       	ld	r22, Z
    3dc8:	71 81       	ldd	r23, Z+1	; 0x01
    3dca:	82 81       	ldd	r24, Z+2	; 0x02
    3dcc:	93 81       	ldd	r25, Z+3	; 0x03
    3dce:	20 e0       	ldi	r18, 0x00	; 0
    3dd0:	30 e0       	ldi	r19, 0x00	; 0
    3dd2:	40 e8       	ldi	r20, 0x80	; 128
    3dd4:	5f e3       	ldi	r21, 0x3F	; 63
    3dd6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3dda:	88 23       	and	r24, r24
    3ddc:	44 f4       	brge	.+16     	; 0x3dee <LED_voidShiftRightLeft+0xd8e>
		__ticks = 1;
    3dde:	fe 01       	movw	r30, r28
    3de0:	e7 5a       	subi	r30, 0xA7	; 167
    3de2:	ff 4f       	sbci	r31, 0xFF	; 255
    3de4:	81 e0       	ldi	r24, 0x01	; 1
    3de6:	90 e0       	ldi	r25, 0x00	; 0
    3de8:	91 83       	std	Z+1, r25	; 0x01
    3dea:	80 83       	st	Z, r24
    3dec:	64 c0       	rjmp	.+200    	; 0x3eb6 <LED_voidShiftRightLeft+0xe56>
	else if (__tmp > 65535)
    3dee:	fe 01       	movw	r30, r28
    3df0:	e5 5a       	subi	r30, 0xA5	; 165
    3df2:	ff 4f       	sbci	r31, 0xFF	; 255
    3df4:	60 81       	ld	r22, Z
    3df6:	71 81       	ldd	r23, Z+1	; 0x01
    3df8:	82 81       	ldd	r24, Z+2	; 0x02
    3dfa:	93 81       	ldd	r25, Z+3	; 0x03
    3dfc:	20 e0       	ldi	r18, 0x00	; 0
    3dfe:	3f ef       	ldi	r19, 0xFF	; 255
    3e00:	4f e7       	ldi	r20, 0x7F	; 127
    3e02:	57 e4       	ldi	r21, 0x47	; 71
    3e04:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3e08:	18 16       	cp	r1, r24
    3e0a:	0c f0       	brlt	.+2      	; 0x3e0e <LED_voidShiftRightLeft+0xdae>
    3e0c:	43 c0       	rjmp	.+134    	; 0x3e94 <LED_voidShiftRightLeft+0xe34>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e0e:	fe 01       	movw	r30, r28
    3e10:	e1 5a       	subi	r30, 0xA1	; 161
    3e12:	ff 4f       	sbci	r31, 0xFF	; 255
    3e14:	60 81       	ld	r22, Z
    3e16:	71 81       	ldd	r23, Z+1	; 0x01
    3e18:	82 81       	ldd	r24, Z+2	; 0x02
    3e1a:	93 81       	ldd	r25, Z+3	; 0x03
    3e1c:	20 e0       	ldi	r18, 0x00	; 0
    3e1e:	30 e0       	ldi	r19, 0x00	; 0
    3e20:	40 e2       	ldi	r20, 0x20	; 32
    3e22:	51 e4       	ldi	r21, 0x41	; 65
    3e24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e28:	dc 01       	movw	r26, r24
    3e2a:	cb 01       	movw	r24, r22
    3e2c:	8e 01       	movw	r16, r28
    3e2e:	07 5a       	subi	r16, 0xA7	; 167
    3e30:	1f 4f       	sbci	r17, 0xFF	; 255
    3e32:	bc 01       	movw	r22, r24
    3e34:	cd 01       	movw	r24, r26
    3e36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e3a:	dc 01       	movw	r26, r24
    3e3c:	cb 01       	movw	r24, r22
    3e3e:	f8 01       	movw	r30, r16
    3e40:	91 83       	std	Z+1, r25	; 0x01
    3e42:	80 83       	st	Z, r24
    3e44:	1f c0       	rjmp	.+62     	; 0x3e84 <LED_voidShiftRightLeft+0xe24>
    3e46:	fe 01       	movw	r30, r28
    3e48:	e9 5a       	subi	r30, 0xA9	; 169
    3e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e4c:	88 ec       	ldi	r24, 0xC8	; 200
    3e4e:	90 e0       	ldi	r25, 0x00	; 0
    3e50:	91 83       	std	Z+1, r25	; 0x01
    3e52:	80 83       	st	Z, r24
    3e54:	fe 01       	movw	r30, r28
    3e56:	e9 5a       	subi	r30, 0xA9	; 169
    3e58:	ff 4f       	sbci	r31, 0xFF	; 255
    3e5a:	80 81       	ld	r24, Z
    3e5c:	91 81       	ldd	r25, Z+1	; 0x01
    3e5e:	01 97       	sbiw	r24, 0x01	; 1
    3e60:	f1 f7       	brne	.-4      	; 0x3e5e <LED_voidShiftRightLeft+0xdfe>
    3e62:	fe 01       	movw	r30, r28
    3e64:	e9 5a       	subi	r30, 0xA9	; 169
    3e66:	ff 4f       	sbci	r31, 0xFF	; 255
    3e68:	91 83       	std	Z+1, r25	; 0x01
    3e6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e6c:	de 01       	movw	r26, r28
    3e6e:	a7 5a       	subi	r26, 0xA7	; 167
    3e70:	bf 4f       	sbci	r27, 0xFF	; 255
    3e72:	fe 01       	movw	r30, r28
    3e74:	e7 5a       	subi	r30, 0xA7	; 167
    3e76:	ff 4f       	sbci	r31, 0xFF	; 255
    3e78:	80 81       	ld	r24, Z
    3e7a:	91 81       	ldd	r25, Z+1	; 0x01
    3e7c:	01 97       	sbiw	r24, 0x01	; 1
    3e7e:	11 96       	adiw	r26, 0x01	; 1
    3e80:	9c 93       	st	X, r25
    3e82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e84:	fe 01       	movw	r30, r28
    3e86:	e7 5a       	subi	r30, 0xA7	; 167
    3e88:	ff 4f       	sbci	r31, 0xFF	; 255
    3e8a:	80 81       	ld	r24, Z
    3e8c:	91 81       	ldd	r25, Z+1	; 0x01
    3e8e:	00 97       	sbiw	r24, 0x00	; 0
    3e90:	d1 f6       	brne	.-76     	; 0x3e46 <LED_voidShiftRightLeft+0xde6>
    3e92:	27 c0       	rjmp	.+78     	; 0x3ee2 <LED_voidShiftRightLeft+0xe82>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e94:	8e 01       	movw	r16, r28
    3e96:	07 5a       	subi	r16, 0xA7	; 167
    3e98:	1f 4f       	sbci	r17, 0xFF	; 255
    3e9a:	fe 01       	movw	r30, r28
    3e9c:	e5 5a       	subi	r30, 0xA5	; 165
    3e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3ea0:	60 81       	ld	r22, Z
    3ea2:	71 81       	ldd	r23, Z+1	; 0x01
    3ea4:	82 81       	ldd	r24, Z+2	; 0x02
    3ea6:	93 81       	ldd	r25, Z+3	; 0x03
    3ea8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3eac:	dc 01       	movw	r26, r24
    3eae:	cb 01       	movw	r24, r22
    3eb0:	f8 01       	movw	r30, r16
    3eb2:	91 83       	std	Z+1, r25	; 0x01
    3eb4:	80 83       	st	Z, r24
    3eb6:	de 01       	movw	r26, r28
    3eb8:	ab 5a       	subi	r26, 0xAB	; 171
    3eba:	bf 4f       	sbci	r27, 0xFF	; 255
    3ebc:	fe 01       	movw	r30, r28
    3ebe:	e7 5a       	subi	r30, 0xA7	; 167
    3ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ec2:	80 81       	ld	r24, Z
    3ec4:	91 81       	ldd	r25, Z+1	; 0x01
    3ec6:	8d 93       	st	X+, r24
    3ec8:	9c 93       	st	X, r25
    3eca:	fe 01       	movw	r30, r28
    3ecc:	eb 5a       	subi	r30, 0xAB	; 171
    3ece:	ff 4f       	sbci	r31, 0xFF	; 255
    3ed0:	80 81       	ld	r24, Z
    3ed2:	91 81       	ldd	r25, Z+1	; 0x01
    3ed4:	01 97       	sbiw	r24, 0x01	; 1
    3ed6:	f1 f7       	brne	.-4      	; 0x3ed4 <LED_voidShiftRightLeft+0xe74>
    3ed8:	fe 01       	movw	r30, r28
    3eda:	eb 5a       	subi	r30, 0xAB	; 171
    3edc:	ff 4f       	sbci	r31, 0xFF	; 255
    3ede:	91 83       	std	Z+1, r25	; 0x01
    3ee0:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    3ee2:	fe 01       	movw	r30, r28
    3ee4:	ed 52       	subi	r30, 0x2D	; 45
    3ee6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee8:	80 81       	ld	r24, Z
    3eea:	60 e0       	ldi	r22, 0x00	; 0
    3eec:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN2, DIO_u8HIGH);
    3ef0:	fe 01       	movw	r30, r28
    3ef2:	ed 52       	subi	r30, 0x2D	; 45
    3ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ef6:	80 81       	ld	r24, Z
    3ef8:	62 e0       	ldi	r22, 0x02	; 2
    3efa:	41 e0       	ldi	r20, 0x01	; 1
    3efc:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    3f00:	fe 01       	movw	r30, r28
    3f02:	ec 52       	subi	r30, 0x2C	; 44
    3f04:	ff 4f       	sbci	r31, 0xFF	; 255
    3f06:	80 81       	ld	r24, Z
    3f08:	88 2f       	mov	r24, r24
    3f0a:	90 e0       	ldi	r25, 0x00	; 0
    3f0c:	a0 e0       	ldi	r26, 0x00	; 0
    3f0e:	b0 e0       	ldi	r27, 0x00	; 0
    3f10:	bc 01       	movw	r22, r24
    3f12:	cd 01       	movw	r24, r26
    3f14:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    3f18:	dc 01       	movw	r26, r24
    3f1a:	cb 01       	movw	r24, r22
    3f1c:	fe 01       	movw	r30, r28
    3f1e:	ef 5a       	subi	r30, 0xAF	; 175
    3f20:	ff 4f       	sbci	r31, 0xFF	; 255
    3f22:	80 83       	st	Z, r24
    3f24:	91 83       	std	Z+1, r25	; 0x01
    3f26:	a2 83       	std	Z+2, r26	; 0x02
    3f28:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f2a:	8e 01       	movw	r16, r28
    3f2c:	03 5b       	subi	r16, 0xB3	; 179
    3f2e:	1f 4f       	sbci	r17, 0xFF	; 255
    3f30:	fe 01       	movw	r30, r28
    3f32:	ef 5a       	subi	r30, 0xAF	; 175
    3f34:	ff 4f       	sbci	r31, 0xFF	; 255
    3f36:	60 81       	ld	r22, Z
    3f38:	71 81       	ldd	r23, Z+1	; 0x01
    3f3a:	82 81       	ldd	r24, Z+2	; 0x02
    3f3c:	93 81       	ldd	r25, Z+3	; 0x03
    3f3e:	20 e0       	ldi	r18, 0x00	; 0
    3f40:	30 e0       	ldi	r19, 0x00	; 0
    3f42:	4a ef       	ldi	r20, 0xFA	; 250
    3f44:	54 e4       	ldi	r21, 0x44	; 68
    3f46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f4a:	dc 01       	movw	r26, r24
    3f4c:	cb 01       	movw	r24, r22
    3f4e:	f8 01       	movw	r30, r16
    3f50:	80 83       	st	Z, r24
    3f52:	91 83       	std	Z+1, r25	; 0x01
    3f54:	a2 83       	std	Z+2, r26	; 0x02
    3f56:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f58:	fe 01       	movw	r30, r28
    3f5a:	e3 5b       	subi	r30, 0xB3	; 179
    3f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f5e:	60 81       	ld	r22, Z
    3f60:	71 81       	ldd	r23, Z+1	; 0x01
    3f62:	82 81       	ldd	r24, Z+2	; 0x02
    3f64:	93 81       	ldd	r25, Z+3	; 0x03
    3f66:	20 e0       	ldi	r18, 0x00	; 0
    3f68:	30 e0       	ldi	r19, 0x00	; 0
    3f6a:	40 e8       	ldi	r20, 0x80	; 128
    3f6c:	5f e3       	ldi	r21, 0x3F	; 63
    3f6e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3f72:	88 23       	and	r24, r24
    3f74:	44 f4       	brge	.+16     	; 0x3f86 <LED_voidShiftRightLeft+0xf26>
		__ticks = 1;
    3f76:	fe 01       	movw	r30, r28
    3f78:	e5 5b       	subi	r30, 0xB5	; 181
    3f7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f7c:	81 e0       	ldi	r24, 0x01	; 1
    3f7e:	90 e0       	ldi	r25, 0x00	; 0
    3f80:	91 83       	std	Z+1, r25	; 0x01
    3f82:	80 83       	st	Z, r24
    3f84:	64 c0       	rjmp	.+200    	; 0x404e <LED_voidShiftRightLeft+0xfee>
	else if (__tmp > 65535)
    3f86:	fe 01       	movw	r30, r28
    3f88:	e3 5b       	subi	r30, 0xB3	; 179
    3f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f8c:	60 81       	ld	r22, Z
    3f8e:	71 81       	ldd	r23, Z+1	; 0x01
    3f90:	82 81       	ldd	r24, Z+2	; 0x02
    3f92:	93 81       	ldd	r25, Z+3	; 0x03
    3f94:	20 e0       	ldi	r18, 0x00	; 0
    3f96:	3f ef       	ldi	r19, 0xFF	; 255
    3f98:	4f e7       	ldi	r20, 0x7F	; 127
    3f9a:	57 e4       	ldi	r21, 0x47	; 71
    3f9c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3fa0:	18 16       	cp	r1, r24
    3fa2:	0c f0       	brlt	.+2      	; 0x3fa6 <LED_voidShiftRightLeft+0xf46>
    3fa4:	43 c0       	rjmp	.+134    	; 0x402c <LED_voidShiftRightLeft+0xfcc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fa6:	fe 01       	movw	r30, r28
    3fa8:	ef 5a       	subi	r30, 0xAF	; 175
    3faa:	ff 4f       	sbci	r31, 0xFF	; 255
    3fac:	60 81       	ld	r22, Z
    3fae:	71 81       	ldd	r23, Z+1	; 0x01
    3fb0:	82 81       	ldd	r24, Z+2	; 0x02
    3fb2:	93 81       	ldd	r25, Z+3	; 0x03
    3fb4:	20 e0       	ldi	r18, 0x00	; 0
    3fb6:	30 e0       	ldi	r19, 0x00	; 0
    3fb8:	40 e2       	ldi	r20, 0x20	; 32
    3fba:	51 e4       	ldi	r21, 0x41	; 65
    3fbc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3fc0:	dc 01       	movw	r26, r24
    3fc2:	cb 01       	movw	r24, r22
    3fc4:	8e 01       	movw	r16, r28
    3fc6:	05 5b       	subi	r16, 0xB5	; 181
    3fc8:	1f 4f       	sbci	r17, 0xFF	; 255
    3fca:	bc 01       	movw	r22, r24
    3fcc:	cd 01       	movw	r24, r26
    3fce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fd2:	dc 01       	movw	r26, r24
    3fd4:	cb 01       	movw	r24, r22
    3fd6:	f8 01       	movw	r30, r16
    3fd8:	91 83       	std	Z+1, r25	; 0x01
    3fda:	80 83       	st	Z, r24
    3fdc:	1f c0       	rjmp	.+62     	; 0x401c <LED_voidShiftRightLeft+0xfbc>
    3fde:	fe 01       	movw	r30, r28
    3fe0:	e7 5b       	subi	r30, 0xB7	; 183
    3fe2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe4:	88 ec       	ldi	r24, 0xC8	; 200
    3fe6:	90 e0       	ldi	r25, 0x00	; 0
    3fe8:	91 83       	std	Z+1, r25	; 0x01
    3fea:	80 83       	st	Z, r24
    3fec:	fe 01       	movw	r30, r28
    3fee:	e7 5b       	subi	r30, 0xB7	; 183
    3ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff2:	80 81       	ld	r24, Z
    3ff4:	91 81       	ldd	r25, Z+1	; 0x01
    3ff6:	01 97       	sbiw	r24, 0x01	; 1
    3ff8:	f1 f7       	brne	.-4      	; 0x3ff6 <LED_voidShiftRightLeft+0xf96>
    3ffa:	fe 01       	movw	r30, r28
    3ffc:	e7 5b       	subi	r30, 0xB7	; 183
    3ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    4000:	91 83       	std	Z+1, r25	; 0x01
    4002:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4004:	de 01       	movw	r26, r28
    4006:	a5 5b       	subi	r26, 0xB5	; 181
    4008:	bf 4f       	sbci	r27, 0xFF	; 255
    400a:	fe 01       	movw	r30, r28
    400c:	e5 5b       	subi	r30, 0xB5	; 181
    400e:	ff 4f       	sbci	r31, 0xFF	; 255
    4010:	80 81       	ld	r24, Z
    4012:	91 81       	ldd	r25, Z+1	; 0x01
    4014:	01 97       	sbiw	r24, 0x01	; 1
    4016:	11 96       	adiw	r26, 0x01	; 1
    4018:	9c 93       	st	X, r25
    401a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    401c:	fe 01       	movw	r30, r28
    401e:	e5 5b       	subi	r30, 0xB5	; 181
    4020:	ff 4f       	sbci	r31, 0xFF	; 255
    4022:	80 81       	ld	r24, Z
    4024:	91 81       	ldd	r25, Z+1	; 0x01
    4026:	00 97       	sbiw	r24, 0x00	; 0
    4028:	d1 f6       	brne	.-76     	; 0x3fde <LED_voidShiftRightLeft+0xf7e>
    402a:	27 c0       	rjmp	.+78     	; 0x407a <LED_voidShiftRightLeft+0x101a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    402c:	8e 01       	movw	r16, r28
    402e:	05 5b       	subi	r16, 0xB5	; 181
    4030:	1f 4f       	sbci	r17, 0xFF	; 255
    4032:	fe 01       	movw	r30, r28
    4034:	e3 5b       	subi	r30, 0xB3	; 179
    4036:	ff 4f       	sbci	r31, 0xFF	; 255
    4038:	60 81       	ld	r22, Z
    403a:	71 81       	ldd	r23, Z+1	; 0x01
    403c:	82 81       	ldd	r24, Z+2	; 0x02
    403e:	93 81       	ldd	r25, Z+3	; 0x03
    4040:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4044:	dc 01       	movw	r26, r24
    4046:	cb 01       	movw	r24, r22
    4048:	f8 01       	movw	r30, r16
    404a:	91 83       	std	Z+1, r25	; 0x01
    404c:	80 83       	st	Z, r24
    404e:	de 01       	movw	r26, r28
    4050:	a9 5b       	subi	r26, 0xB9	; 185
    4052:	bf 4f       	sbci	r27, 0xFF	; 255
    4054:	fe 01       	movw	r30, r28
    4056:	e5 5b       	subi	r30, 0xB5	; 181
    4058:	ff 4f       	sbci	r31, 0xFF	; 255
    405a:	80 81       	ld	r24, Z
    405c:	91 81       	ldd	r25, Z+1	; 0x01
    405e:	8d 93       	st	X+, r24
    4060:	9c 93       	st	X, r25
    4062:	fe 01       	movw	r30, r28
    4064:	e9 5b       	subi	r30, 0xB9	; 185
    4066:	ff 4f       	sbci	r31, 0xFF	; 255
    4068:	80 81       	ld	r24, Z
    406a:	91 81       	ldd	r25, Z+1	; 0x01
    406c:	01 97       	sbiw	r24, 0x01	; 1
    406e:	f1 f7       	brne	.-4      	; 0x406c <LED_voidShiftRightLeft+0x100c>
    4070:	fe 01       	movw	r30, r28
    4072:	e9 5b       	subi	r30, 0xB9	; 185
    4074:	ff 4f       	sbci	r31, 0xFF	; 255
    4076:	91 83       	std	Z+1, r25	; 0x01
    4078:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    407a:	fe 01       	movw	r30, r28
    407c:	ed 52       	subi	r30, 0x2D	; 45
    407e:	ff 4f       	sbci	r31, 0xFF	; 255
    4080:	80 81       	ld	r24, Z
    4082:	60 e0       	ldi	r22, 0x00	; 0
    4084:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN3, DIO_u8HIGH);
    4088:	fe 01       	movw	r30, r28
    408a:	ed 52       	subi	r30, 0x2D	; 45
    408c:	ff 4f       	sbci	r31, 0xFF	; 255
    408e:	80 81       	ld	r24, Z
    4090:	63 e0       	ldi	r22, 0x03	; 3
    4092:	41 e0       	ldi	r20, 0x01	; 1
    4094:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    4098:	fe 01       	movw	r30, r28
    409a:	ec 52       	subi	r30, 0x2C	; 44
    409c:	ff 4f       	sbci	r31, 0xFF	; 255
    409e:	80 81       	ld	r24, Z
    40a0:	88 2f       	mov	r24, r24
    40a2:	90 e0       	ldi	r25, 0x00	; 0
    40a4:	a0 e0       	ldi	r26, 0x00	; 0
    40a6:	b0 e0       	ldi	r27, 0x00	; 0
    40a8:	bc 01       	movw	r22, r24
    40aa:	cd 01       	movw	r24, r26
    40ac:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    40b0:	dc 01       	movw	r26, r24
    40b2:	cb 01       	movw	r24, r22
    40b4:	fe 01       	movw	r30, r28
    40b6:	ed 5b       	subi	r30, 0xBD	; 189
    40b8:	ff 4f       	sbci	r31, 0xFF	; 255
    40ba:	80 83       	st	Z, r24
    40bc:	91 83       	std	Z+1, r25	; 0x01
    40be:	a2 83       	std	Z+2, r26	; 0x02
    40c0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40c2:	8e 01       	movw	r16, r28
    40c4:	01 5c       	subi	r16, 0xC1	; 193
    40c6:	1f 4f       	sbci	r17, 0xFF	; 255
    40c8:	fe 01       	movw	r30, r28
    40ca:	ed 5b       	subi	r30, 0xBD	; 189
    40cc:	ff 4f       	sbci	r31, 0xFF	; 255
    40ce:	60 81       	ld	r22, Z
    40d0:	71 81       	ldd	r23, Z+1	; 0x01
    40d2:	82 81       	ldd	r24, Z+2	; 0x02
    40d4:	93 81       	ldd	r25, Z+3	; 0x03
    40d6:	20 e0       	ldi	r18, 0x00	; 0
    40d8:	30 e0       	ldi	r19, 0x00	; 0
    40da:	4a ef       	ldi	r20, 0xFA	; 250
    40dc:	54 e4       	ldi	r21, 0x44	; 68
    40de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40e2:	dc 01       	movw	r26, r24
    40e4:	cb 01       	movw	r24, r22
    40e6:	f8 01       	movw	r30, r16
    40e8:	80 83       	st	Z, r24
    40ea:	91 83       	std	Z+1, r25	; 0x01
    40ec:	a2 83       	std	Z+2, r26	; 0x02
    40ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    40f0:	fe 01       	movw	r30, r28
    40f2:	ff 96       	adiw	r30, 0x3f	; 63
    40f4:	60 81       	ld	r22, Z
    40f6:	71 81       	ldd	r23, Z+1	; 0x01
    40f8:	82 81       	ldd	r24, Z+2	; 0x02
    40fa:	93 81       	ldd	r25, Z+3	; 0x03
    40fc:	20 e0       	ldi	r18, 0x00	; 0
    40fe:	30 e0       	ldi	r19, 0x00	; 0
    4100:	40 e8       	ldi	r20, 0x80	; 128
    4102:	5f e3       	ldi	r21, 0x3F	; 63
    4104:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4108:	88 23       	and	r24, r24
    410a:	2c f4       	brge	.+10     	; 0x4116 <LED_voidShiftRightLeft+0x10b6>
		__ticks = 1;
    410c:	81 e0       	ldi	r24, 0x01	; 1
    410e:	90 e0       	ldi	r25, 0x00	; 0
    4110:	9e af       	std	Y+62, r25	; 0x3e
    4112:	8d af       	std	Y+61, r24	; 0x3d
    4114:	46 c0       	rjmp	.+140    	; 0x41a2 <LED_voidShiftRightLeft+0x1142>
	else if (__tmp > 65535)
    4116:	fe 01       	movw	r30, r28
    4118:	ff 96       	adiw	r30, 0x3f	; 63
    411a:	60 81       	ld	r22, Z
    411c:	71 81       	ldd	r23, Z+1	; 0x01
    411e:	82 81       	ldd	r24, Z+2	; 0x02
    4120:	93 81       	ldd	r25, Z+3	; 0x03
    4122:	20 e0       	ldi	r18, 0x00	; 0
    4124:	3f ef       	ldi	r19, 0xFF	; 255
    4126:	4f e7       	ldi	r20, 0x7F	; 127
    4128:	57 e4       	ldi	r21, 0x47	; 71
    412a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    412e:	18 16       	cp	r1, r24
    4130:	64 f5       	brge	.+88     	; 0x418a <LED_voidShiftRightLeft+0x112a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4132:	fe 01       	movw	r30, r28
    4134:	ed 5b       	subi	r30, 0xBD	; 189
    4136:	ff 4f       	sbci	r31, 0xFF	; 255
    4138:	60 81       	ld	r22, Z
    413a:	71 81       	ldd	r23, Z+1	; 0x01
    413c:	82 81       	ldd	r24, Z+2	; 0x02
    413e:	93 81       	ldd	r25, Z+3	; 0x03
    4140:	20 e0       	ldi	r18, 0x00	; 0
    4142:	30 e0       	ldi	r19, 0x00	; 0
    4144:	40 e2       	ldi	r20, 0x20	; 32
    4146:	51 e4       	ldi	r21, 0x41	; 65
    4148:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    414c:	dc 01       	movw	r26, r24
    414e:	cb 01       	movw	r24, r22
    4150:	bc 01       	movw	r22, r24
    4152:	cd 01       	movw	r24, r26
    4154:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4158:	dc 01       	movw	r26, r24
    415a:	cb 01       	movw	r24, r22
    415c:	9e af       	std	Y+62, r25	; 0x3e
    415e:	8d af       	std	Y+61, r24	; 0x3d
    4160:	0f c0       	rjmp	.+30     	; 0x4180 <LED_voidShiftRightLeft+0x1120>
    4162:	88 ec       	ldi	r24, 0xC8	; 200
    4164:	90 e0       	ldi	r25, 0x00	; 0
    4166:	9c af       	std	Y+60, r25	; 0x3c
    4168:	8b af       	std	Y+59, r24	; 0x3b
    416a:	8b ad       	ldd	r24, Y+59	; 0x3b
    416c:	9c ad       	ldd	r25, Y+60	; 0x3c
    416e:	01 97       	sbiw	r24, 0x01	; 1
    4170:	f1 f7       	brne	.-4      	; 0x416e <LED_voidShiftRightLeft+0x110e>
    4172:	9c af       	std	Y+60, r25	; 0x3c
    4174:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4176:	8d ad       	ldd	r24, Y+61	; 0x3d
    4178:	9e ad       	ldd	r25, Y+62	; 0x3e
    417a:	01 97       	sbiw	r24, 0x01	; 1
    417c:	9e af       	std	Y+62, r25	; 0x3e
    417e:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4180:	8d ad       	ldd	r24, Y+61	; 0x3d
    4182:	9e ad       	ldd	r25, Y+62	; 0x3e
    4184:	00 97       	sbiw	r24, 0x00	; 0
    4186:	69 f7       	brne	.-38     	; 0x4162 <LED_voidShiftRightLeft+0x1102>
    4188:	16 c0       	rjmp	.+44     	; 0x41b6 <LED_voidShiftRightLeft+0x1156>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    418a:	fe 01       	movw	r30, r28
    418c:	ff 96       	adiw	r30, 0x3f	; 63
    418e:	60 81       	ld	r22, Z
    4190:	71 81       	ldd	r23, Z+1	; 0x01
    4192:	82 81       	ldd	r24, Z+2	; 0x02
    4194:	93 81       	ldd	r25, Z+3	; 0x03
    4196:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    419a:	dc 01       	movw	r26, r24
    419c:	cb 01       	movw	r24, r22
    419e:	9e af       	std	Y+62, r25	; 0x3e
    41a0:	8d af       	std	Y+61, r24	; 0x3d
    41a2:	8d ad       	ldd	r24, Y+61	; 0x3d
    41a4:	9e ad       	ldd	r25, Y+62	; 0x3e
    41a6:	9a af       	std	Y+58, r25	; 0x3a
    41a8:	89 af       	std	Y+57, r24	; 0x39
    41aa:	89 ad       	ldd	r24, Y+57	; 0x39
    41ac:	9a ad       	ldd	r25, Y+58	; 0x3a
    41ae:	01 97       	sbiw	r24, 0x01	; 1
    41b0:	f1 f7       	brne	.-4      	; 0x41ae <LED_voidShiftRightLeft+0x114e>
    41b2:	9a af       	std	Y+58, r25	; 0x3a
    41b4:	89 af       	std	Y+57, r24	; 0x39
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    41b6:	fe 01       	movw	r30, r28
    41b8:	ed 52       	subi	r30, 0x2D	; 45
    41ba:	ff 4f       	sbci	r31, 0xFF	; 255
    41bc:	80 81       	ld	r24, Z
    41be:	60 e0       	ldi	r22, 0x00	; 0
    41c0:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN4, DIO_u8HIGH);
    41c4:	fe 01       	movw	r30, r28
    41c6:	ed 52       	subi	r30, 0x2D	; 45
    41c8:	ff 4f       	sbci	r31, 0xFF	; 255
    41ca:	80 81       	ld	r24, Z
    41cc:	64 e0       	ldi	r22, 0x04	; 4
    41ce:	41 e0       	ldi	r20, 0x01	; 1
    41d0:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    41d4:	fe 01       	movw	r30, r28
    41d6:	ec 52       	subi	r30, 0x2C	; 44
    41d8:	ff 4f       	sbci	r31, 0xFF	; 255
    41da:	80 81       	ld	r24, Z
    41dc:	88 2f       	mov	r24, r24
    41de:	90 e0       	ldi	r25, 0x00	; 0
    41e0:	a0 e0       	ldi	r26, 0x00	; 0
    41e2:	b0 e0       	ldi	r27, 0x00	; 0
    41e4:	bc 01       	movw	r22, r24
    41e6:	cd 01       	movw	r24, r26
    41e8:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    41ec:	dc 01       	movw	r26, r24
    41ee:	cb 01       	movw	r24, r22
    41f0:	8d ab       	std	Y+53, r24	; 0x35
    41f2:	9e ab       	std	Y+54, r25	; 0x36
    41f4:	af ab       	std	Y+55, r26	; 0x37
    41f6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41f8:	6d a9       	ldd	r22, Y+53	; 0x35
    41fa:	7e a9       	ldd	r23, Y+54	; 0x36
    41fc:	8f a9       	ldd	r24, Y+55	; 0x37
    41fe:	98 ad       	ldd	r25, Y+56	; 0x38
    4200:	20 e0       	ldi	r18, 0x00	; 0
    4202:	30 e0       	ldi	r19, 0x00	; 0
    4204:	4a ef       	ldi	r20, 0xFA	; 250
    4206:	54 e4       	ldi	r21, 0x44	; 68
    4208:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    420c:	dc 01       	movw	r26, r24
    420e:	cb 01       	movw	r24, r22
    4210:	89 ab       	std	Y+49, r24	; 0x31
    4212:	9a ab       	std	Y+50, r25	; 0x32
    4214:	ab ab       	std	Y+51, r26	; 0x33
    4216:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4218:	69 a9       	ldd	r22, Y+49	; 0x31
    421a:	7a a9       	ldd	r23, Y+50	; 0x32
    421c:	8b a9       	ldd	r24, Y+51	; 0x33
    421e:	9c a9       	ldd	r25, Y+52	; 0x34
    4220:	20 e0       	ldi	r18, 0x00	; 0
    4222:	30 e0       	ldi	r19, 0x00	; 0
    4224:	40 e8       	ldi	r20, 0x80	; 128
    4226:	5f e3       	ldi	r21, 0x3F	; 63
    4228:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    422c:	88 23       	and	r24, r24
    422e:	2c f4       	brge	.+10     	; 0x423a <LED_voidShiftRightLeft+0x11da>
		__ticks = 1;
    4230:	81 e0       	ldi	r24, 0x01	; 1
    4232:	90 e0       	ldi	r25, 0x00	; 0
    4234:	98 ab       	std	Y+48, r25	; 0x30
    4236:	8f a7       	std	Y+47, r24	; 0x2f
    4238:	3f c0       	rjmp	.+126    	; 0x42b8 <LED_voidShiftRightLeft+0x1258>
	else if (__tmp > 65535)
    423a:	69 a9       	ldd	r22, Y+49	; 0x31
    423c:	7a a9       	ldd	r23, Y+50	; 0x32
    423e:	8b a9       	ldd	r24, Y+51	; 0x33
    4240:	9c a9       	ldd	r25, Y+52	; 0x34
    4242:	20 e0       	ldi	r18, 0x00	; 0
    4244:	3f ef       	ldi	r19, 0xFF	; 255
    4246:	4f e7       	ldi	r20, 0x7F	; 127
    4248:	57 e4       	ldi	r21, 0x47	; 71
    424a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    424e:	18 16       	cp	r1, r24
    4250:	4c f5       	brge	.+82     	; 0x42a4 <LED_voidShiftRightLeft+0x1244>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4252:	6d a9       	ldd	r22, Y+53	; 0x35
    4254:	7e a9       	ldd	r23, Y+54	; 0x36
    4256:	8f a9       	ldd	r24, Y+55	; 0x37
    4258:	98 ad       	ldd	r25, Y+56	; 0x38
    425a:	20 e0       	ldi	r18, 0x00	; 0
    425c:	30 e0       	ldi	r19, 0x00	; 0
    425e:	40 e2       	ldi	r20, 0x20	; 32
    4260:	51 e4       	ldi	r21, 0x41	; 65
    4262:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4266:	dc 01       	movw	r26, r24
    4268:	cb 01       	movw	r24, r22
    426a:	bc 01       	movw	r22, r24
    426c:	cd 01       	movw	r24, r26
    426e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4272:	dc 01       	movw	r26, r24
    4274:	cb 01       	movw	r24, r22
    4276:	98 ab       	std	Y+48, r25	; 0x30
    4278:	8f a7       	std	Y+47, r24	; 0x2f
    427a:	0f c0       	rjmp	.+30     	; 0x429a <LED_voidShiftRightLeft+0x123a>
    427c:	88 ec       	ldi	r24, 0xC8	; 200
    427e:	90 e0       	ldi	r25, 0x00	; 0
    4280:	9e a7       	std	Y+46, r25	; 0x2e
    4282:	8d a7       	std	Y+45, r24	; 0x2d
    4284:	8d a5       	ldd	r24, Y+45	; 0x2d
    4286:	9e a5       	ldd	r25, Y+46	; 0x2e
    4288:	01 97       	sbiw	r24, 0x01	; 1
    428a:	f1 f7       	brne	.-4      	; 0x4288 <LED_voidShiftRightLeft+0x1228>
    428c:	9e a7       	std	Y+46, r25	; 0x2e
    428e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4290:	8f a5       	ldd	r24, Y+47	; 0x2f
    4292:	98 a9       	ldd	r25, Y+48	; 0x30
    4294:	01 97       	sbiw	r24, 0x01	; 1
    4296:	98 ab       	std	Y+48, r25	; 0x30
    4298:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    429a:	8f a5       	ldd	r24, Y+47	; 0x2f
    429c:	98 a9       	ldd	r25, Y+48	; 0x30
    429e:	00 97       	sbiw	r24, 0x00	; 0
    42a0:	69 f7       	brne	.-38     	; 0x427c <LED_voidShiftRightLeft+0x121c>
    42a2:	14 c0       	rjmp	.+40     	; 0x42cc <LED_voidShiftRightLeft+0x126c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42a4:	69 a9       	ldd	r22, Y+49	; 0x31
    42a6:	7a a9       	ldd	r23, Y+50	; 0x32
    42a8:	8b a9       	ldd	r24, Y+51	; 0x33
    42aa:	9c a9       	ldd	r25, Y+52	; 0x34
    42ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42b0:	dc 01       	movw	r26, r24
    42b2:	cb 01       	movw	r24, r22
    42b4:	98 ab       	std	Y+48, r25	; 0x30
    42b6:	8f a7       	std	Y+47, r24	; 0x2f
    42b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    42ba:	98 a9       	ldd	r25, Y+48	; 0x30
    42bc:	9c a7       	std	Y+44, r25	; 0x2c
    42be:	8b a7       	std	Y+43, r24	; 0x2b
    42c0:	8b a5       	ldd	r24, Y+43	; 0x2b
    42c2:	9c a5       	ldd	r25, Y+44	; 0x2c
    42c4:	01 97       	sbiw	r24, 0x01	; 1
    42c6:	f1 f7       	brne	.-4      	; 0x42c4 <LED_voidShiftRightLeft+0x1264>
    42c8:	9c a7       	std	Y+44, r25	; 0x2c
    42ca:	8b a7       	std	Y+43, r24	; 0x2b
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    42cc:	fe 01       	movw	r30, r28
    42ce:	ed 52       	subi	r30, 0x2D	; 45
    42d0:	ff 4f       	sbci	r31, 0xFF	; 255
    42d2:	80 81       	ld	r24, Z
    42d4:	60 e0       	ldi	r22, 0x00	; 0
    42d6:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN5, DIO_u8HIGH);
    42da:	fe 01       	movw	r30, r28
    42dc:	ed 52       	subi	r30, 0x2D	; 45
    42de:	ff 4f       	sbci	r31, 0xFF	; 255
    42e0:	80 81       	ld	r24, Z
    42e2:	65 e0       	ldi	r22, 0x05	; 5
    42e4:	41 e0       	ldi	r20, 0x01	; 1
    42e6:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    42ea:	fe 01       	movw	r30, r28
    42ec:	ec 52       	subi	r30, 0x2C	; 44
    42ee:	ff 4f       	sbci	r31, 0xFF	; 255
    42f0:	80 81       	ld	r24, Z
    42f2:	88 2f       	mov	r24, r24
    42f4:	90 e0       	ldi	r25, 0x00	; 0
    42f6:	a0 e0       	ldi	r26, 0x00	; 0
    42f8:	b0 e0       	ldi	r27, 0x00	; 0
    42fa:	bc 01       	movw	r22, r24
    42fc:	cd 01       	movw	r24, r26
    42fe:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    4302:	dc 01       	movw	r26, r24
    4304:	cb 01       	movw	r24, r22
    4306:	8f a3       	std	Y+39, r24	; 0x27
    4308:	98 a7       	std	Y+40, r25	; 0x28
    430a:	a9 a7       	std	Y+41, r26	; 0x29
    430c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    430e:	6f a1       	ldd	r22, Y+39	; 0x27
    4310:	78 a5       	ldd	r23, Y+40	; 0x28
    4312:	89 a5       	ldd	r24, Y+41	; 0x29
    4314:	9a a5       	ldd	r25, Y+42	; 0x2a
    4316:	20 e0       	ldi	r18, 0x00	; 0
    4318:	30 e0       	ldi	r19, 0x00	; 0
    431a:	4a ef       	ldi	r20, 0xFA	; 250
    431c:	54 e4       	ldi	r21, 0x44	; 68
    431e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4322:	dc 01       	movw	r26, r24
    4324:	cb 01       	movw	r24, r22
    4326:	8b a3       	std	Y+35, r24	; 0x23
    4328:	9c a3       	std	Y+36, r25	; 0x24
    432a:	ad a3       	std	Y+37, r26	; 0x25
    432c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    432e:	6b a1       	ldd	r22, Y+35	; 0x23
    4330:	7c a1       	ldd	r23, Y+36	; 0x24
    4332:	8d a1       	ldd	r24, Y+37	; 0x25
    4334:	9e a1       	ldd	r25, Y+38	; 0x26
    4336:	20 e0       	ldi	r18, 0x00	; 0
    4338:	30 e0       	ldi	r19, 0x00	; 0
    433a:	40 e8       	ldi	r20, 0x80	; 128
    433c:	5f e3       	ldi	r21, 0x3F	; 63
    433e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4342:	88 23       	and	r24, r24
    4344:	2c f4       	brge	.+10     	; 0x4350 <LED_voidShiftRightLeft+0x12f0>
		__ticks = 1;
    4346:	81 e0       	ldi	r24, 0x01	; 1
    4348:	90 e0       	ldi	r25, 0x00	; 0
    434a:	9a a3       	std	Y+34, r25	; 0x22
    434c:	89 a3       	std	Y+33, r24	; 0x21
    434e:	3f c0       	rjmp	.+126    	; 0x43ce <LED_voidShiftRightLeft+0x136e>
	else if (__tmp > 65535)
    4350:	6b a1       	ldd	r22, Y+35	; 0x23
    4352:	7c a1       	ldd	r23, Y+36	; 0x24
    4354:	8d a1       	ldd	r24, Y+37	; 0x25
    4356:	9e a1       	ldd	r25, Y+38	; 0x26
    4358:	20 e0       	ldi	r18, 0x00	; 0
    435a:	3f ef       	ldi	r19, 0xFF	; 255
    435c:	4f e7       	ldi	r20, 0x7F	; 127
    435e:	57 e4       	ldi	r21, 0x47	; 71
    4360:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4364:	18 16       	cp	r1, r24
    4366:	4c f5       	brge	.+82     	; 0x43ba <LED_voidShiftRightLeft+0x135a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4368:	6f a1       	ldd	r22, Y+39	; 0x27
    436a:	78 a5       	ldd	r23, Y+40	; 0x28
    436c:	89 a5       	ldd	r24, Y+41	; 0x29
    436e:	9a a5       	ldd	r25, Y+42	; 0x2a
    4370:	20 e0       	ldi	r18, 0x00	; 0
    4372:	30 e0       	ldi	r19, 0x00	; 0
    4374:	40 e2       	ldi	r20, 0x20	; 32
    4376:	51 e4       	ldi	r21, 0x41	; 65
    4378:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    437c:	dc 01       	movw	r26, r24
    437e:	cb 01       	movw	r24, r22
    4380:	bc 01       	movw	r22, r24
    4382:	cd 01       	movw	r24, r26
    4384:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4388:	dc 01       	movw	r26, r24
    438a:	cb 01       	movw	r24, r22
    438c:	9a a3       	std	Y+34, r25	; 0x22
    438e:	89 a3       	std	Y+33, r24	; 0x21
    4390:	0f c0       	rjmp	.+30     	; 0x43b0 <LED_voidShiftRightLeft+0x1350>
    4392:	88 ec       	ldi	r24, 0xC8	; 200
    4394:	90 e0       	ldi	r25, 0x00	; 0
    4396:	98 a3       	std	Y+32, r25	; 0x20
    4398:	8f 8f       	std	Y+31, r24	; 0x1f
    439a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    439c:	98 a1       	ldd	r25, Y+32	; 0x20
    439e:	01 97       	sbiw	r24, 0x01	; 1
    43a0:	f1 f7       	brne	.-4      	; 0x439e <LED_voidShiftRightLeft+0x133e>
    43a2:	98 a3       	std	Y+32, r25	; 0x20
    43a4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43a6:	89 a1       	ldd	r24, Y+33	; 0x21
    43a8:	9a a1       	ldd	r25, Y+34	; 0x22
    43aa:	01 97       	sbiw	r24, 0x01	; 1
    43ac:	9a a3       	std	Y+34, r25	; 0x22
    43ae:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43b0:	89 a1       	ldd	r24, Y+33	; 0x21
    43b2:	9a a1       	ldd	r25, Y+34	; 0x22
    43b4:	00 97       	sbiw	r24, 0x00	; 0
    43b6:	69 f7       	brne	.-38     	; 0x4392 <LED_voidShiftRightLeft+0x1332>
    43b8:	14 c0       	rjmp	.+40     	; 0x43e2 <LED_voidShiftRightLeft+0x1382>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43ba:	6b a1       	ldd	r22, Y+35	; 0x23
    43bc:	7c a1       	ldd	r23, Y+36	; 0x24
    43be:	8d a1       	ldd	r24, Y+37	; 0x25
    43c0:	9e a1       	ldd	r25, Y+38	; 0x26
    43c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43c6:	dc 01       	movw	r26, r24
    43c8:	cb 01       	movw	r24, r22
    43ca:	9a a3       	std	Y+34, r25	; 0x22
    43cc:	89 a3       	std	Y+33, r24	; 0x21
    43ce:	89 a1       	ldd	r24, Y+33	; 0x21
    43d0:	9a a1       	ldd	r25, Y+34	; 0x22
    43d2:	9e 8f       	std	Y+30, r25	; 0x1e
    43d4:	8d 8f       	std	Y+29, r24	; 0x1d
    43d6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    43d8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    43da:	01 97       	sbiw	r24, 0x01	; 1
    43dc:	f1 f7       	brne	.-4      	; 0x43da <LED_voidShiftRightLeft+0x137a>
    43de:	9e 8f       	std	Y+30, r25	; 0x1e
    43e0:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    43e2:	fe 01       	movw	r30, r28
    43e4:	ed 52       	subi	r30, 0x2D	; 45
    43e6:	ff 4f       	sbci	r31, 0xFF	; 255
    43e8:	80 81       	ld	r24, Z
    43ea:	60 e0       	ldi	r22, 0x00	; 0
    43ec:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN6, DIO_u8HIGH);
    43f0:	fe 01       	movw	r30, r28
    43f2:	ed 52       	subi	r30, 0x2D	; 45
    43f4:	ff 4f       	sbci	r31, 0xFF	; 255
    43f6:	80 81       	ld	r24, Z
    43f8:	66 e0       	ldi	r22, 0x06	; 6
    43fa:	41 e0       	ldi	r20, 0x01	; 1
    43fc:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    4400:	fe 01       	movw	r30, r28
    4402:	ec 52       	subi	r30, 0x2C	; 44
    4404:	ff 4f       	sbci	r31, 0xFF	; 255
    4406:	80 81       	ld	r24, Z
    4408:	88 2f       	mov	r24, r24
    440a:	90 e0       	ldi	r25, 0x00	; 0
    440c:	a0 e0       	ldi	r26, 0x00	; 0
    440e:	b0 e0       	ldi	r27, 0x00	; 0
    4410:	bc 01       	movw	r22, r24
    4412:	cd 01       	movw	r24, r26
    4414:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    4418:	dc 01       	movw	r26, r24
    441a:	cb 01       	movw	r24, r22
    441c:	89 8f       	std	Y+25, r24	; 0x19
    441e:	9a 8f       	std	Y+26, r25	; 0x1a
    4420:	ab 8f       	std	Y+27, r26	; 0x1b
    4422:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4424:	69 8d       	ldd	r22, Y+25	; 0x19
    4426:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4428:	8b 8d       	ldd	r24, Y+27	; 0x1b
    442a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    442c:	20 e0       	ldi	r18, 0x00	; 0
    442e:	30 e0       	ldi	r19, 0x00	; 0
    4430:	4a ef       	ldi	r20, 0xFA	; 250
    4432:	54 e4       	ldi	r21, 0x44	; 68
    4434:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4438:	dc 01       	movw	r26, r24
    443a:	cb 01       	movw	r24, r22
    443c:	8d 8b       	std	Y+21, r24	; 0x15
    443e:	9e 8b       	std	Y+22, r25	; 0x16
    4440:	af 8b       	std	Y+23, r26	; 0x17
    4442:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4444:	6d 89       	ldd	r22, Y+21	; 0x15
    4446:	7e 89       	ldd	r23, Y+22	; 0x16
    4448:	8f 89       	ldd	r24, Y+23	; 0x17
    444a:	98 8d       	ldd	r25, Y+24	; 0x18
    444c:	20 e0       	ldi	r18, 0x00	; 0
    444e:	30 e0       	ldi	r19, 0x00	; 0
    4450:	40 e8       	ldi	r20, 0x80	; 128
    4452:	5f e3       	ldi	r21, 0x3F	; 63
    4454:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4458:	88 23       	and	r24, r24
    445a:	2c f4       	brge	.+10     	; 0x4466 <LED_voidShiftRightLeft+0x1406>
		__ticks = 1;
    445c:	81 e0       	ldi	r24, 0x01	; 1
    445e:	90 e0       	ldi	r25, 0x00	; 0
    4460:	9c 8b       	std	Y+20, r25	; 0x14
    4462:	8b 8b       	std	Y+19, r24	; 0x13
    4464:	3f c0       	rjmp	.+126    	; 0x44e4 <LED_voidShiftRightLeft+0x1484>
	else if (__tmp > 65535)
    4466:	6d 89       	ldd	r22, Y+21	; 0x15
    4468:	7e 89       	ldd	r23, Y+22	; 0x16
    446a:	8f 89       	ldd	r24, Y+23	; 0x17
    446c:	98 8d       	ldd	r25, Y+24	; 0x18
    446e:	20 e0       	ldi	r18, 0x00	; 0
    4470:	3f ef       	ldi	r19, 0xFF	; 255
    4472:	4f e7       	ldi	r20, 0x7F	; 127
    4474:	57 e4       	ldi	r21, 0x47	; 71
    4476:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    447a:	18 16       	cp	r1, r24
    447c:	4c f5       	brge	.+82     	; 0x44d0 <LED_voidShiftRightLeft+0x1470>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    447e:	69 8d       	ldd	r22, Y+25	; 0x19
    4480:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4482:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4484:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4486:	20 e0       	ldi	r18, 0x00	; 0
    4488:	30 e0       	ldi	r19, 0x00	; 0
    448a:	40 e2       	ldi	r20, 0x20	; 32
    448c:	51 e4       	ldi	r21, 0x41	; 65
    448e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4492:	dc 01       	movw	r26, r24
    4494:	cb 01       	movw	r24, r22
    4496:	bc 01       	movw	r22, r24
    4498:	cd 01       	movw	r24, r26
    449a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    449e:	dc 01       	movw	r26, r24
    44a0:	cb 01       	movw	r24, r22
    44a2:	9c 8b       	std	Y+20, r25	; 0x14
    44a4:	8b 8b       	std	Y+19, r24	; 0x13
    44a6:	0f c0       	rjmp	.+30     	; 0x44c6 <LED_voidShiftRightLeft+0x1466>
    44a8:	88 ec       	ldi	r24, 0xC8	; 200
    44aa:	90 e0       	ldi	r25, 0x00	; 0
    44ac:	9a 8b       	std	Y+18, r25	; 0x12
    44ae:	89 8b       	std	Y+17, r24	; 0x11
    44b0:	89 89       	ldd	r24, Y+17	; 0x11
    44b2:	9a 89       	ldd	r25, Y+18	; 0x12
    44b4:	01 97       	sbiw	r24, 0x01	; 1
    44b6:	f1 f7       	brne	.-4      	; 0x44b4 <LED_voidShiftRightLeft+0x1454>
    44b8:	9a 8b       	std	Y+18, r25	; 0x12
    44ba:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44bc:	8b 89       	ldd	r24, Y+19	; 0x13
    44be:	9c 89       	ldd	r25, Y+20	; 0x14
    44c0:	01 97       	sbiw	r24, 0x01	; 1
    44c2:	9c 8b       	std	Y+20, r25	; 0x14
    44c4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44c6:	8b 89       	ldd	r24, Y+19	; 0x13
    44c8:	9c 89       	ldd	r25, Y+20	; 0x14
    44ca:	00 97       	sbiw	r24, 0x00	; 0
    44cc:	69 f7       	brne	.-38     	; 0x44a8 <LED_voidShiftRightLeft+0x1448>
    44ce:	14 c0       	rjmp	.+40     	; 0x44f8 <LED_voidShiftRightLeft+0x1498>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44d0:	6d 89       	ldd	r22, Y+21	; 0x15
    44d2:	7e 89       	ldd	r23, Y+22	; 0x16
    44d4:	8f 89       	ldd	r24, Y+23	; 0x17
    44d6:	98 8d       	ldd	r25, Y+24	; 0x18
    44d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44dc:	dc 01       	movw	r26, r24
    44de:	cb 01       	movw	r24, r22
    44e0:	9c 8b       	std	Y+20, r25	; 0x14
    44e2:	8b 8b       	std	Y+19, r24	; 0x13
    44e4:	8b 89       	ldd	r24, Y+19	; 0x13
    44e6:	9c 89       	ldd	r25, Y+20	; 0x14
    44e8:	98 8b       	std	Y+16, r25	; 0x10
    44ea:	8f 87       	std	Y+15, r24	; 0x0f
    44ec:	8f 85       	ldd	r24, Y+15	; 0x0f
    44ee:	98 89       	ldd	r25, Y+16	; 0x10
    44f0:	01 97       	sbiw	r24, 0x01	; 1
    44f2:	f1 f7       	brne	.-4      	; 0x44f0 <LED_voidShiftRightLeft+0x1490>
    44f4:	98 8b       	std	Y+16, r25	; 0x10
    44f6:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    44f8:	fe 01       	movw	r30, r28
    44fa:	ed 52       	subi	r30, 0x2D	; 45
    44fc:	ff 4f       	sbci	r31, 0xFF	; 255
    44fe:	80 81       	ld	r24, Z
    4500:	60 e0       	ldi	r22, 0x00	; 0
    4502:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN7, DIO_u8HIGH);
    4506:	fe 01       	movw	r30, r28
    4508:	ed 52       	subi	r30, 0x2D	; 45
    450a:	ff 4f       	sbci	r31, 0xFF	; 255
    450c:	80 81       	ld	r24, Z
    450e:	67 e0       	ldi	r22, 0x07	; 7
    4510:	41 e0       	ldi	r20, 0x01	; 1
    4512:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms/2);
    4516:	fe 01       	movw	r30, r28
    4518:	ec 52       	subi	r30, 0x2C	; 44
    451a:	ff 4f       	sbci	r31, 0xFF	; 255
    451c:	80 81       	ld	r24, Z
    451e:	86 95       	lsr	r24
    4520:	88 2f       	mov	r24, r24
    4522:	90 e0       	ldi	r25, 0x00	; 0
    4524:	aa 27       	eor	r26, r26
    4526:	97 fd       	sbrc	r25, 7
    4528:	a0 95       	com	r26
    452a:	ba 2f       	mov	r27, r26
    452c:	bc 01       	movw	r22, r24
    452e:	cd 01       	movw	r24, r26
    4530:	0e 94 a1 03 	call	0x742	; 0x742 <__floatsisf>
    4534:	dc 01       	movw	r26, r24
    4536:	cb 01       	movw	r24, r22
    4538:	8b 87       	std	Y+11, r24	; 0x0b
    453a:	9c 87       	std	Y+12, r25	; 0x0c
    453c:	ad 87       	std	Y+13, r26	; 0x0d
    453e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4540:	6b 85       	ldd	r22, Y+11	; 0x0b
    4542:	7c 85       	ldd	r23, Y+12	; 0x0c
    4544:	8d 85       	ldd	r24, Y+13	; 0x0d
    4546:	9e 85       	ldd	r25, Y+14	; 0x0e
    4548:	20 e0       	ldi	r18, 0x00	; 0
    454a:	30 e0       	ldi	r19, 0x00	; 0
    454c:	4a ef       	ldi	r20, 0xFA	; 250
    454e:	54 e4       	ldi	r21, 0x44	; 68
    4550:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4554:	dc 01       	movw	r26, r24
    4556:	cb 01       	movw	r24, r22
    4558:	8f 83       	std	Y+7, r24	; 0x07
    455a:	98 87       	std	Y+8, r25	; 0x08
    455c:	a9 87       	std	Y+9, r26	; 0x09
    455e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4560:	6f 81       	ldd	r22, Y+7	; 0x07
    4562:	78 85       	ldd	r23, Y+8	; 0x08
    4564:	89 85       	ldd	r24, Y+9	; 0x09
    4566:	9a 85       	ldd	r25, Y+10	; 0x0a
    4568:	20 e0       	ldi	r18, 0x00	; 0
    456a:	30 e0       	ldi	r19, 0x00	; 0
    456c:	40 e8       	ldi	r20, 0x80	; 128
    456e:	5f e3       	ldi	r21, 0x3F	; 63
    4570:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4574:	88 23       	and	r24, r24
    4576:	2c f4       	brge	.+10     	; 0x4582 <LED_voidShiftRightLeft+0x1522>
		__ticks = 1;
    4578:	81 e0       	ldi	r24, 0x01	; 1
    457a:	90 e0       	ldi	r25, 0x00	; 0
    457c:	9e 83       	std	Y+6, r25	; 0x06
    457e:	8d 83       	std	Y+5, r24	; 0x05
    4580:	3f c0       	rjmp	.+126    	; 0x4600 <LED_voidShiftRightLeft+0x15a0>
	else if (__tmp > 65535)
    4582:	6f 81       	ldd	r22, Y+7	; 0x07
    4584:	78 85       	ldd	r23, Y+8	; 0x08
    4586:	89 85       	ldd	r24, Y+9	; 0x09
    4588:	9a 85       	ldd	r25, Y+10	; 0x0a
    458a:	20 e0       	ldi	r18, 0x00	; 0
    458c:	3f ef       	ldi	r19, 0xFF	; 255
    458e:	4f e7       	ldi	r20, 0x7F	; 127
    4590:	57 e4       	ldi	r21, 0x47	; 71
    4592:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4596:	18 16       	cp	r1, r24
    4598:	4c f5       	brge	.+82     	; 0x45ec <LED_voidShiftRightLeft+0x158c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    459a:	6b 85       	ldd	r22, Y+11	; 0x0b
    459c:	7c 85       	ldd	r23, Y+12	; 0x0c
    459e:	8d 85       	ldd	r24, Y+13	; 0x0d
    45a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    45a2:	20 e0       	ldi	r18, 0x00	; 0
    45a4:	30 e0       	ldi	r19, 0x00	; 0
    45a6:	40 e2       	ldi	r20, 0x20	; 32
    45a8:	51 e4       	ldi	r21, 0x41	; 65
    45aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45ae:	dc 01       	movw	r26, r24
    45b0:	cb 01       	movw	r24, r22
    45b2:	bc 01       	movw	r22, r24
    45b4:	cd 01       	movw	r24, r26
    45b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    45ba:	dc 01       	movw	r26, r24
    45bc:	cb 01       	movw	r24, r22
    45be:	9e 83       	std	Y+6, r25	; 0x06
    45c0:	8d 83       	std	Y+5, r24	; 0x05
    45c2:	0f c0       	rjmp	.+30     	; 0x45e2 <LED_voidShiftRightLeft+0x1582>
    45c4:	88 ec       	ldi	r24, 0xC8	; 200
    45c6:	90 e0       	ldi	r25, 0x00	; 0
    45c8:	9c 83       	std	Y+4, r25	; 0x04
    45ca:	8b 83       	std	Y+3, r24	; 0x03
    45cc:	8b 81       	ldd	r24, Y+3	; 0x03
    45ce:	9c 81       	ldd	r25, Y+4	; 0x04
    45d0:	01 97       	sbiw	r24, 0x01	; 1
    45d2:	f1 f7       	brne	.-4      	; 0x45d0 <LED_voidShiftRightLeft+0x1570>
    45d4:	9c 83       	std	Y+4, r25	; 0x04
    45d6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    45d8:	8d 81       	ldd	r24, Y+5	; 0x05
    45da:	9e 81       	ldd	r25, Y+6	; 0x06
    45dc:	01 97       	sbiw	r24, 0x01	; 1
    45de:	9e 83       	std	Y+6, r25	; 0x06
    45e0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    45e2:	8d 81       	ldd	r24, Y+5	; 0x05
    45e4:	9e 81       	ldd	r25, Y+6	; 0x06
    45e6:	00 97       	sbiw	r24, 0x00	; 0
    45e8:	69 f7       	brne	.-38     	; 0x45c4 <LED_voidShiftRightLeft+0x1564>
    45ea:	14 c0       	rjmp	.+40     	; 0x4614 <LED_voidShiftRightLeft+0x15b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    45ec:	6f 81       	ldd	r22, Y+7	; 0x07
    45ee:	78 85       	ldd	r23, Y+8	; 0x08
    45f0:	89 85       	ldd	r24, Y+9	; 0x09
    45f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    45f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    45f8:	dc 01       	movw	r26, r24
    45fa:	cb 01       	movw	r24, r22
    45fc:	9e 83       	std	Y+6, r25	; 0x06
    45fe:	8d 83       	std	Y+5, r24	; 0x05
    4600:	8d 81       	ldd	r24, Y+5	; 0x05
    4602:	9e 81       	ldd	r25, Y+6	; 0x06
    4604:	9a 83       	std	Y+2, r25	; 0x02
    4606:	89 83       	std	Y+1, r24	; 0x01
    4608:	89 81       	ldd	r24, Y+1	; 0x01
    460a:	9a 81       	ldd	r25, Y+2	; 0x02
    460c:	01 97       	sbiw	r24, 0x01	; 1
    460e:	f1 f7       	brne	.-4      	; 0x460c <LED_voidShiftRightLeft+0x15ac>
    4610:	9a 83       	std	Y+2, r25	; 0x02
    4612:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    4614:	fe 01       	movw	r30, r28
    4616:	ed 52       	subi	r30, 0x2D	; 45
    4618:	ff 4f       	sbci	r31, 0xFF	; 255
    461a:	80 81       	ld	r24, Z
    461c:	60 e0       	ldi	r22, 0x00	; 0
    461e:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
}
    4622:	cc 52       	subi	r28, 0x2C	; 44
    4624:	df 4f       	sbci	r29, 0xFF	; 255
    4626:	0f b6       	in	r0, 0x3f	; 63
    4628:	f8 94       	cli
    462a:	de bf       	out	0x3e, r29	; 62
    462c:	0f be       	out	0x3f, r0	; 63
    462e:	cd bf       	out	0x3d, r28	; 61
    4630:	cf 91       	pop	r28
    4632:	df 91       	pop	r29
    4634:	1f 91       	pop	r17
    4636:	0f 91       	pop	r16
    4638:	08 95       	ret

0000463a <LED_voidShiftLeftRight>:

void LED_voidShiftLeftRight (uint8 Copy_u8PortNum, uint8 Copy_u8Delayms)
{
    463a:	0f 93       	push	r16
    463c:	1f 93       	push	r17
    463e:	df 93       	push	r29
    4640:	cf 93       	push	r28
    4642:	cd b7       	in	r28, 0x3d	; 61
    4644:	de b7       	in	r29, 0x3e	; 62
    4646:	c4 5d       	subi	r28, 0xD4	; 212
    4648:	d0 40       	sbci	r29, 0x00	; 0
    464a:	0f b6       	in	r0, 0x3f	; 63
    464c:	f8 94       	cli
    464e:	de bf       	out	0x3e, r29	; 62
    4650:	0f be       	out	0x3f, r0	; 63
    4652:	cd bf       	out	0x3d, r28	; 61
    4654:	fe 01       	movw	r30, r28
    4656:	ed 52       	subi	r30, 0x2D	; 45
    4658:	ff 4f       	sbci	r31, 0xFF	; 255
    465a:	80 83       	st	Z, r24
    465c:	fe 01       	movw	r30, r28
    465e:	ec 52       	subi	r30, 0x2C	; 44
    4660:	ff 4f       	sbci	r31, 0xFF	; 255
    4662:	60 83       	st	Z, r22
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
    4664:	fe 01       	movw	r30, r28
    4666:	ed 52       	subi	r30, 0x2D	; 45
    4668:	ff 4f       	sbci	r31, 0xFF	; 255
    466a:	80 81       	ld	r24, Z
    466c:	61 e0       	ldi	r22, 0x01	; 1
    466e:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>

	/*     	Shift Left		*/

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN0, DIO_u8HIGH);
    4672:	fe 01       	movw	r30, r28
    4674:	ed 52       	subi	r30, 0x2D	; 45
    4676:	ff 4f       	sbci	r31, 0xFF	; 255
    4678:	80 81       	ld	r24, Z
    467a:	60 e0       	ldi	r22, 0x00	; 0
    467c:	41 e0       	ldi	r20, 0x01	; 1
    467e:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    4682:	fe 01       	movw	r30, r28
    4684:	ec 52       	subi	r30, 0x2C	; 44
    4686:	ff 4f       	sbci	r31, 0xFF	; 255
    4688:	80 81       	ld	r24, Z
    468a:	88 2f       	mov	r24, r24
    468c:	90 e0       	ldi	r25, 0x00	; 0
    468e:	a0 e0       	ldi	r26, 0x00	; 0
    4690:	b0 e0       	ldi	r27, 0x00	; 0
    4692:	bc 01       	movw	r22, r24
    4694:	cd 01       	movw	r24, r26
    4696:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    469a:	dc 01       	movw	r26, r24
    469c:	cb 01       	movw	r24, r22
    469e:	fe 01       	movw	r30, r28
    46a0:	e1 53       	subi	r30, 0x31	; 49
    46a2:	ff 4f       	sbci	r31, 0xFF	; 255
    46a4:	80 83       	st	Z, r24
    46a6:	91 83       	std	Z+1, r25	; 0x01
    46a8:	a2 83       	std	Z+2, r26	; 0x02
    46aa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46ac:	8e 01       	movw	r16, r28
    46ae:	05 53       	subi	r16, 0x35	; 53
    46b0:	1f 4f       	sbci	r17, 0xFF	; 255
    46b2:	fe 01       	movw	r30, r28
    46b4:	e1 53       	subi	r30, 0x31	; 49
    46b6:	ff 4f       	sbci	r31, 0xFF	; 255
    46b8:	60 81       	ld	r22, Z
    46ba:	71 81       	ldd	r23, Z+1	; 0x01
    46bc:	82 81       	ldd	r24, Z+2	; 0x02
    46be:	93 81       	ldd	r25, Z+3	; 0x03
    46c0:	20 e0       	ldi	r18, 0x00	; 0
    46c2:	30 e0       	ldi	r19, 0x00	; 0
    46c4:	4a ef       	ldi	r20, 0xFA	; 250
    46c6:	54 e4       	ldi	r21, 0x44	; 68
    46c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46cc:	dc 01       	movw	r26, r24
    46ce:	cb 01       	movw	r24, r22
    46d0:	f8 01       	movw	r30, r16
    46d2:	80 83       	st	Z, r24
    46d4:	91 83       	std	Z+1, r25	; 0x01
    46d6:	a2 83       	std	Z+2, r26	; 0x02
    46d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    46da:	fe 01       	movw	r30, r28
    46dc:	e5 53       	subi	r30, 0x35	; 53
    46de:	ff 4f       	sbci	r31, 0xFF	; 255
    46e0:	60 81       	ld	r22, Z
    46e2:	71 81       	ldd	r23, Z+1	; 0x01
    46e4:	82 81       	ldd	r24, Z+2	; 0x02
    46e6:	93 81       	ldd	r25, Z+3	; 0x03
    46e8:	20 e0       	ldi	r18, 0x00	; 0
    46ea:	30 e0       	ldi	r19, 0x00	; 0
    46ec:	40 e8       	ldi	r20, 0x80	; 128
    46ee:	5f e3       	ldi	r21, 0x3F	; 63
    46f0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    46f4:	88 23       	and	r24, r24
    46f6:	44 f4       	brge	.+16     	; 0x4708 <LED_voidShiftLeftRight+0xce>
		__ticks = 1;
    46f8:	fe 01       	movw	r30, r28
    46fa:	e7 53       	subi	r30, 0x37	; 55
    46fc:	ff 4f       	sbci	r31, 0xFF	; 255
    46fe:	81 e0       	ldi	r24, 0x01	; 1
    4700:	90 e0       	ldi	r25, 0x00	; 0
    4702:	91 83       	std	Z+1, r25	; 0x01
    4704:	80 83       	st	Z, r24
    4706:	64 c0       	rjmp	.+200    	; 0x47d0 <LED_voidShiftLeftRight+0x196>
	else if (__tmp > 65535)
    4708:	fe 01       	movw	r30, r28
    470a:	e5 53       	subi	r30, 0x35	; 53
    470c:	ff 4f       	sbci	r31, 0xFF	; 255
    470e:	60 81       	ld	r22, Z
    4710:	71 81       	ldd	r23, Z+1	; 0x01
    4712:	82 81       	ldd	r24, Z+2	; 0x02
    4714:	93 81       	ldd	r25, Z+3	; 0x03
    4716:	20 e0       	ldi	r18, 0x00	; 0
    4718:	3f ef       	ldi	r19, 0xFF	; 255
    471a:	4f e7       	ldi	r20, 0x7F	; 127
    471c:	57 e4       	ldi	r21, 0x47	; 71
    471e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4722:	18 16       	cp	r1, r24
    4724:	0c f0       	brlt	.+2      	; 0x4728 <LED_voidShiftLeftRight+0xee>
    4726:	43 c0       	rjmp	.+134    	; 0x47ae <LED_voidShiftLeftRight+0x174>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4728:	fe 01       	movw	r30, r28
    472a:	e1 53       	subi	r30, 0x31	; 49
    472c:	ff 4f       	sbci	r31, 0xFF	; 255
    472e:	60 81       	ld	r22, Z
    4730:	71 81       	ldd	r23, Z+1	; 0x01
    4732:	82 81       	ldd	r24, Z+2	; 0x02
    4734:	93 81       	ldd	r25, Z+3	; 0x03
    4736:	20 e0       	ldi	r18, 0x00	; 0
    4738:	30 e0       	ldi	r19, 0x00	; 0
    473a:	40 e2       	ldi	r20, 0x20	; 32
    473c:	51 e4       	ldi	r21, 0x41	; 65
    473e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4742:	dc 01       	movw	r26, r24
    4744:	cb 01       	movw	r24, r22
    4746:	8e 01       	movw	r16, r28
    4748:	07 53       	subi	r16, 0x37	; 55
    474a:	1f 4f       	sbci	r17, 0xFF	; 255
    474c:	bc 01       	movw	r22, r24
    474e:	cd 01       	movw	r24, r26
    4750:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4754:	dc 01       	movw	r26, r24
    4756:	cb 01       	movw	r24, r22
    4758:	f8 01       	movw	r30, r16
    475a:	91 83       	std	Z+1, r25	; 0x01
    475c:	80 83       	st	Z, r24
    475e:	1f c0       	rjmp	.+62     	; 0x479e <LED_voidShiftLeftRight+0x164>
    4760:	fe 01       	movw	r30, r28
    4762:	e9 53       	subi	r30, 0x39	; 57
    4764:	ff 4f       	sbci	r31, 0xFF	; 255
    4766:	88 ec       	ldi	r24, 0xC8	; 200
    4768:	90 e0       	ldi	r25, 0x00	; 0
    476a:	91 83       	std	Z+1, r25	; 0x01
    476c:	80 83       	st	Z, r24
    476e:	fe 01       	movw	r30, r28
    4770:	e9 53       	subi	r30, 0x39	; 57
    4772:	ff 4f       	sbci	r31, 0xFF	; 255
    4774:	80 81       	ld	r24, Z
    4776:	91 81       	ldd	r25, Z+1	; 0x01
    4778:	01 97       	sbiw	r24, 0x01	; 1
    477a:	f1 f7       	brne	.-4      	; 0x4778 <LED_voidShiftLeftRight+0x13e>
    477c:	fe 01       	movw	r30, r28
    477e:	e9 53       	subi	r30, 0x39	; 57
    4780:	ff 4f       	sbci	r31, 0xFF	; 255
    4782:	91 83       	std	Z+1, r25	; 0x01
    4784:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4786:	de 01       	movw	r26, r28
    4788:	a7 53       	subi	r26, 0x37	; 55
    478a:	bf 4f       	sbci	r27, 0xFF	; 255
    478c:	fe 01       	movw	r30, r28
    478e:	e7 53       	subi	r30, 0x37	; 55
    4790:	ff 4f       	sbci	r31, 0xFF	; 255
    4792:	80 81       	ld	r24, Z
    4794:	91 81       	ldd	r25, Z+1	; 0x01
    4796:	01 97       	sbiw	r24, 0x01	; 1
    4798:	11 96       	adiw	r26, 0x01	; 1
    479a:	9c 93       	st	X, r25
    479c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    479e:	fe 01       	movw	r30, r28
    47a0:	e7 53       	subi	r30, 0x37	; 55
    47a2:	ff 4f       	sbci	r31, 0xFF	; 255
    47a4:	80 81       	ld	r24, Z
    47a6:	91 81       	ldd	r25, Z+1	; 0x01
    47a8:	00 97       	sbiw	r24, 0x00	; 0
    47aa:	d1 f6       	brne	.-76     	; 0x4760 <LED_voidShiftLeftRight+0x126>
    47ac:	27 c0       	rjmp	.+78     	; 0x47fc <LED_voidShiftLeftRight+0x1c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47ae:	8e 01       	movw	r16, r28
    47b0:	07 53       	subi	r16, 0x37	; 55
    47b2:	1f 4f       	sbci	r17, 0xFF	; 255
    47b4:	fe 01       	movw	r30, r28
    47b6:	e5 53       	subi	r30, 0x35	; 53
    47b8:	ff 4f       	sbci	r31, 0xFF	; 255
    47ba:	60 81       	ld	r22, Z
    47bc:	71 81       	ldd	r23, Z+1	; 0x01
    47be:	82 81       	ldd	r24, Z+2	; 0x02
    47c0:	93 81       	ldd	r25, Z+3	; 0x03
    47c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47c6:	dc 01       	movw	r26, r24
    47c8:	cb 01       	movw	r24, r22
    47ca:	f8 01       	movw	r30, r16
    47cc:	91 83       	std	Z+1, r25	; 0x01
    47ce:	80 83       	st	Z, r24
    47d0:	de 01       	movw	r26, r28
    47d2:	ab 53       	subi	r26, 0x3B	; 59
    47d4:	bf 4f       	sbci	r27, 0xFF	; 255
    47d6:	fe 01       	movw	r30, r28
    47d8:	e7 53       	subi	r30, 0x37	; 55
    47da:	ff 4f       	sbci	r31, 0xFF	; 255
    47dc:	80 81       	ld	r24, Z
    47de:	91 81       	ldd	r25, Z+1	; 0x01
    47e0:	8d 93       	st	X+, r24
    47e2:	9c 93       	st	X, r25
    47e4:	fe 01       	movw	r30, r28
    47e6:	eb 53       	subi	r30, 0x3B	; 59
    47e8:	ff 4f       	sbci	r31, 0xFF	; 255
    47ea:	80 81       	ld	r24, Z
    47ec:	91 81       	ldd	r25, Z+1	; 0x01
    47ee:	01 97       	sbiw	r24, 0x01	; 1
    47f0:	f1 f7       	brne	.-4      	; 0x47ee <LED_voidShiftLeftRight+0x1b4>
    47f2:	fe 01       	movw	r30, r28
    47f4:	eb 53       	subi	r30, 0x3B	; 59
    47f6:	ff 4f       	sbci	r31, 0xFF	; 255
    47f8:	91 83       	std	Z+1, r25	; 0x01
    47fa:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    47fc:	fe 01       	movw	r30, r28
    47fe:	ed 52       	subi	r30, 0x2D	; 45
    4800:	ff 4f       	sbci	r31, 0xFF	; 255
    4802:	80 81       	ld	r24, Z
    4804:	60 e0       	ldi	r22, 0x00	; 0
    4806:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN1, DIO_u8HIGH);
    480a:	fe 01       	movw	r30, r28
    480c:	ed 52       	subi	r30, 0x2D	; 45
    480e:	ff 4f       	sbci	r31, 0xFF	; 255
    4810:	80 81       	ld	r24, Z
    4812:	61 e0       	ldi	r22, 0x01	; 1
    4814:	41 e0       	ldi	r20, 0x01	; 1
    4816:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    481a:	fe 01       	movw	r30, r28
    481c:	ec 52       	subi	r30, 0x2C	; 44
    481e:	ff 4f       	sbci	r31, 0xFF	; 255
    4820:	80 81       	ld	r24, Z
    4822:	88 2f       	mov	r24, r24
    4824:	90 e0       	ldi	r25, 0x00	; 0
    4826:	a0 e0       	ldi	r26, 0x00	; 0
    4828:	b0 e0       	ldi	r27, 0x00	; 0
    482a:	bc 01       	movw	r22, r24
    482c:	cd 01       	movw	r24, r26
    482e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    4832:	dc 01       	movw	r26, r24
    4834:	cb 01       	movw	r24, r22
    4836:	fe 01       	movw	r30, r28
    4838:	ef 53       	subi	r30, 0x3F	; 63
    483a:	ff 4f       	sbci	r31, 0xFF	; 255
    483c:	80 83       	st	Z, r24
    483e:	91 83       	std	Z+1, r25	; 0x01
    4840:	a2 83       	std	Z+2, r26	; 0x02
    4842:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4844:	8e 01       	movw	r16, r28
    4846:	03 54       	subi	r16, 0x43	; 67
    4848:	1f 4f       	sbci	r17, 0xFF	; 255
    484a:	fe 01       	movw	r30, r28
    484c:	ef 53       	subi	r30, 0x3F	; 63
    484e:	ff 4f       	sbci	r31, 0xFF	; 255
    4850:	60 81       	ld	r22, Z
    4852:	71 81       	ldd	r23, Z+1	; 0x01
    4854:	82 81       	ldd	r24, Z+2	; 0x02
    4856:	93 81       	ldd	r25, Z+3	; 0x03
    4858:	20 e0       	ldi	r18, 0x00	; 0
    485a:	30 e0       	ldi	r19, 0x00	; 0
    485c:	4a ef       	ldi	r20, 0xFA	; 250
    485e:	54 e4       	ldi	r21, 0x44	; 68
    4860:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4864:	dc 01       	movw	r26, r24
    4866:	cb 01       	movw	r24, r22
    4868:	f8 01       	movw	r30, r16
    486a:	80 83       	st	Z, r24
    486c:	91 83       	std	Z+1, r25	; 0x01
    486e:	a2 83       	std	Z+2, r26	; 0x02
    4870:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4872:	fe 01       	movw	r30, r28
    4874:	e3 54       	subi	r30, 0x43	; 67
    4876:	ff 4f       	sbci	r31, 0xFF	; 255
    4878:	60 81       	ld	r22, Z
    487a:	71 81       	ldd	r23, Z+1	; 0x01
    487c:	82 81       	ldd	r24, Z+2	; 0x02
    487e:	93 81       	ldd	r25, Z+3	; 0x03
    4880:	20 e0       	ldi	r18, 0x00	; 0
    4882:	30 e0       	ldi	r19, 0x00	; 0
    4884:	40 e8       	ldi	r20, 0x80	; 128
    4886:	5f e3       	ldi	r21, 0x3F	; 63
    4888:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    488c:	88 23       	and	r24, r24
    488e:	44 f4       	brge	.+16     	; 0x48a0 <LED_voidShiftLeftRight+0x266>
		__ticks = 1;
    4890:	fe 01       	movw	r30, r28
    4892:	e5 54       	subi	r30, 0x45	; 69
    4894:	ff 4f       	sbci	r31, 0xFF	; 255
    4896:	81 e0       	ldi	r24, 0x01	; 1
    4898:	90 e0       	ldi	r25, 0x00	; 0
    489a:	91 83       	std	Z+1, r25	; 0x01
    489c:	80 83       	st	Z, r24
    489e:	64 c0       	rjmp	.+200    	; 0x4968 <LED_voidShiftLeftRight+0x32e>
	else if (__tmp > 65535)
    48a0:	fe 01       	movw	r30, r28
    48a2:	e3 54       	subi	r30, 0x43	; 67
    48a4:	ff 4f       	sbci	r31, 0xFF	; 255
    48a6:	60 81       	ld	r22, Z
    48a8:	71 81       	ldd	r23, Z+1	; 0x01
    48aa:	82 81       	ldd	r24, Z+2	; 0x02
    48ac:	93 81       	ldd	r25, Z+3	; 0x03
    48ae:	20 e0       	ldi	r18, 0x00	; 0
    48b0:	3f ef       	ldi	r19, 0xFF	; 255
    48b2:	4f e7       	ldi	r20, 0x7F	; 127
    48b4:	57 e4       	ldi	r21, 0x47	; 71
    48b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    48ba:	18 16       	cp	r1, r24
    48bc:	0c f0       	brlt	.+2      	; 0x48c0 <LED_voidShiftLeftRight+0x286>
    48be:	43 c0       	rjmp	.+134    	; 0x4946 <LED_voidShiftLeftRight+0x30c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48c0:	fe 01       	movw	r30, r28
    48c2:	ef 53       	subi	r30, 0x3F	; 63
    48c4:	ff 4f       	sbci	r31, 0xFF	; 255
    48c6:	60 81       	ld	r22, Z
    48c8:	71 81       	ldd	r23, Z+1	; 0x01
    48ca:	82 81       	ldd	r24, Z+2	; 0x02
    48cc:	93 81       	ldd	r25, Z+3	; 0x03
    48ce:	20 e0       	ldi	r18, 0x00	; 0
    48d0:	30 e0       	ldi	r19, 0x00	; 0
    48d2:	40 e2       	ldi	r20, 0x20	; 32
    48d4:	51 e4       	ldi	r21, 0x41	; 65
    48d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    48da:	dc 01       	movw	r26, r24
    48dc:	cb 01       	movw	r24, r22
    48de:	8e 01       	movw	r16, r28
    48e0:	05 54       	subi	r16, 0x45	; 69
    48e2:	1f 4f       	sbci	r17, 0xFF	; 255
    48e4:	bc 01       	movw	r22, r24
    48e6:	cd 01       	movw	r24, r26
    48e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48ec:	dc 01       	movw	r26, r24
    48ee:	cb 01       	movw	r24, r22
    48f0:	f8 01       	movw	r30, r16
    48f2:	91 83       	std	Z+1, r25	; 0x01
    48f4:	80 83       	st	Z, r24
    48f6:	1f c0       	rjmp	.+62     	; 0x4936 <LED_voidShiftLeftRight+0x2fc>
    48f8:	fe 01       	movw	r30, r28
    48fa:	e7 54       	subi	r30, 0x47	; 71
    48fc:	ff 4f       	sbci	r31, 0xFF	; 255
    48fe:	88 ec       	ldi	r24, 0xC8	; 200
    4900:	90 e0       	ldi	r25, 0x00	; 0
    4902:	91 83       	std	Z+1, r25	; 0x01
    4904:	80 83       	st	Z, r24
    4906:	fe 01       	movw	r30, r28
    4908:	e7 54       	subi	r30, 0x47	; 71
    490a:	ff 4f       	sbci	r31, 0xFF	; 255
    490c:	80 81       	ld	r24, Z
    490e:	91 81       	ldd	r25, Z+1	; 0x01
    4910:	01 97       	sbiw	r24, 0x01	; 1
    4912:	f1 f7       	brne	.-4      	; 0x4910 <LED_voidShiftLeftRight+0x2d6>
    4914:	fe 01       	movw	r30, r28
    4916:	e7 54       	subi	r30, 0x47	; 71
    4918:	ff 4f       	sbci	r31, 0xFF	; 255
    491a:	91 83       	std	Z+1, r25	; 0x01
    491c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    491e:	de 01       	movw	r26, r28
    4920:	a5 54       	subi	r26, 0x45	; 69
    4922:	bf 4f       	sbci	r27, 0xFF	; 255
    4924:	fe 01       	movw	r30, r28
    4926:	e5 54       	subi	r30, 0x45	; 69
    4928:	ff 4f       	sbci	r31, 0xFF	; 255
    492a:	80 81       	ld	r24, Z
    492c:	91 81       	ldd	r25, Z+1	; 0x01
    492e:	01 97       	sbiw	r24, 0x01	; 1
    4930:	11 96       	adiw	r26, 0x01	; 1
    4932:	9c 93       	st	X, r25
    4934:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4936:	fe 01       	movw	r30, r28
    4938:	e5 54       	subi	r30, 0x45	; 69
    493a:	ff 4f       	sbci	r31, 0xFF	; 255
    493c:	80 81       	ld	r24, Z
    493e:	91 81       	ldd	r25, Z+1	; 0x01
    4940:	00 97       	sbiw	r24, 0x00	; 0
    4942:	d1 f6       	brne	.-76     	; 0x48f8 <LED_voidShiftLeftRight+0x2be>
    4944:	27 c0       	rjmp	.+78     	; 0x4994 <LED_voidShiftLeftRight+0x35a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4946:	8e 01       	movw	r16, r28
    4948:	05 54       	subi	r16, 0x45	; 69
    494a:	1f 4f       	sbci	r17, 0xFF	; 255
    494c:	fe 01       	movw	r30, r28
    494e:	e3 54       	subi	r30, 0x43	; 67
    4950:	ff 4f       	sbci	r31, 0xFF	; 255
    4952:	60 81       	ld	r22, Z
    4954:	71 81       	ldd	r23, Z+1	; 0x01
    4956:	82 81       	ldd	r24, Z+2	; 0x02
    4958:	93 81       	ldd	r25, Z+3	; 0x03
    495a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    495e:	dc 01       	movw	r26, r24
    4960:	cb 01       	movw	r24, r22
    4962:	f8 01       	movw	r30, r16
    4964:	91 83       	std	Z+1, r25	; 0x01
    4966:	80 83       	st	Z, r24
    4968:	de 01       	movw	r26, r28
    496a:	a9 54       	subi	r26, 0x49	; 73
    496c:	bf 4f       	sbci	r27, 0xFF	; 255
    496e:	fe 01       	movw	r30, r28
    4970:	e5 54       	subi	r30, 0x45	; 69
    4972:	ff 4f       	sbci	r31, 0xFF	; 255
    4974:	80 81       	ld	r24, Z
    4976:	91 81       	ldd	r25, Z+1	; 0x01
    4978:	8d 93       	st	X+, r24
    497a:	9c 93       	st	X, r25
    497c:	fe 01       	movw	r30, r28
    497e:	e9 54       	subi	r30, 0x49	; 73
    4980:	ff 4f       	sbci	r31, 0xFF	; 255
    4982:	80 81       	ld	r24, Z
    4984:	91 81       	ldd	r25, Z+1	; 0x01
    4986:	01 97       	sbiw	r24, 0x01	; 1
    4988:	f1 f7       	brne	.-4      	; 0x4986 <LED_voidShiftLeftRight+0x34c>
    498a:	fe 01       	movw	r30, r28
    498c:	e9 54       	subi	r30, 0x49	; 73
    498e:	ff 4f       	sbci	r31, 0xFF	; 255
    4990:	91 83       	std	Z+1, r25	; 0x01
    4992:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    4994:	fe 01       	movw	r30, r28
    4996:	ed 52       	subi	r30, 0x2D	; 45
    4998:	ff 4f       	sbci	r31, 0xFF	; 255
    499a:	80 81       	ld	r24, Z
    499c:	60 e0       	ldi	r22, 0x00	; 0
    499e:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN2, DIO_u8HIGH);
    49a2:	fe 01       	movw	r30, r28
    49a4:	ed 52       	subi	r30, 0x2D	; 45
    49a6:	ff 4f       	sbci	r31, 0xFF	; 255
    49a8:	80 81       	ld	r24, Z
    49aa:	62 e0       	ldi	r22, 0x02	; 2
    49ac:	41 e0       	ldi	r20, 0x01	; 1
    49ae:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    49b2:	fe 01       	movw	r30, r28
    49b4:	ec 52       	subi	r30, 0x2C	; 44
    49b6:	ff 4f       	sbci	r31, 0xFF	; 255
    49b8:	80 81       	ld	r24, Z
    49ba:	88 2f       	mov	r24, r24
    49bc:	90 e0       	ldi	r25, 0x00	; 0
    49be:	a0 e0       	ldi	r26, 0x00	; 0
    49c0:	b0 e0       	ldi	r27, 0x00	; 0
    49c2:	bc 01       	movw	r22, r24
    49c4:	cd 01       	movw	r24, r26
    49c6:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    49ca:	dc 01       	movw	r26, r24
    49cc:	cb 01       	movw	r24, r22
    49ce:	fe 01       	movw	r30, r28
    49d0:	ed 54       	subi	r30, 0x4D	; 77
    49d2:	ff 4f       	sbci	r31, 0xFF	; 255
    49d4:	80 83       	st	Z, r24
    49d6:	91 83       	std	Z+1, r25	; 0x01
    49d8:	a2 83       	std	Z+2, r26	; 0x02
    49da:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    49dc:	8e 01       	movw	r16, r28
    49de:	01 55       	subi	r16, 0x51	; 81
    49e0:	1f 4f       	sbci	r17, 0xFF	; 255
    49e2:	fe 01       	movw	r30, r28
    49e4:	ed 54       	subi	r30, 0x4D	; 77
    49e6:	ff 4f       	sbci	r31, 0xFF	; 255
    49e8:	60 81       	ld	r22, Z
    49ea:	71 81       	ldd	r23, Z+1	; 0x01
    49ec:	82 81       	ldd	r24, Z+2	; 0x02
    49ee:	93 81       	ldd	r25, Z+3	; 0x03
    49f0:	20 e0       	ldi	r18, 0x00	; 0
    49f2:	30 e0       	ldi	r19, 0x00	; 0
    49f4:	4a ef       	ldi	r20, 0xFA	; 250
    49f6:	54 e4       	ldi	r21, 0x44	; 68
    49f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    49fc:	dc 01       	movw	r26, r24
    49fe:	cb 01       	movw	r24, r22
    4a00:	f8 01       	movw	r30, r16
    4a02:	80 83       	st	Z, r24
    4a04:	91 83       	std	Z+1, r25	; 0x01
    4a06:	a2 83       	std	Z+2, r26	; 0x02
    4a08:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a0a:	fe 01       	movw	r30, r28
    4a0c:	e1 55       	subi	r30, 0x51	; 81
    4a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    4a10:	60 81       	ld	r22, Z
    4a12:	71 81       	ldd	r23, Z+1	; 0x01
    4a14:	82 81       	ldd	r24, Z+2	; 0x02
    4a16:	93 81       	ldd	r25, Z+3	; 0x03
    4a18:	20 e0       	ldi	r18, 0x00	; 0
    4a1a:	30 e0       	ldi	r19, 0x00	; 0
    4a1c:	40 e8       	ldi	r20, 0x80	; 128
    4a1e:	5f e3       	ldi	r21, 0x3F	; 63
    4a20:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4a24:	88 23       	and	r24, r24
    4a26:	44 f4       	brge	.+16     	; 0x4a38 <LED_voidShiftLeftRight+0x3fe>
		__ticks = 1;
    4a28:	fe 01       	movw	r30, r28
    4a2a:	e3 55       	subi	r30, 0x53	; 83
    4a2c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a2e:	81 e0       	ldi	r24, 0x01	; 1
    4a30:	90 e0       	ldi	r25, 0x00	; 0
    4a32:	91 83       	std	Z+1, r25	; 0x01
    4a34:	80 83       	st	Z, r24
    4a36:	64 c0       	rjmp	.+200    	; 0x4b00 <LED_voidShiftLeftRight+0x4c6>
	else if (__tmp > 65535)
    4a38:	fe 01       	movw	r30, r28
    4a3a:	e1 55       	subi	r30, 0x51	; 81
    4a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a3e:	60 81       	ld	r22, Z
    4a40:	71 81       	ldd	r23, Z+1	; 0x01
    4a42:	82 81       	ldd	r24, Z+2	; 0x02
    4a44:	93 81       	ldd	r25, Z+3	; 0x03
    4a46:	20 e0       	ldi	r18, 0x00	; 0
    4a48:	3f ef       	ldi	r19, 0xFF	; 255
    4a4a:	4f e7       	ldi	r20, 0x7F	; 127
    4a4c:	57 e4       	ldi	r21, 0x47	; 71
    4a4e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4a52:	18 16       	cp	r1, r24
    4a54:	0c f0       	brlt	.+2      	; 0x4a58 <LED_voidShiftLeftRight+0x41e>
    4a56:	43 c0       	rjmp	.+134    	; 0x4ade <LED_voidShiftLeftRight+0x4a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a58:	fe 01       	movw	r30, r28
    4a5a:	ed 54       	subi	r30, 0x4D	; 77
    4a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a5e:	60 81       	ld	r22, Z
    4a60:	71 81       	ldd	r23, Z+1	; 0x01
    4a62:	82 81       	ldd	r24, Z+2	; 0x02
    4a64:	93 81       	ldd	r25, Z+3	; 0x03
    4a66:	20 e0       	ldi	r18, 0x00	; 0
    4a68:	30 e0       	ldi	r19, 0x00	; 0
    4a6a:	40 e2       	ldi	r20, 0x20	; 32
    4a6c:	51 e4       	ldi	r21, 0x41	; 65
    4a6e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a72:	dc 01       	movw	r26, r24
    4a74:	cb 01       	movw	r24, r22
    4a76:	8e 01       	movw	r16, r28
    4a78:	03 55       	subi	r16, 0x53	; 83
    4a7a:	1f 4f       	sbci	r17, 0xFF	; 255
    4a7c:	bc 01       	movw	r22, r24
    4a7e:	cd 01       	movw	r24, r26
    4a80:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a84:	dc 01       	movw	r26, r24
    4a86:	cb 01       	movw	r24, r22
    4a88:	f8 01       	movw	r30, r16
    4a8a:	91 83       	std	Z+1, r25	; 0x01
    4a8c:	80 83       	st	Z, r24
    4a8e:	1f c0       	rjmp	.+62     	; 0x4ace <LED_voidShiftLeftRight+0x494>
    4a90:	fe 01       	movw	r30, r28
    4a92:	e5 55       	subi	r30, 0x55	; 85
    4a94:	ff 4f       	sbci	r31, 0xFF	; 255
    4a96:	88 ec       	ldi	r24, 0xC8	; 200
    4a98:	90 e0       	ldi	r25, 0x00	; 0
    4a9a:	91 83       	std	Z+1, r25	; 0x01
    4a9c:	80 83       	st	Z, r24
    4a9e:	fe 01       	movw	r30, r28
    4aa0:	e5 55       	subi	r30, 0x55	; 85
    4aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    4aa4:	80 81       	ld	r24, Z
    4aa6:	91 81       	ldd	r25, Z+1	; 0x01
    4aa8:	01 97       	sbiw	r24, 0x01	; 1
    4aaa:	f1 f7       	brne	.-4      	; 0x4aa8 <LED_voidShiftLeftRight+0x46e>
    4aac:	fe 01       	movw	r30, r28
    4aae:	e5 55       	subi	r30, 0x55	; 85
    4ab0:	ff 4f       	sbci	r31, 0xFF	; 255
    4ab2:	91 83       	std	Z+1, r25	; 0x01
    4ab4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ab6:	de 01       	movw	r26, r28
    4ab8:	a3 55       	subi	r26, 0x53	; 83
    4aba:	bf 4f       	sbci	r27, 0xFF	; 255
    4abc:	fe 01       	movw	r30, r28
    4abe:	e3 55       	subi	r30, 0x53	; 83
    4ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    4ac2:	80 81       	ld	r24, Z
    4ac4:	91 81       	ldd	r25, Z+1	; 0x01
    4ac6:	01 97       	sbiw	r24, 0x01	; 1
    4ac8:	11 96       	adiw	r26, 0x01	; 1
    4aca:	9c 93       	st	X, r25
    4acc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ace:	fe 01       	movw	r30, r28
    4ad0:	e3 55       	subi	r30, 0x53	; 83
    4ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ad4:	80 81       	ld	r24, Z
    4ad6:	91 81       	ldd	r25, Z+1	; 0x01
    4ad8:	00 97       	sbiw	r24, 0x00	; 0
    4ada:	d1 f6       	brne	.-76     	; 0x4a90 <LED_voidShiftLeftRight+0x456>
    4adc:	27 c0       	rjmp	.+78     	; 0x4b2c <LED_voidShiftLeftRight+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ade:	8e 01       	movw	r16, r28
    4ae0:	03 55       	subi	r16, 0x53	; 83
    4ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    4ae4:	fe 01       	movw	r30, r28
    4ae6:	e1 55       	subi	r30, 0x51	; 81
    4ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    4aea:	60 81       	ld	r22, Z
    4aec:	71 81       	ldd	r23, Z+1	; 0x01
    4aee:	82 81       	ldd	r24, Z+2	; 0x02
    4af0:	93 81       	ldd	r25, Z+3	; 0x03
    4af2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4af6:	dc 01       	movw	r26, r24
    4af8:	cb 01       	movw	r24, r22
    4afa:	f8 01       	movw	r30, r16
    4afc:	91 83       	std	Z+1, r25	; 0x01
    4afe:	80 83       	st	Z, r24
    4b00:	de 01       	movw	r26, r28
    4b02:	a7 55       	subi	r26, 0x57	; 87
    4b04:	bf 4f       	sbci	r27, 0xFF	; 255
    4b06:	fe 01       	movw	r30, r28
    4b08:	e3 55       	subi	r30, 0x53	; 83
    4b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b0c:	80 81       	ld	r24, Z
    4b0e:	91 81       	ldd	r25, Z+1	; 0x01
    4b10:	8d 93       	st	X+, r24
    4b12:	9c 93       	st	X, r25
    4b14:	fe 01       	movw	r30, r28
    4b16:	e7 55       	subi	r30, 0x57	; 87
    4b18:	ff 4f       	sbci	r31, 0xFF	; 255
    4b1a:	80 81       	ld	r24, Z
    4b1c:	91 81       	ldd	r25, Z+1	; 0x01
    4b1e:	01 97       	sbiw	r24, 0x01	; 1
    4b20:	f1 f7       	brne	.-4      	; 0x4b1e <LED_voidShiftLeftRight+0x4e4>
    4b22:	fe 01       	movw	r30, r28
    4b24:	e7 55       	subi	r30, 0x57	; 87
    4b26:	ff 4f       	sbci	r31, 0xFF	; 255
    4b28:	91 83       	std	Z+1, r25	; 0x01
    4b2a:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    4b2c:	fe 01       	movw	r30, r28
    4b2e:	ed 52       	subi	r30, 0x2D	; 45
    4b30:	ff 4f       	sbci	r31, 0xFF	; 255
    4b32:	80 81       	ld	r24, Z
    4b34:	60 e0       	ldi	r22, 0x00	; 0
    4b36:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN3, DIO_u8HIGH);
    4b3a:	fe 01       	movw	r30, r28
    4b3c:	ed 52       	subi	r30, 0x2D	; 45
    4b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b40:	80 81       	ld	r24, Z
    4b42:	63 e0       	ldi	r22, 0x03	; 3
    4b44:	41 e0       	ldi	r20, 0x01	; 1
    4b46:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    4b4a:	fe 01       	movw	r30, r28
    4b4c:	ec 52       	subi	r30, 0x2C	; 44
    4b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b50:	80 81       	ld	r24, Z
    4b52:	88 2f       	mov	r24, r24
    4b54:	90 e0       	ldi	r25, 0x00	; 0
    4b56:	a0 e0       	ldi	r26, 0x00	; 0
    4b58:	b0 e0       	ldi	r27, 0x00	; 0
    4b5a:	bc 01       	movw	r22, r24
    4b5c:	cd 01       	movw	r24, r26
    4b5e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    4b62:	dc 01       	movw	r26, r24
    4b64:	cb 01       	movw	r24, r22
    4b66:	fe 01       	movw	r30, r28
    4b68:	eb 55       	subi	r30, 0x5B	; 91
    4b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b6c:	80 83       	st	Z, r24
    4b6e:	91 83       	std	Z+1, r25	; 0x01
    4b70:	a2 83       	std	Z+2, r26	; 0x02
    4b72:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b74:	8e 01       	movw	r16, r28
    4b76:	0f 55       	subi	r16, 0x5F	; 95
    4b78:	1f 4f       	sbci	r17, 0xFF	; 255
    4b7a:	fe 01       	movw	r30, r28
    4b7c:	eb 55       	subi	r30, 0x5B	; 91
    4b7e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b80:	60 81       	ld	r22, Z
    4b82:	71 81       	ldd	r23, Z+1	; 0x01
    4b84:	82 81       	ldd	r24, Z+2	; 0x02
    4b86:	93 81       	ldd	r25, Z+3	; 0x03
    4b88:	20 e0       	ldi	r18, 0x00	; 0
    4b8a:	30 e0       	ldi	r19, 0x00	; 0
    4b8c:	4a ef       	ldi	r20, 0xFA	; 250
    4b8e:	54 e4       	ldi	r21, 0x44	; 68
    4b90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b94:	dc 01       	movw	r26, r24
    4b96:	cb 01       	movw	r24, r22
    4b98:	f8 01       	movw	r30, r16
    4b9a:	80 83       	st	Z, r24
    4b9c:	91 83       	std	Z+1, r25	; 0x01
    4b9e:	a2 83       	std	Z+2, r26	; 0x02
    4ba0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ba2:	fe 01       	movw	r30, r28
    4ba4:	ef 55       	subi	r30, 0x5F	; 95
    4ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ba8:	60 81       	ld	r22, Z
    4baa:	71 81       	ldd	r23, Z+1	; 0x01
    4bac:	82 81       	ldd	r24, Z+2	; 0x02
    4bae:	93 81       	ldd	r25, Z+3	; 0x03
    4bb0:	20 e0       	ldi	r18, 0x00	; 0
    4bb2:	30 e0       	ldi	r19, 0x00	; 0
    4bb4:	40 e8       	ldi	r20, 0x80	; 128
    4bb6:	5f e3       	ldi	r21, 0x3F	; 63
    4bb8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4bbc:	88 23       	and	r24, r24
    4bbe:	44 f4       	brge	.+16     	; 0x4bd0 <LED_voidShiftLeftRight+0x596>
		__ticks = 1;
    4bc0:	fe 01       	movw	r30, r28
    4bc2:	e1 56       	subi	r30, 0x61	; 97
    4bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    4bc6:	81 e0       	ldi	r24, 0x01	; 1
    4bc8:	90 e0       	ldi	r25, 0x00	; 0
    4bca:	91 83       	std	Z+1, r25	; 0x01
    4bcc:	80 83       	st	Z, r24
    4bce:	64 c0       	rjmp	.+200    	; 0x4c98 <LED_voidShiftLeftRight+0x65e>
	else if (__tmp > 65535)
    4bd0:	fe 01       	movw	r30, r28
    4bd2:	ef 55       	subi	r30, 0x5F	; 95
    4bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    4bd6:	60 81       	ld	r22, Z
    4bd8:	71 81       	ldd	r23, Z+1	; 0x01
    4bda:	82 81       	ldd	r24, Z+2	; 0x02
    4bdc:	93 81       	ldd	r25, Z+3	; 0x03
    4bde:	20 e0       	ldi	r18, 0x00	; 0
    4be0:	3f ef       	ldi	r19, 0xFF	; 255
    4be2:	4f e7       	ldi	r20, 0x7F	; 127
    4be4:	57 e4       	ldi	r21, 0x47	; 71
    4be6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4bea:	18 16       	cp	r1, r24
    4bec:	0c f0       	brlt	.+2      	; 0x4bf0 <LED_voidShiftLeftRight+0x5b6>
    4bee:	43 c0       	rjmp	.+134    	; 0x4c76 <LED_voidShiftLeftRight+0x63c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4bf0:	fe 01       	movw	r30, r28
    4bf2:	eb 55       	subi	r30, 0x5B	; 91
    4bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    4bf6:	60 81       	ld	r22, Z
    4bf8:	71 81       	ldd	r23, Z+1	; 0x01
    4bfa:	82 81       	ldd	r24, Z+2	; 0x02
    4bfc:	93 81       	ldd	r25, Z+3	; 0x03
    4bfe:	20 e0       	ldi	r18, 0x00	; 0
    4c00:	30 e0       	ldi	r19, 0x00	; 0
    4c02:	40 e2       	ldi	r20, 0x20	; 32
    4c04:	51 e4       	ldi	r21, 0x41	; 65
    4c06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4c0a:	dc 01       	movw	r26, r24
    4c0c:	cb 01       	movw	r24, r22
    4c0e:	8e 01       	movw	r16, r28
    4c10:	01 56       	subi	r16, 0x61	; 97
    4c12:	1f 4f       	sbci	r17, 0xFF	; 255
    4c14:	bc 01       	movw	r22, r24
    4c16:	cd 01       	movw	r24, r26
    4c18:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c1c:	dc 01       	movw	r26, r24
    4c1e:	cb 01       	movw	r24, r22
    4c20:	f8 01       	movw	r30, r16
    4c22:	91 83       	std	Z+1, r25	; 0x01
    4c24:	80 83       	st	Z, r24
    4c26:	1f c0       	rjmp	.+62     	; 0x4c66 <LED_voidShiftLeftRight+0x62c>
    4c28:	fe 01       	movw	r30, r28
    4c2a:	e3 56       	subi	r30, 0x63	; 99
    4c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    4c2e:	88 ec       	ldi	r24, 0xC8	; 200
    4c30:	90 e0       	ldi	r25, 0x00	; 0
    4c32:	91 83       	std	Z+1, r25	; 0x01
    4c34:	80 83       	st	Z, r24
    4c36:	fe 01       	movw	r30, r28
    4c38:	e3 56       	subi	r30, 0x63	; 99
    4c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    4c3c:	80 81       	ld	r24, Z
    4c3e:	91 81       	ldd	r25, Z+1	; 0x01
    4c40:	01 97       	sbiw	r24, 0x01	; 1
    4c42:	f1 f7       	brne	.-4      	; 0x4c40 <LED_voidShiftLeftRight+0x606>
    4c44:	fe 01       	movw	r30, r28
    4c46:	e3 56       	subi	r30, 0x63	; 99
    4c48:	ff 4f       	sbci	r31, 0xFF	; 255
    4c4a:	91 83       	std	Z+1, r25	; 0x01
    4c4c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c4e:	de 01       	movw	r26, r28
    4c50:	a1 56       	subi	r26, 0x61	; 97
    4c52:	bf 4f       	sbci	r27, 0xFF	; 255
    4c54:	fe 01       	movw	r30, r28
    4c56:	e1 56       	subi	r30, 0x61	; 97
    4c58:	ff 4f       	sbci	r31, 0xFF	; 255
    4c5a:	80 81       	ld	r24, Z
    4c5c:	91 81       	ldd	r25, Z+1	; 0x01
    4c5e:	01 97       	sbiw	r24, 0x01	; 1
    4c60:	11 96       	adiw	r26, 0x01	; 1
    4c62:	9c 93       	st	X, r25
    4c64:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c66:	fe 01       	movw	r30, r28
    4c68:	e1 56       	subi	r30, 0x61	; 97
    4c6a:	ff 4f       	sbci	r31, 0xFF	; 255
    4c6c:	80 81       	ld	r24, Z
    4c6e:	91 81       	ldd	r25, Z+1	; 0x01
    4c70:	00 97       	sbiw	r24, 0x00	; 0
    4c72:	d1 f6       	brne	.-76     	; 0x4c28 <LED_voidShiftLeftRight+0x5ee>
    4c74:	27 c0       	rjmp	.+78     	; 0x4cc4 <LED_voidShiftLeftRight+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c76:	8e 01       	movw	r16, r28
    4c78:	01 56       	subi	r16, 0x61	; 97
    4c7a:	1f 4f       	sbci	r17, 0xFF	; 255
    4c7c:	fe 01       	movw	r30, r28
    4c7e:	ef 55       	subi	r30, 0x5F	; 95
    4c80:	ff 4f       	sbci	r31, 0xFF	; 255
    4c82:	60 81       	ld	r22, Z
    4c84:	71 81       	ldd	r23, Z+1	; 0x01
    4c86:	82 81       	ldd	r24, Z+2	; 0x02
    4c88:	93 81       	ldd	r25, Z+3	; 0x03
    4c8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c8e:	dc 01       	movw	r26, r24
    4c90:	cb 01       	movw	r24, r22
    4c92:	f8 01       	movw	r30, r16
    4c94:	91 83       	std	Z+1, r25	; 0x01
    4c96:	80 83       	st	Z, r24
    4c98:	de 01       	movw	r26, r28
    4c9a:	a5 56       	subi	r26, 0x65	; 101
    4c9c:	bf 4f       	sbci	r27, 0xFF	; 255
    4c9e:	fe 01       	movw	r30, r28
    4ca0:	e1 56       	subi	r30, 0x61	; 97
    4ca2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ca4:	80 81       	ld	r24, Z
    4ca6:	91 81       	ldd	r25, Z+1	; 0x01
    4ca8:	8d 93       	st	X+, r24
    4caa:	9c 93       	st	X, r25
    4cac:	fe 01       	movw	r30, r28
    4cae:	e5 56       	subi	r30, 0x65	; 101
    4cb0:	ff 4f       	sbci	r31, 0xFF	; 255
    4cb2:	80 81       	ld	r24, Z
    4cb4:	91 81       	ldd	r25, Z+1	; 0x01
    4cb6:	01 97       	sbiw	r24, 0x01	; 1
    4cb8:	f1 f7       	brne	.-4      	; 0x4cb6 <LED_voidShiftLeftRight+0x67c>
    4cba:	fe 01       	movw	r30, r28
    4cbc:	e5 56       	subi	r30, 0x65	; 101
    4cbe:	ff 4f       	sbci	r31, 0xFF	; 255
    4cc0:	91 83       	std	Z+1, r25	; 0x01
    4cc2:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    4cc4:	fe 01       	movw	r30, r28
    4cc6:	ed 52       	subi	r30, 0x2D	; 45
    4cc8:	ff 4f       	sbci	r31, 0xFF	; 255
    4cca:	80 81       	ld	r24, Z
    4ccc:	60 e0       	ldi	r22, 0x00	; 0
    4cce:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN4, DIO_u8HIGH);
    4cd2:	fe 01       	movw	r30, r28
    4cd4:	ed 52       	subi	r30, 0x2D	; 45
    4cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    4cd8:	80 81       	ld	r24, Z
    4cda:	64 e0       	ldi	r22, 0x04	; 4
    4cdc:	41 e0       	ldi	r20, 0x01	; 1
    4cde:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    4ce2:	fe 01       	movw	r30, r28
    4ce4:	ec 52       	subi	r30, 0x2C	; 44
    4ce6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ce8:	80 81       	ld	r24, Z
    4cea:	88 2f       	mov	r24, r24
    4cec:	90 e0       	ldi	r25, 0x00	; 0
    4cee:	a0 e0       	ldi	r26, 0x00	; 0
    4cf0:	b0 e0       	ldi	r27, 0x00	; 0
    4cf2:	bc 01       	movw	r22, r24
    4cf4:	cd 01       	movw	r24, r26
    4cf6:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    4cfa:	dc 01       	movw	r26, r24
    4cfc:	cb 01       	movw	r24, r22
    4cfe:	fe 01       	movw	r30, r28
    4d00:	e9 56       	subi	r30, 0x69	; 105
    4d02:	ff 4f       	sbci	r31, 0xFF	; 255
    4d04:	80 83       	st	Z, r24
    4d06:	91 83       	std	Z+1, r25	; 0x01
    4d08:	a2 83       	std	Z+2, r26	; 0x02
    4d0a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d0c:	8e 01       	movw	r16, r28
    4d0e:	0d 56       	subi	r16, 0x6D	; 109
    4d10:	1f 4f       	sbci	r17, 0xFF	; 255
    4d12:	fe 01       	movw	r30, r28
    4d14:	e9 56       	subi	r30, 0x69	; 105
    4d16:	ff 4f       	sbci	r31, 0xFF	; 255
    4d18:	60 81       	ld	r22, Z
    4d1a:	71 81       	ldd	r23, Z+1	; 0x01
    4d1c:	82 81       	ldd	r24, Z+2	; 0x02
    4d1e:	93 81       	ldd	r25, Z+3	; 0x03
    4d20:	20 e0       	ldi	r18, 0x00	; 0
    4d22:	30 e0       	ldi	r19, 0x00	; 0
    4d24:	4a ef       	ldi	r20, 0xFA	; 250
    4d26:	54 e4       	ldi	r21, 0x44	; 68
    4d28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4d2c:	dc 01       	movw	r26, r24
    4d2e:	cb 01       	movw	r24, r22
    4d30:	f8 01       	movw	r30, r16
    4d32:	80 83       	st	Z, r24
    4d34:	91 83       	std	Z+1, r25	; 0x01
    4d36:	a2 83       	std	Z+2, r26	; 0x02
    4d38:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4d3a:	fe 01       	movw	r30, r28
    4d3c:	ed 56       	subi	r30, 0x6D	; 109
    4d3e:	ff 4f       	sbci	r31, 0xFF	; 255
    4d40:	60 81       	ld	r22, Z
    4d42:	71 81       	ldd	r23, Z+1	; 0x01
    4d44:	82 81       	ldd	r24, Z+2	; 0x02
    4d46:	93 81       	ldd	r25, Z+3	; 0x03
    4d48:	20 e0       	ldi	r18, 0x00	; 0
    4d4a:	30 e0       	ldi	r19, 0x00	; 0
    4d4c:	40 e8       	ldi	r20, 0x80	; 128
    4d4e:	5f e3       	ldi	r21, 0x3F	; 63
    4d50:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4d54:	88 23       	and	r24, r24
    4d56:	44 f4       	brge	.+16     	; 0x4d68 <LED_voidShiftLeftRight+0x72e>
		__ticks = 1;
    4d58:	fe 01       	movw	r30, r28
    4d5a:	ef 56       	subi	r30, 0x6F	; 111
    4d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    4d5e:	81 e0       	ldi	r24, 0x01	; 1
    4d60:	90 e0       	ldi	r25, 0x00	; 0
    4d62:	91 83       	std	Z+1, r25	; 0x01
    4d64:	80 83       	st	Z, r24
    4d66:	64 c0       	rjmp	.+200    	; 0x4e30 <LED_voidShiftLeftRight+0x7f6>
	else if (__tmp > 65535)
    4d68:	fe 01       	movw	r30, r28
    4d6a:	ed 56       	subi	r30, 0x6D	; 109
    4d6c:	ff 4f       	sbci	r31, 0xFF	; 255
    4d6e:	60 81       	ld	r22, Z
    4d70:	71 81       	ldd	r23, Z+1	; 0x01
    4d72:	82 81       	ldd	r24, Z+2	; 0x02
    4d74:	93 81       	ldd	r25, Z+3	; 0x03
    4d76:	20 e0       	ldi	r18, 0x00	; 0
    4d78:	3f ef       	ldi	r19, 0xFF	; 255
    4d7a:	4f e7       	ldi	r20, 0x7F	; 127
    4d7c:	57 e4       	ldi	r21, 0x47	; 71
    4d7e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4d82:	18 16       	cp	r1, r24
    4d84:	0c f0       	brlt	.+2      	; 0x4d88 <LED_voidShiftLeftRight+0x74e>
    4d86:	43 c0       	rjmp	.+134    	; 0x4e0e <LED_voidShiftLeftRight+0x7d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d88:	fe 01       	movw	r30, r28
    4d8a:	e9 56       	subi	r30, 0x69	; 105
    4d8c:	ff 4f       	sbci	r31, 0xFF	; 255
    4d8e:	60 81       	ld	r22, Z
    4d90:	71 81       	ldd	r23, Z+1	; 0x01
    4d92:	82 81       	ldd	r24, Z+2	; 0x02
    4d94:	93 81       	ldd	r25, Z+3	; 0x03
    4d96:	20 e0       	ldi	r18, 0x00	; 0
    4d98:	30 e0       	ldi	r19, 0x00	; 0
    4d9a:	40 e2       	ldi	r20, 0x20	; 32
    4d9c:	51 e4       	ldi	r21, 0x41	; 65
    4d9e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4da2:	dc 01       	movw	r26, r24
    4da4:	cb 01       	movw	r24, r22
    4da6:	8e 01       	movw	r16, r28
    4da8:	0f 56       	subi	r16, 0x6F	; 111
    4daa:	1f 4f       	sbci	r17, 0xFF	; 255
    4dac:	bc 01       	movw	r22, r24
    4dae:	cd 01       	movw	r24, r26
    4db0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4db4:	dc 01       	movw	r26, r24
    4db6:	cb 01       	movw	r24, r22
    4db8:	f8 01       	movw	r30, r16
    4dba:	91 83       	std	Z+1, r25	; 0x01
    4dbc:	80 83       	st	Z, r24
    4dbe:	1f c0       	rjmp	.+62     	; 0x4dfe <LED_voidShiftLeftRight+0x7c4>
    4dc0:	fe 01       	movw	r30, r28
    4dc2:	e1 57       	subi	r30, 0x71	; 113
    4dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    4dc6:	88 ec       	ldi	r24, 0xC8	; 200
    4dc8:	90 e0       	ldi	r25, 0x00	; 0
    4dca:	91 83       	std	Z+1, r25	; 0x01
    4dcc:	80 83       	st	Z, r24
    4dce:	fe 01       	movw	r30, r28
    4dd0:	e1 57       	subi	r30, 0x71	; 113
    4dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    4dd4:	80 81       	ld	r24, Z
    4dd6:	91 81       	ldd	r25, Z+1	; 0x01
    4dd8:	01 97       	sbiw	r24, 0x01	; 1
    4dda:	f1 f7       	brne	.-4      	; 0x4dd8 <LED_voidShiftLeftRight+0x79e>
    4ddc:	fe 01       	movw	r30, r28
    4dde:	e1 57       	subi	r30, 0x71	; 113
    4de0:	ff 4f       	sbci	r31, 0xFF	; 255
    4de2:	91 83       	std	Z+1, r25	; 0x01
    4de4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4de6:	de 01       	movw	r26, r28
    4de8:	af 56       	subi	r26, 0x6F	; 111
    4dea:	bf 4f       	sbci	r27, 0xFF	; 255
    4dec:	fe 01       	movw	r30, r28
    4dee:	ef 56       	subi	r30, 0x6F	; 111
    4df0:	ff 4f       	sbci	r31, 0xFF	; 255
    4df2:	80 81       	ld	r24, Z
    4df4:	91 81       	ldd	r25, Z+1	; 0x01
    4df6:	01 97       	sbiw	r24, 0x01	; 1
    4df8:	11 96       	adiw	r26, 0x01	; 1
    4dfa:	9c 93       	st	X, r25
    4dfc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4dfe:	fe 01       	movw	r30, r28
    4e00:	ef 56       	subi	r30, 0x6F	; 111
    4e02:	ff 4f       	sbci	r31, 0xFF	; 255
    4e04:	80 81       	ld	r24, Z
    4e06:	91 81       	ldd	r25, Z+1	; 0x01
    4e08:	00 97       	sbiw	r24, 0x00	; 0
    4e0a:	d1 f6       	brne	.-76     	; 0x4dc0 <LED_voidShiftLeftRight+0x786>
    4e0c:	27 c0       	rjmp	.+78     	; 0x4e5c <LED_voidShiftLeftRight+0x822>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e0e:	8e 01       	movw	r16, r28
    4e10:	0f 56       	subi	r16, 0x6F	; 111
    4e12:	1f 4f       	sbci	r17, 0xFF	; 255
    4e14:	fe 01       	movw	r30, r28
    4e16:	ed 56       	subi	r30, 0x6D	; 109
    4e18:	ff 4f       	sbci	r31, 0xFF	; 255
    4e1a:	60 81       	ld	r22, Z
    4e1c:	71 81       	ldd	r23, Z+1	; 0x01
    4e1e:	82 81       	ldd	r24, Z+2	; 0x02
    4e20:	93 81       	ldd	r25, Z+3	; 0x03
    4e22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e26:	dc 01       	movw	r26, r24
    4e28:	cb 01       	movw	r24, r22
    4e2a:	f8 01       	movw	r30, r16
    4e2c:	91 83       	std	Z+1, r25	; 0x01
    4e2e:	80 83       	st	Z, r24
    4e30:	de 01       	movw	r26, r28
    4e32:	a3 57       	subi	r26, 0x73	; 115
    4e34:	bf 4f       	sbci	r27, 0xFF	; 255
    4e36:	fe 01       	movw	r30, r28
    4e38:	ef 56       	subi	r30, 0x6F	; 111
    4e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    4e3c:	80 81       	ld	r24, Z
    4e3e:	91 81       	ldd	r25, Z+1	; 0x01
    4e40:	8d 93       	st	X+, r24
    4e42:	9c 93       	st	X, r25
    4e44:	fe 01       	movw	r30, r28
    4e46:	e3 57       	subi	r30, 0x73	; 115
    4e48:	ff 4f       	sbci	r31, 0xFF	; 255
    4e4a:	80 81       	ld	r24, Z
    4e4c:	91 81       	ldd	r25, Z+1	; 0x01
    4e4e:	01 97       	sbiw	r24, 0x01	; 1
    4e50:	f1 f7       	brne	.-4      	; 0x4e4e <LED_voidShiftLeftRight+0x814>
    4e52:	fe 01       	movw	r30, r28
    4e54:	e3 57       	subi	r30, 0x73	; 115
    4e56:	ff 4f       	sbci	r31, 0xFF	; 255
    4e58:	91 83       	std	Z+1, r25	; 0x01
    4e5a:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    4e5c:	fe 01       	movw	r30, r28
    4e5e:	ed 52       	subi	r30, 0x2D	; 45
    4e60:	ff 4f       	sbci	r31, 0xFF	; 255
    4e62:	80 81       	ld	r24, Z
    4e64:	60 e0       	ldi	r22, 0x00	; 0
    4e66:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN5, DIO_u8HIGH);
    4e6a:	fe 01       	movw	r30, r28
    4e6c:	ed 52       	subi	r30, 0x2D	; 45
    4e6e:	ff 4f       	sbci	r31, 0xFF	; 255
    4e70:	80 81       	ld	r24, Z
    4e72:	65 e0       	ldi	r22, 0x05	; 5
    4e74:	41 e0       	ldi	r20, 0x01	; 1
    4e76:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    4e7a:	fe 01       	movw	r30, r28
    4e7c:	ec 52       	subi	r30, 0x2C	; 44
    4e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    4e80:	80 81       	ld	r24, Z
    4e82:	88 2f       	mov	r24, r24
    4e84:	90 e0       	ldi	r25, 0x00	; 0
    4e86:	a0 e0       	ldi	r26, 0x00	; 0
    4e88:	b0 e0       	ldi	r27, 0x00	; 0
    4e8a:	bc 01       	movw	r22, r24
    4e8c:	cd 01       	movw	r24, r26
    4e8e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    4e92:	dc 01       	movw	r26, r24
    4e94:	cb 01       	movw	r24, r22
    4e96:	fe 01       	movw	r30, r28
    4e98:	e7 57       	subi	r30, 0x77	; 119
    4e9a:	ff 4f       	sbci	r31, 0xFF	; 255
    4e9c:	80 83       	st	Z, r24
    4e9e:	91 83       	std	Z+1, r25	; 0x01
    4ea0:	a2 83       	std	Z+2, r26	; 0x02
    4ea2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ea4:	8e 01       	movw	r16, r28
    4ea6:	0b 57       	subi	r16, 0x7B	; 123
    4ea8:	1f 4f       	sbci	r17, 0xFF	; 255
    4eaa:	fe 01       	movw	r30, r28
    4eac:	e7 57       	subi	r30, 0x77	; 119
    4eae:	ff 4f       	sbci	r31, 0xFF	; 255
    4eb0:	60 81       	ld	r22, Z
    4eb2:	71 81       	ldd	r23, Z+1	; 0x01
    4eb4:	82 81       	ldd	r24, Z+2	; 0x02
    4eb6:	93 81       	ldd	r25, Z+3	; 0x03
    4eb8:	20 e0       	ldi	r18, 0x00	; 0
    4eba:	30 e0       	ldi	r19, 0x00	; 0
    4ebc:	4a ef       	ldi	r20, 0xFA	; 250
    4ebe:	54 e4       	ldi	r21, 0x44	; 68
    4ec0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4ec4:	dc 01       	movw	r26, r24
    4ec6:	cb 01       	movw	r24, r22
    4ec8:	f8 01       	movw	r30, r16
    4eca:	80 83       	st	Z, r24
    4ecc:	91 83       	std	Z+1, r25	; 0x01
    4ece:	a2 83       	std	Z+2, r26	; 0x02
    4ed0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ed2:	fe 01       	movw	r30, r28
    4ed4:	eb 57       	subi	r30, 0x7B	; 123
    4ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ed8:	60 81       	ld	r22, Z
    4eda:	71 81       	ldd	r23, Z+1	; 0x01
    4edc:	82 81       	ldd	r24, Z+2	; 0x02
    4ede:	93 81       	ldd	r25, Z+3	; 0x03
    4ee0:	20 e0       	ldi	r18, 0x00	; 0
    4ee2:	30 e0       	ldi	r19, 0x00	; 0
    4ee4:	40 e8       	ldi	r20, 0x80	; 128
    4ee6:	5f e3       	ldi	r21, 0x3F	; 63
    4ee8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4eec:	88 23       	and	r24, r24
    4eee:	44 f4       	brge	.+16     	; 0x4f00 <LED_voidShiftLeftRight+0x8c6>
		__ticks = 1;
    4ef0:	fe 01       	movw	r30, r28
    4ef2:	ed 57       	subi	r30, 0x7D	; 125
    4ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    4ef6:	81 e0       	ldi	r24, 0x01	; 1
    4ef8:	90 e0       	ldi	r25, 0x00	; 0
    4efa:	91 83       	std	Z+1, r25	; 0x01
    4efc:	80 83       	st	Z, r24
    4efe:	64 c0       	rjmp	.+200    	; 0x4fc8 <LED_voidShiftLeftRight+0x98e>
	else if (__tmp > 65535)
    4f00:	fe 01       	movw	r30, r28
    4f02:	eb 57       	subi	r30, 0x7B	; 123
    4f04:	ff 4f       	sbci	r31, 0xFF	; 255
    4f06:	60 81       	ld	r22, Z
    4f08:	71 81       	ldd	r23, Z+1	; 0x01
    4f0a:	82 81       	ldd	r24, Z+2	; 0x02
    4f0c:	93 81       	ldd	r25, Z+3	; 0x03
    4f0e:	20 e0       	ldi	r18, 0x00	; 0
    4f10:	3f ef       	ldi	r19, 0xFF	; 255
    4f12:	4f e7       	ldi	r20, 0x7F	; 127
    4f14:	57 e4       	ldi	r21, 0x47	; 71
    4f16:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4f1a:	18 16       	cp	r1, r24
    4f1c:	0c f0       	brlt	.+2      	; 0x4f20 <LED_voidShiftLeftRight+0x8e6>
    4f1e:	43 c0       	rjmp	.+134    	; 0x4fa6 <LED_voidShiftLeftRight+0x96c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f20:	fe 01       	movw	r30, r28
    4f22:	e7 57       	subi	r30, 0x77	; 119
    4f24:	ff 4f       	sbci	r31, 0xFF	; 255
    4f26:	60 81       	ld	r22, Z
    4f28:	71 81       	ldd	r23, Z+1	; 0x01
    4f2a:	82 81       	ldd	r24, Z+2	; 0x02
    4f2c:	93 81       	ldd	r25, Z+3	; 0x03
    4f2e:	20 e0       	ldi	r18, 0x00	; 0
    4f30:	30 e0       	ldi	r19, 0x00	; 0
    4f32:	40 e2       	ldi	r20, 0x20	; 32
    4f34:	51 e4       	ldi	r21, 0x41	; 65
    4f36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4f3a:	dc 01       	movw	r26, r24
    4f3c:	cb 01       	movw	r24, r22
    4f3e:	8e 01       	movw	r16, r28
    4f40:	0d 57       	subi	r16, 0x7D	; 125
    4f42:	1f 4f       	sbci	r17, 0xFF	; 255
    4f44:	bc 01       	movw	r22, r24
    4f46:	cd 01       	movw	r24, r26
    4f48:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f4c:	dc 01       	movw	r26, r24
    4f4e:	cb 01       	movw	r24, r22
    4f50:	f8 01       	movw	r30, r16
    4f52:	91 83       	std	Z+1, r25	; 0x01
    4f54:	80 83       	st	Z, r24
    4f56:	1f c0       	rjmp	.+62     	; 0x4f96 <LED_voidShiftLeftRight+0x95c>
    4f58:	fe 01       	movw	r30, r28
    4f5a:	ef 57       	subi	r30, 0x7F	; 127
    4f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f5e:	88 ec       	ldi	r24, 0xC8	; 200
    4f60:	90 e0       	ldi	r25, 0x00	; 0
    4f62:	91 83       	std	Z+1, r25	; 0x01
    4f64:	80 83       	st	Z, r24
    4f66:	fe 01       	movw	r30, r28
    4f68:	ef 57       	subi	r30, 0x7F	; 127
    4f6a:	ff 4f       	sbci	r31, 0xFF	; 255
    4f6c:	80 81       	ld	r24, Z
    4f6e:	91 81       	ldd	r25, Z+1	; 0x01
    4f70:	01 97       	sbiw	r24, 0x01	; 1
    4f72:	f1 f7       	brne	.-4      	; 0x4f70 <LED_voidShiftLeftRight+0x936>
    4f74:	fe 01       	movw	r30, r28
    4f76:	ef 57       	subi	r30, 0x7F	; 127
    4f78:	ff 4f       	sbci	r31, 0xFF	; 255
    4f7a:	91 83       	std	Z+1, r25	; 0x01
    4f7c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f7e:	de 01       	movw	r26, r28
    4f80:	ad 57       	subi	r26, 0x7D	; 125
    4f82:	bf 4f       	sbci	r27, 0xFF	; 255
    4f84:	fe 01       	movw	r30, r28
    4f86:	ed 57       	subi	r30, 0x7D	; 125
    4f88:	ff 4f       	sbci	r31, 0xFF	; 255
    4f8a:	80 81       	ld	r24, Z
    4f8c:	91 81       	ldd	r25, Z+1	; 0x01
    4f8e:	01 97       	sbiw	r24, 0x01	; 1
    4f90:	11 96       	adiw	r26, 0x01	; 1
    4f92:	9c 93       	st	X, r25
    4f94:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f96:	fe 01       	movw	r30, r28
    4f98:	ed 57       	subi	r30, 0x7D	; 125
    4f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    4f9c:	80 81       	ld	r24, Z
    4f9e:	91 81       	ldd	r25, Z+1	; 0x01
    4fa0:	00 97       	sbiw	r24, 0x00	; 0
    4fa2:	d1 f6       	brne	.-76     	; 0x4f58 <LED_voidShiftLeftRight+0x91e>
    4fa4:	27 c0       	rjmp	.+78     	; 0x4ff4 <LED_voidShiftLeftRight+0x9ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4fa6:	8e 01       	movw	r16, r28
    4fa8:	0d 57       	subi	r16, 0x7D	; 125
    4faa:	1f 4f       	sbci	r17, 0xFF	; 255
    4fac:	fe 01       	movw	r30, r28
    4fae:	eb 57       	subi	r30, 0x7B	; 123
    4fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    4fb2:	60 81       	ld	r22, Z
    4fb4:	71 81       	ldd	r23, Z+1	; 0x01
    4fb6:	82 81       	ldd	r24, Z+2	; 0x02
    4fb8:	93 81       	ldd	r25, Z+3	; 0x03
    4fba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4fbe:	dc 01       	movw	r26, r24
    4fc0:	cb 01       	movw	r24, r22
    4fc2:	f8 01       	movw	r30, r16
    4fc4:	91 83       	std	Z+1, r25	; 0x01
    4fc6:	80 83       	st	Z, r24
    4fc8:	de 01       	movw	r26, r28
    4fca:	a1 58       	subi	r26, 0x81	; 129
    4fcc:	bf 4f       	sbci	r27, 0xFF	; 255
    4fce:	fe 01       	movw	r30, r28
    4fd0:	ed 57       	subi	r30, 0x7D	; 125
    4fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    4fd4:	80 81       	ld	r24, Z
    4fd6:	91 81       	ldd	r25, Z+1	; 0x01
    4fd8:	8d 93       	st	X+, r24
    4fda:	9c 93       	st	X, r25
    4fdc:	fe 01       	movw	r30, r28
    4fde:	e1 58       	subi	r30, 0x81	; 129
    4fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    4fe2:	80 81       	ld	r24, Z
    4fe4:	91 81       	ldd	r25, Z+1	; 0x01
    4fe6:	01 97       	sbiw	r24, 0x01	; 1
    4fe8:	f1 f7       	brne	.-4      	; 0x4fe6 <LED_voidShiftLeftRight+0x9ac>
    4fea:	fe 01       	movw	r30, r28
    4fec:	e1 58       	subi	r30, 0x81	; 129
    4fee:	ff 4f       	sbci	r31, 0xFF	; 255
    4ff0:	91 83       	std	Z+1, r25	; 0x01
    4ff2:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    4ff4:	fe 01       	movw	r30, r28
    4ff6:	ed 52       	subi	r30, 0x2D	; 45
    4ff8:	ff 4f       	sbci	r31, 0xFF	; 255
    4ffa:	80 81       	ld	r24, Z
    4ffc:	60 e0       	ldi	r22, 0x00	; 0
    4ffe:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN6, DIO_u8HIGH);
    5002:	fe 01       	movw	r30, r28
    5004:	ed 52       	subi	r30, 0x2D	; 45
    5006:	ff 4f       	sbci	r31, 0xFF	; 255
    5008:	80 81       	ld	r24, Z
    500a:	66 e0       	ldi	r22, 0x06	; 6
    500c:	41 e0       	ldi	r20, 0x01	; 1
    500e:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    5012:	fe 01       	movw	r30, r28
    5014:	ec 52       	subi	r30, 0x2C	; 44
    5016:	ff 4f       	sbci	r31, 0xFF	; 255
    5018:	80 81       	ld	r24, Z
    501a:	88 2f       	mov	r24, r24
    501c:	90 e0       	ldi	r25, 0x00	; 0
    501e:	a0 e0       	ldi	r26, 0x00	; 0
    5020:	b0 e0       	ldi	r27, 0x00	; 0
    5022:	bc 01       	movw	r22, r24
    5024:	cd 01       	movw	r24, r26
    5026:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    502a:	dc 01       	movw	r26, r24
    502c:	cb 01       	movw	r24, r22
    502e:	fe 01       	movw	r30, r28
    5030:	e5 58       	subi	r30, 0x85	; 133
    5032:	ff 4f       	sbci	r31, 0xFF	; 255
    5034:	80 83       	st	Z, r24
    5036:	91 83       	std	Z+1, r25	; 0x01
    5038:	a2 83       	std	Z+2, r26	; 0x02
    503a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    503c:	8e 01       	movw	r16, r28
    503e:	09 58       	subi	r16, 0x89	; 137
    5040:	1f 4f       	sbci	r17, 0xFF	; 255
    5042:	fe 01       	movw	r30, r28
    5044:	e5 58       	subi	r30, 0x85	; 133
    5046:	ff 4f       	sbci	r31, 0xFF	; 255
    5048:	60 81       	ld	r22, Z
    504a:	71 81       	ldd	r23, Z+1	; 0x01
    504c:	82 81       	ldd	r24, Z+2	; 0x02
    504e:	93 81       	ldd	r25, Z+3	; 0x03
    5050:	20 e0       	ldi	r18, 0x00	; 0
    5052:	30 e0       	ldi	r19, 0x00	; 0
    5054:	4a ef       	ldi	r20, 0xFA	; 250
    5056:	54 e4       	ldi	r21, 0x44	; 68
    5058:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    505c:	dc 01       	movw	r26, r24
    505e:	cb 01       	movw	r24, r22
    5060:	f8 01       	movw	r30, r16
    5062:	80 83       	st	Z, r24
    5064:	91 83       	std	Z+1, r25	; 0x01
    5066:	a2 83       	std	Z+2, r26	; 0x02
    5068:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    506a:	fe 01       	movw	r30, r28
    506c:	e9 58       	subi	r30, 0x89	; 137
    506e:	ff 4f       	sbci	r31, 0xFF	; 255
    5070:	60 81       	ld	r22, Z
    5072:	71 81       	ldd	r23, Z+1	; 0x01
    5074:	82 81       	ldd	r24, Z+2	; 0x02
    5076:	93 81       	ldd	r25, Z+3	; 0x03
    5078:	20 e0       	ldi	r18, 0x00	; 0
    507a:	30 e0       	ldi	r19, 0x00	; 0
    507c:	40 e8       	ldi	r20, 0x80	; 128
    507e:	5f e3       	ldi	r21, 0x3F	; 63
    5080:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5084:	88 23       	and	r24, r24
    5086:	44 f4       	brge	.+16     	; 0x5098 <LED_voidShiftLeftRight+0xa5e>
		__ticks = 1;
    5088:	fe 01       	movw	r30, r28
    508a:	eb 58       	subi	r30, 0x8B	; 139
    508c:	ff 4f       	sbci	r31, 0xFF	; 255
    508e:	81 e0       	ldi	r24, 0x01	; 1
    5090:	90 e0       	ldi	r25, 0x00	; 0
    5092:	91 83       	std	Z+1, r25	; 0x01
    5094:	80 83       	st	Z, r24
    5096:	64 c0       	rjmp	.+200    	; 0x5160 <LED_voidShiftLeftRight+0xb26>
	else if (__tmp > 65535)
    5098:	fe 01       	movw	r30, r28
    509a:	e9 58       	subi	r30, 0x89	; 137
    509c:	ff 4f       	sbci	r31, 0xFF	; 255
    509e:	60 81       	ld	r22, Z
    50a0:	71 81       	ldd	r23, Z+1	; 0x01
    50a2:	82 81       	ldd	r24, Z+2	; 0x02
    50a4:	93 81       	ldd	r25, Z+3	; 0x03
    50a6:	20 e0       	ldi	r18, 0x00	; 0
    50a8:	3f ef       	ldi	r19, 0xFF	; 255
    50aa:	4f e7       	ldi	r20, 0x7F	; 127
    50ac:	57 e4       	ldi	r21, 0x47	; 71
    50ae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    50b2:	18 16       	cp	r1, r24
    50b4:	0c f0       	brlt	.+2      	; 0x50b8 <LED_voidShiftLeftRight+0xa7e>
    50b6:	43 c0       	rjmp	.+134    	; 0x513e <LED_voidShiftLeftRight+0xb04>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    50b8:	fe 01       	movw	r30, r28
    50ba:	e5 58       	subi	r30, 0x85	; 133
    50bc:	ff 4f       	sbci	r31, 0xFF	; 255
    50be:	60 81       	ld	r22, Z
    50c0:	71 81       	ldd	r23, Z+1	; 0x01
    50c2:	82 81       	ldd	r24, Z+2	; 0x02
    50c4:	93 81       	ldd	r25, Z+3	; 0x03
    50c6:	20 e0       	ldi	r18, 0x00	; 0
    50c8:	30 e0       	ldi	r19, 0x00	; 0
    50ca:	40 e2       	ldi	r20, 0x20	; 32
    50cc:	51 e4       	ldi	r21, 0x41	; 65
    50ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    50d2:	dc 01       	movw	r26, r24
    50d4:	cb 01       	movw	r24, r22
    50d6:	8e 01       	movw	r16, r28
    50d8:	0b 58       	subi	r16, 0x8B	; 139
    50da:	1f 4f       	sbci	r17, 0xFF	; 255
    50dc:	bc 01       	movw	r22, r24
    50de:	cd 01       	movw	r24, r26
    50e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    50e4:	dc 01       	movw	r26, r24
    50e6:	cb 01       	movw	r24, r22
    50e8:	f8 01       	movw	r30, r16
    50ea:	91 83       	std	Z+1, r25	; 0x01
    50ec:	80 83       	st	Z, r24
    50ee:	1f c0       	rjmp	.+62     	; 0x512e <LED_voidShiftLeftRight+0xaf4>
    50f0:	fe 01       	movw	r30, r28
    50f2:	ed 58       	subi	r30, 0x8D	; 141
    50f4:	ff 4f       	sbci	r31, 0xFF	; 255
    50f6:	88 ec       	ldi	r24, 0xC8	; 200
    50f8:	90 e0       	ldi	r25, 0x00	; 0
    50fa:	91 83       	std	Z+1, r25	; 0x01
    50fc:	80 83       	st	Z, r24
    50fe:	fe 01       	movw	r30, r28
    5100:	ed 58       	subi	r30, 0x8D	; 141
    5102:	ff 4f       	sbci	r31, 0xFF	; 255
    5104:	80 81       	ld	r24, Z
    5106:	91 81       	ldd	r25, Z+1	; 0x01
    5108:	01 97       	sbiw	r24, 0x01	; 1
    510a:	f1 f7       	brne	.-4      	; 0x5108 <LED_voidShiftLeftRight+0xace>
    510c:	fe 01       	movw	r30, r28
    510e:	ed 58       	subi	r30, 0x8D	; 141
    5110:	ff 4f       	sbci	r31, 0xFF	; 255
    5112:	91 83       	std	Z+1, r25	; 0x01
    5114:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5116:	de 01       	movw	r26, r28
    5118:	ab 58       	subi	r26, 0x8B	; 139
    511a:	bf 4f       	sbci	r27, 0xFF	; 255
    511c:	fe 01       	movw	r30, r28
    511e:	eb 58       	subi	r30, 0x8B	; 139
    5120:	ff 4f       	sbci	r31, 0xFF	; 255
    5122:	80 81       	ld	r24, Z
    5124:	91 81       	ldd	r25, Z+1	; 0x01
    5126:	01 97       	sbiw	r24, 0x01	; 1
    5128:	11 96       	adiw	r26, 0x01	; 1
    512a:	9c 93       	st	X, r25
    512c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    512e:	fe 01       	movw	r30, r28
    5130:	eb 58       	subi	r30, 0x8B	; 139
    5132:	ff 4f       	sbci	r31, 0xFF	; 255
    5134:	80 81       	ld	r24, Z
    5136:	91 81       	ldd	r25, Z+1	; 0x01
    5138:	00 97       	sbiw	r24, 0x00	; 0
    513a:	d1 f6       	brne	.-76     	; 0x50f0 <LED_voidShiftLeftRight+0xab6>
    513c:	27 c0       	rjmp	.+78     	; 0x518c <LED_voidShiftLeftRight+0xb52>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    513e:	8e 01       	movw	r16, r28
    5140:	0b 58       	subi	r16, 0x8B	; 139
    5142:	1f 4f       	sbci	r17, 0xFF	; 255
    5144:	fe 01       	movw	r30, r28
    5146:	e9 58       	subi	r30, 0x89	; 137
    5148:	ff 4f       	sbci	r31, 0xFF	; 255
    514a:	60 81       	ld	r22, Z
    514c:	71 81       	ldd	r23, Z+1	; 0x01
    514e:	82 81       	ldd	r24, Z+2	; 0x02
    5150:	93 81       	ldd	r25, Z+3	; 0x03
    5152:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5156:	dc 01       	movw	r26, r24
    5158:	cb 01       	movw	r24, r22
    515a:	f8 01       	movw	r30, r16
    515c:	91 83       	std	Z+1, r25	; 0x01
    515e:	80 83       	st	Z, r24
    5160:	de 01       	movw	r26, r28
    5162:	af 58       	subi	r26, 0x8F	; 143
    5164:	bf 4f       	sbci	r27, 0xFF	; 255
    5166:	fe 01       	movw	r30, r28
    5168:	eb 58       	subi	r30, 0x8B	; 139
    516a:	ff 4f       	sbci	r31, 0xFF	; 255
    516c:	80 81       	ld	r24, Z
    516e:	91 81       	ldd	r25, Z+1	; 0x01
    5170:	8d 93       	st	X+, r24
    5172:	9c 93       	st	X, r25
    5174:	fe 01       	movw	r30, r28
    5176:	ef 58       	subi	r30, 0x8F	; 143
    5178:	ff 4f       	sbci	r31, 0xFF	; 255
    517a:	80 81       	ld	r24, Z
    517c:	91 81       	ldd	r25, Z+1	; 0x01
    517e:	01 97       	sbiw	r24, 0x01	; 1
    5180:	f1 f7       	brne	.-4      	; 0x517e <LED_voidShiftLeftRight+0xb44>
    5182:	fe 01       	movw	r30, r28
    5184:	ef 58       	subi	r30, 0x8F	; 143
    5186:	ff 4f       	sbci	r31, 0xFF	; 255
    5188:	91 83       	std	Z+1, r25	; 0x01
    518a:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    518c:	fe 01       	movw	r30, r28
    518e:	ed 52       	subi	r30, 0x2D	; 45
    5190:	ff 4f       	sbci	r31, 0xFF	; 255
    5192:	80 81       	ld	r24, Z
    5194:	60 e0       	ldi	r22, 0x00	; 0
    5196:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN7, DIO_u8HIGH);
    519a:	fe 01       	movw	r30, r28
    519c:	ed 52       	subi	r30, 0x2D	; 45
    519e:	ff 4f       	sbci	r31, 0xFF	; 255
    51a0:	80 81       	ld	r24, Z
    51a2:	67 e0       	ldi	r22, 0x07	; 7
    51a4:	41 e0       	ldi	r20, 0x01	; 1
    51a6:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    51aa:	fe 01       	movw	r30, r28
    51ac:	ec 52       	subi	r30, 0x2C	; 44
    51ae:	ff 4f       	sbci	r31, 0xFF	; 255
    51b0:	80 81       	ld	r24, Z
    51b2:	88 2f       	mov	r24, r24
    51b4:	90 e0       	ldi	r25, 0x00	; 0
    51b6:	a0 e0       	ldi	r26, 0x00	; 0
    51b8:	b0 e0       	ldi	r27, 0x00	; 0
    51ba:	bc 01       	movw	r22, r24
    51bc:	cd 01       	movw	r24, r26
    51be:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    51c2:	dc 01       	movw	r26, r24
    51c4:	cb 01       	movw	r24, r22
    51c6:	fe 01       	movw	r30, r28
    51c8:	e3 59       	subi	r30, 0x93	; 147
    51ca:	ff 4f       	sbci	r31, 0xFF	; 255
    51cc:	80 83       	st	Z, r24
    51ce:	91 83       	std	Z+1, r25	; 0x01
    51d0:	a2 83       	std	Z+2, r26	; 0x02
    51d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    51d4:	8e 01       	movw	r16, r28
    51d6:	07 59       	subi	r16, 0x97	; 151
    51d8:	1f 4f       	sbci	r17, 0xFF	; 255
    51da:	fe 01       	movw	r30, r28
    51dc:	e3 59       	subi	r30, 0x93	; 147
    51de:	ff 4f       	sbci	r31, 0xFF	; 255
    51e0:	60 81       	ld	r22, Z
    51e2:	71 81       	ldd	r23, Z+1	; 0x01
    51e4:	82 81       	ldd	r24, Z+2	; 0x02
    51e6:	93 81       	ldd	r25, Z+3	; 0x03
    51e8:	20 e0       	ldi	r18, 0x00	; 0
    51ea:	30 e0       	ldi	r19, 0x00	; 0
    51ec:	4a ef       	ldi	r20, 0xFA	; 250
    51ee:	54 e4       	ldi	r21, 0x44	; 68
    51f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    51f4:	dc 01       	movw	r26, r24
    51f6:	cb 01       	movw	r24, r22
    51f8:	f8 01       	movw	r30, r16
    51fa:	80 83       	st	Z, r24
    51fc:	91 83       	std	Z+1, r25	; 0x01
    51fe:	a2 83       	std	Z+2, r26	; 0x02
    5200:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5202:	fe 01       	movw	r30, r28
    5204:	e7 59       	subi	r30, 0x97	; 151
    5206:	ff 4f       	sbci	r31, 0xFF	; 255
    5208:	60 81       	ld	r22, Z
    520a:	71 81       	ldd	r23, Z+1	; 0x01
    520c:	82 81       	ldd	r24, Z+2	; 0x02
    520e:	93 81       	ldd	r25, Z+3	; 0x03
    5210:	20 e0       	ldi	r18, 0x00	; 0
    5212:	30 e0       	ldi	r19, 0x00	; 0
    5214:	40 e8       	ldi	r20, 0x80	; 128
    5216:	5f e3       	ldi	r21, 0x3F	; 63
    5218:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    521c:	88 23       	and	r24, r24
    521e:	44 f4       	brge	.+16     	; 0x5230 <LED_voidShiftLeftRight+0xbf6>
		__ticks = 1;
    5220:	fe 01       	movw	r30, r28
    5222:	e9 59       	subi	r30, 0x99	; 153
    5224:	ff 4f       	sbci	r31, 0xFF	; 255
    5226:	81 e0       	ldi	r24, 0x01	; 1
    5228:	90 e0       	ldi	r25, 0x00	; 0
    522a:	91 83       	std	Z+1, r25	; 0x01
    522c:	80 83       	st	Z, r24
    522e:	64 c0       	rjmp	.+200    	; 0x52f8 <LED_voidShiftLeftRight+0xcbe>
	else if (__tmp > 65535)
    5230:	fe 01       	movw	r30, r28
    5232:	e7 59       	subi	r30, 0x97	; 151
    5234:	ff 4f       	sbci	r31, 0xFF	; 255
    5236:	60 81       	ld	r22, Z
    5238:	71 81       	ldd	r23, Z+1	; 0x01
    523a:	82 81       	ldd	r24, Z+2	; 0x02
    523c:	93 81       	ldd	r25, Z+3	; 0x03
    523e:	20 e0       	ldi	r18, 0x00	; 0
    5240:	3f ef       	ldi	r19, 0xFF	; 255
    5242:	4f e7       	ldi	r20, 0x7F	; 127
    5244:	57 e4       	ldi	r21, 0x47	; 71
    5246:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    524a:	18 16       	cp	r1, r24
    524c:	0c f0       	brlt	.+2      	; 0x5250 <LED_voidShiftLeftRight+0xc16>
    524e:	43 c0       	rjmp	.+134    	; 0x52d6 <LED_voidShiftLeftRight+0xc9c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5250:	fe 01       	movw	r30, r28
    5252:	e3 59       	subi	r30, 0x93	; 147
    5254:	ff 4f       	sbci	r31, 0xFF	; 255
    5256:	60 81       	ld	r22, Z
    5258:	71 81       	ldd	r23, Z+1	; 0x01
    525a:	82 81       	ldd	r24, Z+2	; 0x02
    525c:	93 81       	ldd	r25, Z+3	; 0x03
    525e:	20 e0       	ldi	r18, 0x00	; 0
    5260:	30 e0       	ldi	r19, 0x00	; 0
    5262:	40 e2       	ldi	r20, 0x20	; 32
    5264:	51 e4       	ldi	r21, 0x41	; 65
    5266:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    526a:	dc 01       	movw	r26, r24
    526c:	cb 01       	movw	r24, r22
    526e:	8e 01       	movw	r16, r28
    5270:	09 59       	subi	r16, 0x99	; 153
    5272:	1f 4f       	sbci	r17, 0xFF	; 255
    5274:	bc 01       	movw	r22, r24
    5276:	cd 01       	movw	r24, r26
    5278:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    527c:	dc 01       	movw	r26, r24
    527e:	cb 01       	movw	r24, r22
    5280:	f8 01       	movw	r30, r16
    5282:	91 83       	std	Z+1, r25	; 0x01
    5284:	80 83       	st	Z, r24
    5286:	1f c0       	rjmp	.+62     	; 0x52c6 <LED_voidShiftLeftRight+0xc8c>
    5288:	fe 01       	movw	r30, r28
    528a:	eb 59       	subi	r30, 0x9B	; 155
    528c:	ff 4f       	sbci	r31, 0xFF	; 255
    528e:	88 ec       	ldi	r24, 0xC8	; 200
    5290:	90 e0       	ldi	r25, 0x00	; 0
    5292:	91 83       	std	Z+1, r25	; 0x01
    5294:	80 83       	st	Z, r24
    5296:	fe 01       	movw	r30, r28
    5298:	eb 59       	subi	r30, 0x9B	; 155
    529a:	ff 4f       	sbci	r31, 0xFF	; 255
    529c:	80 81       	ld	r24, Z
    529e:	91 81       	ldd	r25, Z+1	; 0x01
    52a0:	01 97       	sbiw	r24, 0x01	; 1
    52a2:	f1 f7       	brne	.-4      	; 0x52a0 <LED_voidShiftLeftRight+0xc66>
    52a4:	fe 01       	movw	r30, r28
    52a6:	eb 59       	subi	r30, 0x9B	; 155
    52a8:	ff 4f       	sbci	r31, 0xFF	; 255
    52aa:	91 83       	std	Z+1, r25	; 0x01
    52ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    52ae:	de 01       	movw	r26, r28
    52b0:	a9 59       	subi	r26, 0x99	; 153
    52b2:	bf 4f       	sbci	r27, 0xFF	; 255
    52b4:	fe 01       	movw	r30, r28
    52b6:	e9 59       	subi	r30, 0x99	; 153
    52b8:	ff 4f       	sbci	r31, 0xFF	; 255
    52ba:	80 81       	ld	r24, Z
    52bc:	91 81       	ldd	r25, Z+1	; 0x01
    52be:	01 97       	sbiw	r24, 0x01	; 1
    52c0:	11 96       	adiw	r26, 0x01	; 1
    52c2:	9c 93       	st	X, r25
    52c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    52c6:	fe 01       	movw	r30, r28
    52c8:	e9 59       	subi	r30, 0x99	; 153
    52ca:	ff 4f       	sbci	r31, 0xFF	; 255
    52cc:	80 81       	ld	r24, Z
    52ce:	91 81       	ldd	r25, Z+1	; 0x01
    52d0:	00 97       	sbiw	r24, 0x00	; 0
    52d2:	d1 f6       	brne	.-76     	; 0x5288 <LED_voidShiftLeftRight+0xc4e>
    52d4:	27 c0       	rjmp	.+78     	; 0x5324 <LED_voidShiftLeftRight+0xcea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    52d6:	8e 01       	movw	r16, r28
    52d8:	09 59       	subi	r16, 0x99	; 153
    52da:	1f 4f       	sbci	r17, 0xFF	; 255
    52dc:	fe 01       	movw	r30, r28
    52de:	e7 59       	subi	r30, 0x97	; 151
    52e0:	ff 4f       	sbci	r31, 0xFF	; 255
    52e2:	60 81       	ld	r22, Z
    52e4:	71 81       	ldd	r23, Z+1	; 0x01
    52e6:	82 81       	ldd	r24, Z+2	; 0x02
    52e8:	93 81       	ldd	r25, Z+3	; 0x03
    52ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    52ee:	dc 01       	movw	r26, r24
    52f0:	cb 01       	movw	r24, r22
    52f2:	f8 01       	movw	r30, r16
    52f4:	91 83       	std	Z+1, r25	; 0x01
    52f6:	80 83       	st	Z, r24
    52f8:	de 01       	movw	r26, r28
    52fa:	ad 59       	subi	r26, 0x9D	; 157
    52fc:	bf 4f       	sbci	r27, 0xFF	; 255
    52fe:	fe 01       	movw	r30, r28
    5300:	e9 59       	subi	r30, 0x99	; 153
    5302:	ff 4f       	sbci	r31, 0xFF	; 255
    5304:	80 81       	ld	r24, Z
    5306:	91 81       	ldd	r25, Z+1	; 0x01
    5308:	8d 93       	st	X+, r24
    530a:	9c 93       	st	X, r25
    530c:	fe 01       	movw	r30, r28
    530e:	ed 59       	subi	r30, 0x9D	; 157
    5310:	ff 4f       	sbci	r31, 0xFF	; 255
    5312:	80 81       	ld	r24, Z
    5314:	91 81       	ldd	r25, Z+1	; 0x01
    5316:	01 97       	sbiw	r24, 0x01	; 1
    5318:	f1 f7       	brne	.-4      	; 0x5316 <LED_voidShiftLeftRight+0xcdc>
    531a:	fe 01       	movw	r30, r28
    531c:	ed 59       	subi	r30, 0x9D	; 157
    531e:	ff 4f       	sbci	r31, 0xFF	; 255
    5320:	91 83       	std	Z+1, r25	; 0x01
    5322:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    5324:	fe 01       	movw	r30, r28
    5326:	ed 52       	subi	r30, 0x2D	; 45
    5328:	ff 4f       	sbci	r31, 0xFF	; 255
    532a:	80 81       	ld	r24, Z
    532c:	60 e0       	ldi	r22, 0x00	; 0
    532e:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>


	/*     	Shift Right		*/

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN6, DIO_u8HIGH);
    5332:	fe 01       	movw	r30, r28
    5334:	ed 52       	subi	r30, 0x2D	; 45
    5336:	ff 4f       	sbci	r31, 0xFF	; 255
    5338:	80 81       	ld	r24, Z
    533a:	66 e0       	ldi	r22, 0x06	; 6
    533c:	41 e0       	ldi	r20, 0x01	; 1
    533e:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    5342:	fe 01       	movw	r30, r28
    5344:	ec 52       	subi	r30, 0x2C	; 44
    5346:	ff 4f       	sbci	r31, 0xFF	; 255
    5348:	80 81       	ld	r24, Z
    534a:	88 2f       	mov	r24, r24
    534c:	90 e0       	ldi	r25, 0x00	; 0
    534e:	a0 e0       	ldi	r26, 0x00	; 0
    5350:	b0 e0       	ldi	r27, 0x00	; 0
    5352:	bc 01       	movw	r22, r24
    5354:	cd 01       	movw	r24, r26
    5356:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    535a:	dc 01       	movw	r26, r24
    535c:	cb 01       	movw	r24, r22
    535e:	fe 01       	movw	r30, r28
    5360:	e1 5a       	subi	r30, 0xA1	; 161
    5362:	ff 4f       	sbci	r31, 0xFF	; 255
    5364:	80 83       	st	Z, r24
    5366:	91 83       	std	Z+1, r25	; 0x01
    5368:	a2 83       	std	Z+2, r26	; 0x02
    536a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    536c:	8e 01       	movw	r16, r28
    536e:	05 5a       	subi	r16, 0xA5	; 165
    5370:	1f 4f       	sbci	r17, 0xFF	; 255
    5372:	fe 01       	movw	r30, r28
    5374:	e1 5a       	subi	r30, 0xA1	; 161
    5376:	ff 4f       	sbci	r31, 0xFF	; 255
    5378:	60 81       	ld	r22, Z
    537a:	71 81       	ldd	r23, Z+1	; 0x01
    537c:	82 81       	ldd	r24, Z+2	; 0x02
    537e:	93 81       	ldd	r25, Z+3	; 0x03
    5380:	20 e0       	ldi	r18, 0x00	; 0
    5382:	30 e0       	ldi	r19, 0x00	; 0
    5384:	4a ef       	ldi	r20, 0xFA	; 250
    5386:	54 e4       	ldi	r21, 0x44	; 68
    5388:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    538c:	dc 01       	movw	r26, r24
    538e:	cb 01       	movw	r24, r22
    5390:	f8 01       	movw	r30, r16
    5392:	80 83       	st	Z, r24
    5394:	91 83       	std	Z+1, r25	; 0x01
    5396:	a2 83       	std	Z+2, r26	; 0x02
    5398:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    539a:	fe 01       	movw	r30, r28
    539c:	e5 5a       	subi	r30, 0xA5	; 165
    539e:	ff 4f       	sbci	r31, 0xFF	; 255
    53a0:	60 81       	ld	r22, Z
    53a2:	71 81       	ldd	r23, Z+1	; 0x01
    53a4:	82 81       	ldd	r24, Z+2	; 0x02
    53a6:	93 81       	ldd	r25, Z+3	; 0x03
    53a8:	20 e0       	ldi	r18, 0x00	; 0
    53aa:	30 e0       	ldi	r19, 0x00	; 0
    53ac:	40 e8       	ldi	r20, 0x80	; 128
    53ae:	5f e3       	ldi	r21, 0x3F	; 63
    53b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    53b4:	88 23       	and	r24, r24
    53b6:	44 f4       	brge	.+16     	; 0x53c8 <LED_voidShiftLeftRight+0xd8e>
		__ticks = 1;
    53b8:	fe 01       	movw	r30, r28
    53ba:	e7 5a       	subi	r30, 0xA7	; 167
    53bc:	ff 4f       	sbci	r31, 0xFF	; 255
    53be:	81 e0       	ldi	r24, 0x01	; 1
    53c0:	90 e0       	ldi	r25, 0x00	; 0
    53c2:	91 83       	std	Z+1, r25	; 0x01
    53c4:	80 83       	st	Z, r24
    53c6:	64 c0       	rjmp	.+200    	; 0x5490 <LED_voidShiftLeftRight+0xe56>
	else if (__tmp > 65535)
    53c8:	fe 01       	movw	r30, r28
    53ca:	e5 5a       	subi	r30, 0xA5	; 165
    53cc:	ff 4f       	sbci	r31, 0xFF	; 255
    53ce:	60 81       	ld	r22, Z
    53d0:	71 81       	ldd	r23, Z+1	; 0x01
    53d2:	82 81       	ldd	r24, Z+2	; 0x02
    53d4:	93 81       	ldd	r25, Z+3	; 0x03
    53d6:	20 e0       	ldi	r18, 0x00	; 0
    53d8:	3f ef       	ldi	r19, 0xFF	; 255
    53da:	4f e7       	ldi	r20, 0x7F	; 127
    53dc:	57 e4       	ldi	r21, 0x47	; 71
    53de:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    53e2:	18 16       	cp	r1, r24
    53e4:	0c f0       	brlt	.+2      	; 0x53e8 <LED_voidShiftLeftRight+0xdae>
    53e6:	43 c0       	rjmp	.+134    	; 0x546e <LED_voidShiftLeftRight+0xe34>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53e8:	fe 01       	movw	r30, r28
    53ea:	e1 5a       	subi	r30, 0xA1	; 161
    53ec:	ff 4f       	sbci	r31, 0xFF	; 255
    53ee:	60 81       	ld	r22, Z
    53f0:	71 81       	ldd	r23, Z+1	; 0x01
    53f2:	82 81       	ldd	r24, Z+2	; 0x02
    53f4:	93 81       	ldd	r25, Z+3	; 0x03
    53f6:	20 e0       	ldi	r18, 0x00	; 0
    53f8:	30 e0       	ldi	r19, 0x00	; 0
    53fa:	40 e2       	ldi	r20, 0x20	; 32
    53fc:	51 e4       	ldi	r21, 0x41	; 65
    53fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5402:	dc 01       	movw	r26, r24
    5404:	cb 01       	movw	r24, r22
    5406:	8e 01       	movw	r16, r28
    5408:	07 5a       	subi	r16, 0xA7	; 167
    540a:	1f 4f       	sbci	r17, 0xFF	; 255
    540c:	bc 01       	movw	r22, r24
    540e:	cd 01       	movw	r24, r26
    5410:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5414:	dc 01       	movw	r26, r24
    5416:	cb 01       	movw	r24, r22
    5418:	f8 01       	movw	r30, r16
    541a:	91 83       	std	Z+1, r25	; 0x01
    541c:	80 83       	st	Z, r24
    541e:	1f c0       	rjmp	.+62     	; 0x545e <LED_voidShiftLeftRight+0xe24>
    5420:	fe 01       	movw	r30, r28
    5422:	e9 5a       	subi	r30, 0xA9	; 169
    5424:	ff 4f       	sbci	r31, 0xFF	; 255
    5426:	88 ec       	ldi	r24, 0xC8	; 200
    5428:	90 e0       	ldi	r25, 0x00	; 0
    542a:	91 83       	std	Z+1, r25	; 0x01
    542c:	80 83       	st	Z, r24
    542e:	fe 01       	movw	r30, r28
    5430:	e9 5a       	subi	r30, 0xA9	; 169
    5432:	ff 4f       	sbci	r31, 0xFF	; 255
    5434:	80 81       	ld	r24, Z
    5436:	91 81       	ldd	r25, Z+1	; 0x01
    5438:	01 97       	sbiw	r24, 0x01	; 1
    543a:	f1 f7       	brne	.-4      	; 0x5438 <LED_voidShiftLeftRight+0xdfe>
    543c:	fe 01       	movw	r30, r28
    543e:	e9 5a       	subi	r30, 0xA9	; 169
    5440:	ff 4f       	sbci	r31, 0xFF	; 255
    5442:	91 83       	std	Z+1, r25	; 0x01
    5444:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5446:	de 01       	movw	r26, r28
    5448:	a7 5a       	subi	r26, 0xA7	; 167
    544a:	bf 4f       	sbci	r27, 0xFF	; 255
    544c:	fe 01       	movw	r30, r28
    544e:	e7 5a       	subi	r30, 0xA7	; 167
    5450:	ff 4f       	sbci	r31, 0xFF	; 255
    5452:	80 81       	ld	r24, Z
    5454:	91 81       	ldd	r25, Z+1	; 0x01
    5456:	01 97       	sbiw	r24, 0x01	; 1
    5458:	11 96       	adiw	r26, 0x01	; 1
    545a:	9c 93       	st	X, r25
    545c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    545e:	fe 01       	movw	r30, r28
    5460:	e7 5a       	subi	r30, 0xA7	; 167
    5462:	ff 4f       	sbci	r31, 0xFF	; 255
    5464:	80 81       	ld	r24, Z
    5466:	91 81       	ldd	r25, Z+1	; 0x01
    5468:	00 97       	sbiw	r24, 0x00	; 0
    546a:	d1 f6       	brne	.-76     	; 0x5420 <LED_voidShiftLeftRight+0xde6>
    546c:	27 c0       	rjmp	.+78     	; 0x54bc <LED_voidShiftLeftRight+0xe82>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    546e:	8e 01       	movw	r16, r28
    5470:	07 5a       	subi	r16, 0xA7	; 167
    5472:	1f 4f       	sbci	r17, 0xFF	; 255
    5474:	fe 01       	movw	r30, r28
    5476:	e5 5a       	subi	r30, 0xA5	; 165
    5478:	ff 4f       	sbci	r31, 0xFF	; 255
    547a:	60 81       	ld	r22, Z
    547c:	71 81       	ldd	r23, Z+1	; 0x01
    547e:	82 81       	ldd	r24, Z+2	; 0x02
    5480:	93 81       	ldd	r25, Z+3	; 0x03
    5482:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5486:	dc 01       	movw	r26, r24
    5488:	cb 01       	movw	r24, r22
    548a:	f8 01       	movw	r30, r16
    548c:	91 83       	std	Z+1, r25	; 0x01
    548e:	80 83       	st	Z, r24
    5490:	de 01       	movw	r26, r28
    5492:	ab 5a       	subi	r26, 0xAB	; 171
    5494:	bf 4f       	sbci	r27, 0xFF	; 255
    5496:	fe 01       	movw	r30, r28
    5498:	e7 5a       	subi	r30, 0xA7	; 167
    549a:	ff 4f       	sbci	r31, 0xFF	; 255
    549c:	80 81       	ld	r24, Z
    549e:	91 81       	ldd	r25, Z+1	; 0x01
    54a0:	8d 93       	st	X+, r24
    54a2:	9c 93       	st	X, r25
    54a4:	fe 01       	movw	r30, r28
    54a6:	eb 5a       	subi	r30, 0xAB	; 171
    54a8:	ff 4f       	sbci	r31, 0xFF	; 255
    54aa:	80 81       	ld	r24, Z
    54ac:	91 81       	ldd	r25, Z+1	; 0x01
    54ae:	01 97       	sbiw	r24, 0x01	; 1
    54b0:	f1 f7       	brne	.-4      	; 0x54ae <LED_voidShiftLeftRight+0xe74>
    54b2:	fe 01       	movw	r30, r28
    54b4:	eb 5a       	subi	r30, 0xAB	; 171
    54b6:	ff 4f       	sbci	r31, 0xFF	; 255
    54b8:	91 83       	std	Z+1, r25	; 0x01
    54ba:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    54bc:	fe 01       	movw	r30, r28
    54be:	ed 52       	subi	r30, 0x2D	; 45
    54c0:	ff 4f       	sbci	r31, 0xFF	; 255
    54c2:	80 81       	ld	r24, Z
    54c4:	60 e0       	ldi	r22, 0x00	; 0
    54c6:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN5, DIO_u8HIGH);
    54ca:	fe 01       	movw	r30, r28
    54cc:	ed 52       	subi	r30, 0x2D	; 45
    54ce:	ff 4f       	sbci	r31, 0xFF	; 255
    54d0:	80 81       	ld	r24, Z
    54d2:	65 e0       	ldi	r22, 0x05	; 5
    54d4:	41 e0       	ldi	r20, 0x01	; 1
    54d6:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    54da:	fe 01       	movw	r30, r28
    54dc:	ec 52       	subi	r30, 0x2C	; 44
    54de:	ff 4f       	sbci	r31, 0xFF	; 255
    54e0:	80 81       	ld	r24, Z
    54e2:	88 2f       	mov	r24, r24
    54e4:	90 e0       	ldi	r25, 0x00	; 0
    54e6:	a0 e0       	ldi	r26, 0x00	; 0
    54e8:	b0 e0       	ldi	r27, 0x00	; 0
    54ea:	bc 01       	movw	r22, r24
    54ec:	cd 01       	movw	r24, r26
    54ee:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    54f2:	dc 01       	movw	r26, r24
    54f4:	cb 01       	movw	r24, r22
    54f6:	fe 01       	movw	r30, r28
    54f8:	ef 5a       	subi	r30, 0xAF	; 175
    54fa:	ff 4f       	sbci	r31, 0xFF	; 255
    54fc:	80 83       	st	Z, r24
    54fe:	91 83       	std	Z+1, r25	; 0x01
    5500:	a2 83       	std	Z+2, r26	; 0x02
    5502:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5504:	8e 01       	movw	r16, r28
    5506:	03 5b       	subi	r16, 0xB3	; 179
    5508:	1f 4f       	sbci	r17, 0xFF	; 255
    550a:	fe 01       	movw	r30, r28
    550c:	ef 5a       	subi	r30, 0xAF	; 175
    550e:	ff 4f       	sbci	r31, 0xFF	; 255
    5510:	60 81       	ld	r22, Z
    5512:	71 81       	ldd	r23, Z+1	; 0x01
    5514:	82 81       	ldd	r24, Z+2	; 0x02
    5516:	93 81       	ldd	r25, Z+3	; 0x03
    5518:	20 e0       	ldi	r18, 0x00	; 0
    551a:	30 e0       	ldi	r19, 0x00	; 0
    551c:	4a ef       	ldi	r20, 0xFA	; 250
    551e:	54 e4       	ldi	r21, 0x44	; 68
    5520:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5524:	dc 01       	movw	r26, r24
    5526:	cb 01       	movw	r24, r22
    5528:	f8 01       	movw	r30, r16
    552a:	80 83       	st	Z, r24
    552c:	91 83       	std	Z+1, r25	; 0x01
    552e:	a2 83       	std	Z+2, r26	; 0x02
    5530:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5532:	fe 01       	movw	r30, r28
    5534:	e3 5b       	subi	r30, 0xB3	; 179
    5536:	ff 4f       	sbci	r31, 0xFF	; 255
    5538:	60 81       	ld	r22, Z
    553a:	71 81       	ldd	r23, Z+1	; 0x01
    553c:	82 81       	ldd	r24, Z+2	; 0x02
    553e:	93 81       	ldd	r25, Z+3	; 0x03
    5540:	20 e0       	ldi	r18, 0x00	; 0
    5542:	30 e0       	ldi	r19, 0x00	; 0
    5544:	40 e8       	ldi	r20, 0x80	; 128
    5546:	5f e3       	ldi	r21, 0x3F	; 63
    5548:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    554c:	88 23       	and	r24, r24
    554e:	44 f4       	brge	.+16     	; 0x5560 <LED_voidShiftLeftRight+0xf26>
		__ticks = 1;
    5550:	fe 01       	movw	r30, r28
    5552:	e5 5b       	subi	r30, 0xB5	; 181
    5554:	ff 4f       	sbci	r31, 0xFF	; 255
    5556:	81 e0       	ldi	r24, 0x01	; 1
    5558:	90 e0       	ldi	r25, 0x00	; 0
    555a:	91 83       	std	Z+1, r25	; 0x01
    555c:	80 83       	st	Z, r24
    555e:	64 c0       	rjmp	.+200    	; 0x5628 <LED_voidShiftLeftRight+0xfee>
	else if (__tmp > 65535)
    5560:	fe 01       	movw	r30, r28
    5562:	e3 5b       	subi	r30, 0xB3	; 179
    5564:	ff 4f       	sbci	r31, 0xFF	; 255
    5566:	60 81       	ld	r22, Z
    5568:	71 81       	ldd	r23, Z+1	; 0x01
    556a:	82 81       	ldd	r24, Z+2	; 0x02
    556c:	93 81       	ldd	r25, Z+3	; 0x03
    556e:	20 e0       	ldi	r18, 0x00	; 0
    5570:	3f ef       	ldi	r19, 0xFF	; 255
    5572:	4f e7       	ldi	r20, 0x7F	; 127
    5574:	57 e4       	ldi	r21, 0x47	; 71
    5576:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    557a:	18 16       	cp	r1, r24
    557c:	0c f0       	brlt	.+2      	; 0x5580 <LED_voidShiftLeftRight+0xf46>
    557e:	43 c0       	rjmp	.+134    	; 0x5606 <LED_voidShiftLeftRight+0xfcc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5580:	fe 01       	movw	r30, r28
    5582:	ef 5a       	subi	r30, 0xAF	; 175
    5584:	ff 4f       	sbci	r31, 0xFF	; 255
    5586:	60 81       	ld	r22, Z
    5588:	71 81       	ldd	r23, Z+1	; 0x01
    558a:	82 81       	ldd	r24, Z+2	; 0x02
    558c:	93 81       	ldd	r25, Z+3	; 0x03
    558e:	20 e0       	ldi	r18, 0x00	; 0
    5590:	30 e0       	ldi	r19, 0x00	; 0
    5592:	40 e2       	ldi	r20, 0x20	; 32
    5594:	51 e4       	ldi	r21, 0x41	; 65
    5596:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    559a:	dc 01       	movw	r26, r24
    559c:	cb 01       	movw	r24, r22
    559e:	8e 01       	movw	r16, r28
    55a0:	05 5b       	subi	r16, 0xB5	; 181
    55a2:	1f 4f       	sbci	r17, 0xFF	; 255
    55a4:	bc 01       	movw	r22, r24
    55a6:	cd 01       	movw	r24, r26
    55a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    55ac:	dc 01       	movw	r26, r24
    55ae:	cb 01       	movw	r24, r22
    55b0:	f8 01       	movw	r30, r16
    55b2:	91 83       	std	Z+1, r25	; 0x01
    55b4:	80 83       	st	Z, r24
    55b6:	1f c0       	rjmp	.+62     	; 0x55f6 <LED_voidShiftLeftRight+0xfbc>
    55b8:	fe 01       	movw	r30, r28
    55ba:	e7 5b       	subi	r30, 0xB7	; 183
    55bc:	ff 4f       	sbci	r31, 0xFF	; 255
    55be:	88 ec       	ldi	r24, 0xC8	; 200
    55c0:	90 e0       	ldi	r25, 0x00	; 0
    55c2:	91 83       	std	Z+1, r25	; 0x01
    55c4:	80 83       	st	Z, r24
    55c6:	fe 01       	movw	r30, r28
    55c8:	e7 5b       	subi	r30, 0xB7	; 183
    55ca:	ff 4f       	sbci	r31, 0xFF	; 255
    55cc:	80 81       	ld	r24, Z
    55ce:	91 81       	ldd	r25, Z+1	; 0x01
    55d0:	01 97       	sbiw	r24, 0x01	; 1
    55d2:	f1 f7       	brne	.-4      	; 0x55d0 <LED_voidShiftLeftRight+0xf96>
    55d4:	fe 01       	movw	r30, r28
    55d6:	e7 5b       	subi	r30, 0xB7	; 183
    55d8:	ff 4f       	sbci	r31, 0xFF	; 255
    55da:	91 83       	std	Z+1, r25	; 0x01
    55dc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    55de:	de 01       	movw	r26, r28
    55e0:	a5 5b       	subi	r26, 0xB5	; 181
    55e2:	bf 4f       	sbci	r27, 0xFF	; 255
    55e4:	fe 01       	movw	r30, r28
    55e6:	e5 5b       	subi	r30, 0xB5	; 181
    55e8:	ff 4f       	sbci	r31, 0xFF	; 255
    55ea:	80 81       	ld	r24, Z
    55ec:	91 81       	ldd	r25, Z+1	; 0x01
    55ee:	01 97       	sbiw	r24, 0x01	; 1
    55f0:	11 96       	adiw	r26, 0x01	; 1
    55f2:	9c 93       	st	X, r25
    55f4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    55f6:	fe 01       	movw	r30, r28
    55f8:	e5 5b       	subi	r30, 0xB5	; 181
    55fa:	ff 4f       	sbci	r31, 0xFF	; 255
    55fc:	80 81       	ld	r24, Z
    55fe:	91 81       	ldd	r25, Z+1	; 0x01
    5600:	00 97       	sbiw	r24, 0x00	; 0
    5602:	d1 f6       	brne	.-76     	; 0x55b8 <LED_voidShiftLeftRight+0xf7e>
    5604:	27 c0       	rjmp	.+78     	; 0x5654 <LED_voidShiftLeftRight+0x101a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5606:	8e 01       	movw	r16, r28
    5608:	05 5b       	subi	r16, 0xB5	; 181
    560a:	1f 4f       	sbci	r17, 0xFF	; 255
    560c:	fe 01       	movw	r30, r28
    560e:	e3 5b       	subi	r30, 0xB3	; 179
    5610:	ff 4f       	sbci	r31, 0xFF	; 255
    5612:	60 81       	ld	r22, Z
    5614:	71 81       	ldd	r23, Z+1	; 0x01
    5616:	82 81       	ldd	r24, Z+2	; 0x02
    5618:	93 81       	ldd	r25, Z+3	; 0x03
    561a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    561e:	dc 01       	movw	r26, r24
    5620:	cb 01       	movw	r24, r22
    5622:	f8 01       	movw	r30, r16
    5624:	91 83       	std	Z+1, r25	; 0x01
    5626:	80 83       	st	Z, r24
    5628:	de 01       	movw	r26, r28
    562a:	a9 5b       	subi	r26, 0xB9	; 185
    562c:	bf 4f       	sbci	r27, 0xFF	; 255
    562e:	fe 01       	movw	r30, r28
    5630:	e5 5b       	subi	r30, 0xB5	; 181
    5632:	ff 4f       	sbci	r31, 0xFF	; 255
    5634:	80 81       	ld	r24, Z
    5636:	91 81       	ldd	r25, Z+1	; 0x01
    5638:	8d 93       	st	X+, r24
    563a:	9c 93       	st	X, r25
    563c:	fe 01       	movw	r30, r28
    563e:	e9 5b       	subi	r30, 0xB9	; 185
    5640:	ff 4f       	sbci	r31, 0xFF	; 255
    5642:	80 81       	ld	r24, Z
    5644:	91 81       	ldd	r25, Z+1	; 0x01
    5646:	01 97       	sbiw	r24, 0x01	; 1
    5648:	f1 f7       	brne	.-4      	; 0x5646 <LED_voidShiftLeftRight+0x100c>
    564a:	fe 01       	movw	r30, r28
    564c:	e9 5b       	subi	r30, 0xB9	; 185
    564e:	ff 4f       	sbci	r31, 0xFF	; 255
    5650:	91 83       	std	Z+1, r25	; 0x01
    5652:	80 83       	st	Z, r24
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    5654:	fe 01       	movw	r30, r28
    5656:	ed 52       	subi	r30, 0x2D	; 45
    5658:	ff 4f       	sbci	r31, 0xFF	; 255
    565a:	80 81       	ld	r24, Z
    565c:	60 e0       	ldi	r22, 0x00	; 0
    565e:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN4, DIO_u8HIGH);
    5662:	fe 01       	movw	r30, r28
    5664:	ed 52       	subi	r30, 0x2D	; 45
    5666:	ff 4f       	sbci	r31, 0xFF	; 255
    5668:	80 81       	ld	r24, Z
    566a:	64 e0       	ldi	r22, 0x04	; 4
    566c:	41 e0       	ldi	r20, 0x01	; 1
    566e:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    5672:	fe 01       	movw	r30, r28
    5674:	ec 52       	subi	r30, 0x2C	; 44
    5676:	ff 4f       	sbci	r31, 0xFF	; 255
    5678:	80 81       	ld	r24, Z
    567a:	88 2f       	mov	r24, r24
    567c:	90 e0       	ldi	r25, 0x00	; 0
    567e:	a0 e0       	ldi	r26, 0x00	; 0
    5680:	b0 e0       	ldi	r27, 0x00	; 0
    5682:	bc 01       	movw	r22, r24
    5684:	cd 01       	movw	r24, r26
    5686:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    568a:	dc 01       	movw	r26, r24
    568c:	cb 01       	movw	r24, r22
    568e:	fe 01       	movw	r30, r28
    5690:	ed 5b       	subi	r30, 0xBD	; 189
    5692:	ff 4f       	sbci	r31, 0xFF	; 255
    5694:	80 83       	st	Z, r24
    5696:	91 83       	std	Z+1, r25	; 0x01
    5698:	a2 83       	std	Z+2, r26	; 0x02
    569a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    569c:	8e 01       	movw	r16, r28
    569e:	01 5c       	subi	r16, 0xC1	; 193
    56a0:	1f 4f       	sbci	r17, 0xFF	; 255
    56a2:	fe 01       	movw	r30, r28
    56a4:	ed 5b       	subi	r30, 0xBD	; 189
    56a6:	ff 4f       	sbci	r31, 0xFF	; 255
    56a8:	60 81       	ld	r22, Z
    56aa:	71 81       	ldd	r23, Z+1	; 0x01
    56ac:	82 81       	ldd	r24, Z+2	; 0x02
    56ae:	93 81       	ldd	r25, Z+3	; 0x03
    56b0:	20 e0       	ldi	r18, 0x00	; 0
    56b2:	30 e0       	ldi	r19, 0x00	; 0
    56b4:	4a ef       	ldi	r20, 0xFA	; 250
    56b6:	54 e4       	ldi	r21, 0x44	; 68
    56b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    56bc:	dc 01       	movw	r26, r24
    56be:	cb 01       	movw	r24, r22
    56c0:	f8 01       	movw	r30, r16
    56c2:	80 83       	st	Z, r24
    56c4:	91 83       	std	Z+1, r25	; 0x01
    56c6:	a2 83       	std	Z+2, r26	; 0x02
    56c8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    56ca:	fe 01       	movw	r30, r28
    56cc:	ff 96       	adiw	r30, 0x3f	; 63
    56ce:	60 81       	ld	r22, Z
    56d0:	71 81       	ldd	r23, Z+1	; 0x01
    56d2:	82 81       	ldd	r24, Z+2	; 0x02
    56d4:	93 81       	ldd	r25, Z+3	; 0x03
    56d6:	20 e0       	ldi	r18, 0x00	; 0
    56d8:	30 e0       	ldi	r19, 0x00	; 0
    56da:	40 e8       	ldi	r20, 0x80	; 128
    56dc:	5f e3       	ldi	r21, 0x3F	; 63
    56de:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    56e2:	88 23       	and	r24, r24
    56e4:	2c f4       	brge	.+10     	; 0x56f0 <LED_voidShiftLeftRight+0x10b6>
		__ticks = 1;
    56e6:	81 e0       	ldi	r24, 0x01	; 1
    56e8:	90 e0       	ldi	r25, 0x00	; 0
    56ea:	9e af       	std	Y+62, r25	; 0x3e
    56ec:	8d af       	std	Y+61, r24	; 0x3d
    56ee:	46 c0       	rjmp	.+140    	; 0x577c <LED_voidShiftLeftRight+0x1142>
	else if (__tmp > 65535)
    56f0:	fe 01       	movw	r30, r28
    56f2:	ff 96       	adiw	r30, 0x3f	; 63
    56f4:	60 81       	ld	r22, Z
    56f6:	71 81       	ldd	r23, Z+1	; 0x01
    56f8:	82 81       	ldd	r24, Z+2	; 0x02
    56fa:	93 81       	ldd	r25, Z+3	; 0x03
    56fc:	20 e0       	ldi	r18, 0x00	; 0
    56fe:	3f ef       	ldi	r19, 0xFF	; 255
    5700:	4f e7       	ldi	r20, 0x7F	; 127
    5702:	57 e4       	ldi	r21, 0x47	; 71
    5704:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5708:	18 16       	cp	r1, r24
    570a:	64 f5       	brge	.+88     	; 0x5764 <LED_voidShiftLeftRight+0x112a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    570c:	fe 01       	movw	r30, r28
    570e:	ed 5b       	subi	r30, 0xBD	; 189
    5710:	ff 4f       	sbci	r31, 0xFF	; 255
    5712:	60 81       	ld	r22, Z
    5714:	71 81       	ldd	r23, Z+1	; 0x01
    5716:	82 81       	ldd	r24, Z+2	; 0x02
    5718:	93 81       	ldd	r25, Z+3	; 0x03
    571a:	20 e0       	ldi	r18, 0x00	; 0
    571c:	30 e0       	ldi	r19, 0x00	; 0
    571e:	40 e2       	ldi	r20, 0x20	; 32
    5720:	51 e4       	ldi	r21, 0x41	; 65
    5722:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5726:	dc 01       	movw	r26, r24
    5728:	cb 01       	movw	r24, r22
    572a:	bc 01       	movw	r22, r24
    572c:	cd 01       	movw	r24, r26
    572e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5732:	dc 01       	movw	r26, r24
    5734:	cb 01       	movw	r24, r22
    5736:	9e af       	std	Y+62, r25	; 0x3e
    5738:	8d af       	std	Y+61, r24	; 0x3d
    573a:	0f c0       	rjmp	.+30     	; 0x575a <LED_voidShiftLeftRight+0x1120>
    573c:	88 ec       	ldi	r24, 0xC8	; 200
    573e:	90 e0       	ldi	r25, 0x00	; 0
    5740:	9c af       	std	Y+60, r25	; 0x3c
    5742:	8b af       	std	Y+59, r24	; 0x3b
    5744:	8b ad       	ldd	r24, Y+59	; 0x3b
    5746:	9c ad       	ldd	r25, Y+60	; 0x3c
    5748:	01 97       	sbiw	r24, 0x01	; 1
    574a:	f1 f7       	brne	.-4      	; 0x5748 <LED_voidShiftLeftRight+0x110e>
    574c:	9c af       	std	Y+60, r25	; 0x3c
    574e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5750:	8d ad       	ldd	r24, Y+61	; 0x3d
    5752:	9e ad       	ldd	r25, Y+62	; 0x3e
    5754:	01 97       	sbiw	r24, 0x01	; 1
    5756:	9e af       	std	Y+62, r25	; 0x3e
    5758:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    575a:	8d ad       	ldd	r24, Y+61	; 0x3d
    575c:	9e ad       	ldd	r25, Y+62	; 0x3e
    575e:	00 97       	sbiw	r24, 0x00	; 0
    5760:	69 f7       	brne	.-38     	; 0x573c <LED_voidShiftLeftRight+0x1102>
    5762:	16 c0       	rjmp	.+44     	; 0x5790 <LED_voidShiftLeftRight+0x1156>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5764:	fe 01       	movw	r30, r28
    5766:	ff 96       	adiw	r30, 0x3f	; 63
    5768:	60 81       	ld	r22, Z
    576a:	71 81       	ldd	r23, Z+1	; 0x01
    576c:	82 81       	ldd	r24, Z+2	; 0x02
    576e:	93 81       	ldd	r25, Z+3	; 0x03
    5770:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5774:	dc 01       	movw	r26, r24
    5776:	cb 01       	movw	r24, r22
    5778:	9e af       	std	Y+62, r25	; 0x3e
    577a:	8d af       	std	Y+61, r24	; 0x3d
    577c:	8d ad       	ldd	r24, Y+61	; 0x3d
    577e:	9e ad       	ldd	r25, Y+62	; 0x3e
    5780:	9a af       	std	Y+58, r25	; 0x3a
    5782:	89 af       	std	Y+57, r24	; 0x39
    5784:	89 ad       	ldd	r24, Y+57	; 0x39
    5786:	9a ad       	ldd	r25, Y+58	; 0x3a
    5788:	01 97       	sbiw	r24, 0x01	; 1
    578a:	f1 f7       	brne	.-4      	; 0x5788 <LED_voidShiftLeftRight+0x114e>
    578c:	9a af       	std	Y+58, r25	; 0x3a
    578e:	89 af       	std	Y+57, r24	; 0x39
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    5790:	fe 01       	movw	r30, r28
    5792:	ed 52       	subi	r30, 0x2D	; 45
    5794:	ff 4f       	sbci	r31, 0xFF	; 255
    5796:	80 81       	ld	r24, Z
    5798:	60 e0       	ldi	r22, 0x00	; 0
    579a:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN3, DIO_u8HIGH);
    579e:	fe 01       	movw	r30, r28
    57a0:	ed 52       	subi	r30, 0x2D	; 45
    57a2:	ff 4f       	sbci	r31, 0xFF	; 255
    57a4:	80 81       	ld	r24, Z
    57a6:	63 e0       	ldi	r22, 0x03	; 3
    57a8:	41 e0       	ldi	r20, 0x01	; 1
    57aa:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    57ae:	fe 01       	movw	r30, r28
    57b0:	ec 52       	subi	r30, 0x2C	; 44
    57b2:	ff 4f       	sbci	r31, 0xFF	; 255
    57b4:	80 81       	ld	r24, Z
    57b6:	88 2f       	mov	r24, r24
    57b8:	90 e0       	ldi	r25, 0x00	; 0
    57ba:	a0 e0       	ldi	r26, 0x00	; 0
    57bc:	b0 e0       	ldi	r27, 0x00	; 0
    57be:	bc 01       	movw	r22, r24
    57c0:	cd 01       	movw	r24, r26
    57c2:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    57c6:	dc 01       	movw	r26, r24
    57c8:	cb 01       	movw	r24, r22
    57ca:	8d ab       	std	Y+53, r24	; 0x35
    57cc:	9e ab       	std	Y+54, r25	; 0x36
    57ce:	af ab       	std	Y+55, r26	; 0x37
    57d0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    57d2:	6d a9       	ldd	r22, Y+53	; 0x35
    57d4:	7e a9       	ldd	r23, Y+54	; 0x36
    57d6:	8f a9       	ldd	r24, Y+55	; 0x37
    57d8:	98 ad       	ldd	r25, Y+56	; 0x38
    57da:	20 e0       	ldi	r18, 0x00	; 0
    57dc:	30 e0       	ldi	r19, 0x00	; 0
    57de:	4a ef       	ldi	r20, 0xFA	; 250
    57e0:	54 e4       	ldi	r21, 0x44	; 68
    57e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    57e6:	dc 01       	movw	r26, r24
    57e8:	cb 01       	movw	r24, r22
    57ea:	89 ab       	std	Y+49, r24	; 0x31
    57ec:	9a ab       	std	Y+50, r25	; 0x32
    57ee:	ab ab       	std	Y+51, r26	; 0x33
    57f0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    57f2:	69 a9       	ldd	r22, Y+49	; 0x31
    57f4:	7a a9       	ldd	r23, Y+50	; 0x32
    57f6:	8b a9       	ldd	r24, Y+51	; 0x33
    57f8:	9c a9       	ldd	r25, Y+52	; 0x34
    57fa:	20 e0       	ldi	r18, 0x00	; 0
    57fc:	30 e0       	ldi	r19, 0x00	; 0
    57fe:	40 e8       	ldi	r20, 0x80	; 128
    5800:	5f e3       	ldi	r21, 0x3F	; 63
    5802:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5806:	88 23       	and	r24, r24
    5808:	2c f4       	brge	.+10     	; 0x5814 <LED_voidShiftLeftRight+0x11da>
		__ticks = 1;
    580a:	81 e0       	ldi	r24, 0x01	; 1
    580c:	90 e0       	ldi	r25, 0x00	; 0
    580e:	98 ab       	std	Y+48, r25	; 0x30
    5810:	8f a7       	std	Y+47, r24	; 0x2f
    5812:	3f c0       	rjmp	.+126    	; 0x5892 <LED_voidShiftLeftRight+0x1258>
	else if (__tmp > 65535)
    5814:	69 a9       	ldd	r22, Y+49	; 0x31
    5816:	7a a9       	ldd	r23, Y+50	; 0x32
    5818:	8b a9       	ldd	r24, Y+51	; 0x33
    581a:	9c a9       	ldd	r25, Y+52	; 0x34
    581c:	20 e0       	ldi	r18, 0x00	; 0
    581e:	3f ef       	ldi	r19, 0xFF	; 255
    5820:	4f e7       	ldi	r20, 0x7F	; 127
    5822:	57 e4       	ldi	r21, 0x47	; 71
    5824:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5828:	18 16       	cp	r1, r24
    582a:	4c f5       	brge	.+82     	; 0x587e <LED_voidShiftLeftRight+0x1244>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    582c:	6d a9       	ldd	r22, Y+53	; 0x35
    582e:	7e a9       	ldd	r23, Y+54	; 0x36
    5830:	8f a9       	ldd	r24, Y+55	; 0x37
    5832:	98 ad       	ldd	r25, Y+56	; 0x38
    5834:	20 e0       	ldi	r18, 0x00	; 0
    5836:	30 e0       	ldi	r19, 0x00	; 0
    5838:	40 e2       	ldi	r20, 0x20	; 32
    583a:	51 e4       	ldi	r21, 0x41	; 65
    583c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5840:	dc 01       	movw	r26, r24
    5842:	cb 01       	movw	r24, r22
    5844:	bc 01       	movw	r22, r24
    5846:	cd 01       	movw	r24, r26
    5848:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    584c:	dc 01       	movw	r26, r24
    584e:	cb 01       	movw	r24, r22
    5850:	98 ab       	std	Y+48, r25	; 0x30
    5852:	8f a7       	std	Y+47, r24	; 0x2f
    5854:	0f c0       	rjmp	.+30     	; 0x5874 <LED_voidShiftLeftRight+0x123a>
    5856:	88 ec       	ldi	r24, 0xC8	; 200
    5858:	90 e0       	ldi	r25, 0x00	; 0
    585a:	9e a7       	std	Y+46, r25	; 0x2e
    585c:	8d a7       	std	Y+45, r24	; 0x2d
    585e:	8d a5       	ldd	r24, Y+45	; 0x2d
    5860:	9e a5       	ldd	r25, Y+46	; 0x2e
    5862:	01 97       	sbiw	r24, 0x01	; 1
    5864:	f1 f7       	brne	.-4      	; 0x5862 <LED_voidShiftLeftRight+0x1228>
    5866:	9e a7       	std	Y+46, r25	; 0x2e
    5868:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    586a:	8f a5       	ldd	r24, Y+47	; 0x2f
    586c:	98 a9       	ldd	r25, Y+48	; 0x30
    586e:	01 97       	sbiw	r24, 0x01	; 1
    5870:	98 ab       	std	Y+48, r25	; 0x30
    5872:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5874:	8f a5       	ldd	r24, Y+47	; 0x2f
    5876:	98 a9       	ldd	r25, Y+48	; 0x30
    5878:	00 97       	sbiw	r24, 0x00	; 0
    587a:	69 f7       	brne	.-38     	; 0x5856 <LED_voidShiftLeftRight+0x121c>
    587c:	14 c0       	rjmp	.+40     	; 0x58a6 <LED_voidShiftLeftRight+0x126c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    587e:	69 a9       	ldd	r22, Y+49	; 0x31
    5880:	7a a9       	ldd	r23, Y+50	; 0x32
    5882:	8b a9       	ldd	r24, Y+51	; 0x33
    5884:	9c a9       	ldd	r25, Y+52	; 0x34
    5886:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    588a:	dc 01       	movw	r26, r24
    588c:	cb 01       	movw	r24, r22
    588e:	98 ab       	std	Y+48, r25	; 0x30
    5890:	8f a7       	std	Y+47, r24	; 0x2f
    5892:	8f a5       	ldd	r24, Y+47	; 0x2f
    5894:	98 a9       	ldd	r25, Y+48	; 0x30
    5896:	9c a7       	std	Y+44, r25	; 0x2c
    5898:	8b a7       	std	Y+43, r24	; 0x2b
    589a:	8b a5       	ldd	r24, Y+43	; 0x2b
    589c:	9c a5       	ldd	r25, Y+44	; 0x2c
    589e:	01 97       	sbiw	r24, 0x01	; 1
    58a0:	f1 f7       	brne	.-4      	; 0x589e <LED_voidShiftLeftRight+0x1264>
    58a2:	9c a7       	std	Y+44, r25	; 0x2c
    58a4:	8b a7       	std	Y+43, r24	; 0x2b
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    58a6:	fe 01       	movw	r30, r28
    58a8:	ed 52       	subi	r30, 0x2D	; 45
    58aa:	ff 4f       	sbci	r31, 0xFF	; 255
    58ac:	80 81       	ld	r24, Z
    58ae:	60 e0       	ldi	r22, 0x00	; 0
    58b0:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN2, DIO_u8HIGH);
    58b4:	fe 01       	movw	r30, r28
    58b6:	ed 52       	subi	r30, 0x2D	; 45
    58b8:	ff 4f       	sbci	r31, 0xFF	; 255
    58ba:	80 81       	ld	r24, Z
    58bc:	62 e0       	ldi	r22, 0x02	; 2
    58be:	41 e0       	ldi	r20, 0x01	; 1
    58c0:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    58c4:	fe 01       	movw	r30, r28
    58c6:	ec 52       	subi	r30, 0x2C	; 44
    58c8:	ff 4f       	sbci	r31, 0xFF	; 255
    58ca:	80 81       	ld	r24, Z
    58cc:	88 2f       	mov	r24, r24
    58ce:	90 e0       	ldi	r25, 0x00	; 0
    58d0:	a0 e0       	ldi	r26, 0x00	; 0
    58d2:	b0 e0       	ldi	r27, 0x00	; 0
    58d4:	bc 01       	movw	r22, r24
    58d6:	cd 01       	movw	r24, r26
    58d8:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    58dc:	dc 01       	movw	r26, r24
    58de:	cb 01       	movw	r24, r22
    58e0:	8f a3       	std	Y+39, r24	; 0x27
    58e2:	98 a7       	std	Y+40, r25	; 0x28
    58e4:	a9 a7       	std	Y+41, r26	; 0x29
    58e6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    58e8:	6f a1       	ldd	r22, Y+39	; 0x27
    58ea:	78 a5       	ldd	r23, Y+40	; 0x28
    58ec:	89 a5       	ldd	r24, Y+41	; 0x29
    58ee:	9a a5       	ldd	r25, Y+42	; 0x2a
    58f0:	20 e0       	ldi	r18, 0x00	; 0
    58f2:	30 e0       	ldi	r19, 0x00	; 0
    58f4:	4a ef       	ldi	r20, 0xFA	; 250
    58f6:	54 e4       	ldi	r21, 0x44	; 68
    58f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    58fc:	dc 01       	movw	r26, r24
    58fe:	cb 01       	movw	r24, r22
    5900:	8b a3       	std	Y+35, r24	; 0x23
    5902:	9c a3       	std	Y+36, r25	; 0x24
    5904:	ad a3       	std	Y+37, r26	; 0x25
    5906:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5908:	6b a1       	ldd	r22, Y+35	; 0x23
    590a:	7c a1       	ldd	r23, Y+36	; 0x24
    590c:	8d a1       	ldd	r24, Y+37	; 0x25
    590e:	9e a1       	ldd	r25, Y+38	; 0x26
    5910:	20 e0       	ldi	r18, 0x00	; 0
    5912:	30 e0       	ldi	r19, 0x00	; 0
    5914:	40 e8       	ldi	r20, 0x80	; 128
    5916:	5f e3       	ldi	r21, 0x3F	; 63
    5918:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    591c:	88 23       	and	r24, r24
    591e:	2c f4       	brge	.+10     	; 0x592a <LED_voidShiftLeftRight+0x12f0>
		__ticks = 1;
    5920:	81 e0       	ldi	r24, 0x01	; 1
    5922:	90 e0       	ldi	r25, 0x00	; 0
    5924:	9a a3       	std	Y+34, r25	; 0x22
    5926:	89 a3       	std	Y+33, r24	; 0x21
    5928:	3f c0       	rjmp	.+126    	; 0x59a8 <LED_voidShiftLeftRight+0x136e>
	else if (__tmp > 65535)
    592a:	6b a1       	ldd	r22, Y+35	; 0x23
    592c:	7c a1       	ldd	r23, Y+36	; 0x24
    592e:	8d a1       	ldd	r24, Y+37	; 0x25
    5930:	9e a1       	ldd	r25, Y+38	; 0x26
    5932:	20 e0       	ldi	r18, 0x00	; 0
    5934:	3f ef       	ldi	r19, 0xFF	; 255
    5936:	4f e7       	ldi	r20, 0x7F	; 127
    5938:	57 e4       	ldi	r21, 0x47	; 71
    593a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    593e:	18 16       	cp	r1, r24
    5940:	4c f5       	brge	.+82     	; 0x5994 <LED_voidShiftLeftRight+0x135a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5942:	6f a1       	ldd	r22, Y+39	; 0x27
    5944:	78 a5       	ldd	r23, Y+40	; 0x28
    5946:	89 a5       	ldd	r24, Y+41	; 0x29
    5948:	9a a5       	ldd	r25, Y+42	; 0x2a
    594a:	20 e0       	ldi	r18, 0x00	; 0
    594c:	30 e0       	ldi	r19, 0x00	; 0
    594e:	40 e2       	ldi	r20, 0x20	; 32
    5950:	51 e4       	ldi	r21, 0x41	; 65
    5952:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5956:	dc 01       	movw	r26, r24
    5958:	cb 01       	movw	r24, r22
    595a:	bc 01       	movw	r22, r24
    595c:	cd 01       	movw	r24, r26
    595e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5962:	dc 01       	movw	r26, r24
    5964:	cb 01       	movw	r24, r22
    5966:	9a a3       	std	Y+34, r25	; 0x22
    5968:	89 a3       	std	Y+33, r24	; 0x21
    596a:	0f c0       	rjmp	.+30     	; 0x598a <LED_voidShiftLeftRight+0x1350>
    596c:	88 ec       	ldi	r24, 0xC8	; 200
    596e:	90 e0       	ldi	r25, 0x00	; 0
    5970:	98 a3       	std	Y+32, r25	; 0x20
    5972:	8f 8f       	std	Y+31, r24	; 0x1f
    5974:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5976:	98 a1       	ldd	r25, Y+32	; 0x20
    5978:	01 97       	sbiw	r24, 0x01	; 1
    597a:	f1 f7       	brne	.-4      	; 0x5978 <LED_voidShiftLeftRight+0x133e>
    597c:	98 a3       	std	Y+32, r25	; 0x20
    597e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5980:	89 a1       	ldd	r24, Y+33	; 0x21
    5982:	9a a1       	ldd	r25, Y+34	; 0x22
    5984:	01 97       	sbiw	r24, 0x01	; 1
    5986:	9a a3       	std	Y+34, r25	; 0x22
    5988:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    598a:	89 a1       	ldd	r24, Y+33	; 0x21
    598c:	9a a1       	ldd	r25, Y+34	; 0x22
    598e:	00 97       	sbiw	r24, 0x00	; 0
    5990:	69 f7       	brne	.-38     	; 0x596c <LED_voidShiftLeftRight+0x1332>
    5992:	14 c0       	rjmp	.+40     	; 0x59bc <LED_voidShiftLeftRight+0x1382>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5994:	6b a1       	ldd	r22, Y+35	; 0x23
    5996:	7c a1       	ldd	r23, Y+36	; 0x24
    5998:	8d a1       	ldd	r24, Y+37	; 0x25
    599a:	9e a1       	ldd	r25, Y+38	; 0x26
    599c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    59a0:	dc 01       	movw	r26, r24
    59a2:	cb 01       	movw	r24, r22
    59a4:	9a a3       	std	Y+34, r25	; 0x22
    59a6:	89 a3       	std	Y+33, r24	; 0x21
    59a8:	89 a1       	ldd	r24, Y+33	; 0x21
    59aa:	9a a1       	ldd	r25, Y+34	; 0x22
    59ac:	9e 8f       	std	Y+30, r25	; 0x1e
    59ae:	8d 8f       	std	Y+29, r24	; 0x1d
    59b0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    59b2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    59b4:	01 97       	sbiw	r24, 0x01	; 1
    59b6:	f1 f7       	brne	.-4      	; 0x59b4 <LED_voidShiftLeftRight+0x137a>
    59b8:	9e 8f       	std	Y+30, r25	; 0x1e
    59ba:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    59bc:	fe 01       	movw	r30, r28
    59be:	ed 52       	subi	r30, 0x2D	; 45
    59c0:	ff 4f       	sbci	r31, 0xFF	; 255
    59c2:	80 81       	ld	r24, Z
    59c4:	60 e0       	ldi	r22, 0x00	; 0
    59c6:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN1, DIO_u8HIGH);
    59ca:	fe 01       	movw	r30, r28
    59cc:	ed 52       	subi	r30, 0x2D	; 45
    59ce:	ff 4f       	sbci	r31, 0xFF	; 255
    59d0:	80 81       	ld	r24, Z
    59d2:	61 e0       	ldi	r22, 0x01	; 1
    59d4:	41 e0       	ldi	r20, 0x01	; 1
    59d6:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    59da:	fe 01       	movw	r30, r28
    59dc:	ec 52       	subi	r30, 0x2C	; 44
    59de:	ff 4f       	sbci	r31, 0xFF	; 255
    59e0:	80 81       	ld	r24, Z
    59e2:	88 2f       	mov	r24, r24
    59e4:	90 e0       	ldi	r25, 0x00	; 0
    59e6:	a0 e0       	ldi	r26, 0x00	; 0
    59e8:	b0 e0       	ldi	r27, 0x00	; 0
    59ea:	bc 01       	movw	r22, r24
    59ec:	cd 01       	movw	r24, r26
    59ee:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    59f2:	dc 01       	movw	r26, r24
    59f4:	cb 01       	movw	r24, r22
    59f6:	89 8f       	std	Y+25, r24	; 0x19
    59f8:	9a 8f       	std	Y+26, r25	; 0x1a
    59fa:	ab 8f       	std	Y+27, r26	; 0x1b
    59fc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    59fe:	69 8d       	ldd	r22, Y+25	; 0x19
    5a00:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5a02:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5a04:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5a06:	20 e0       	ldi	r18, 0x00	; 0
    5a08:	30 e0       	ldi	r19, 0x00	; 0
    5a0a:	4a ef       	ldi	r20, 0xFA	; 250
    5a0c:	54 e4       	ldi	r21, 0x44	; 68
    5a0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5a12:	dc 01       	movw	r26, r24
    5a14:	cb 01       	movw	r24, r22
    5a16:	8d 8b       	std	Y+21, r24	; 0x15
    5a18:	9e 8b       	std	Y+22, r25	; 0x16
    5a1a:	af 8b       	std	Y+23, r26	; 0x17
    5a1c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5a1e:	6d 89       	ldd	r22, Y+21	; 0x15
    5a20:	7e 89       	ldd	r23, Y+22	; 0x16
    5a22:	8f 89       	ldd	r24, Y+23	; 0x17
    5a24:	98 8d       	ldd	r25, Y+24	; 0x18
    5a26:	20 e0       	ldi	r18, 0x00	; 0
    5a28:	30 e0       	ldi	r19, 0x00	; 0
    5a2a:	40 e8       	ldi	r20, 0x80	; 128
    5a2c:	5f e3       	ldi	r21, 0x3F	; 63
    5a2e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5a32:	88 23       	and	r24, r24
    5a34:	2c f4       	brge	.+10     	; 0x5a40 <LED_voidShiftLeftRight+0x1406>
		__ticks = 1;
    5a36:	81 e0       	ldi	r24, 0x01	; 1
    5a38:	90 e0       	ldi	r25, 0x00	; 0
    5a3a:	9c 8b       	std	Y+20, r25	; 0x14
    5a3c:	8b 8b       	std	Y+19, r24	; 0x13
    5a3e:	3f c0       	rjmp	.+126    	; 0x5abe <LED_voidShiftLeftRight+0x1484>
	else if (__tmp > 65535)
    5a40:	6d 89       	ldd	r22, Y+21	; 0x15
    5a42:	7e 89       	ldd	r23, Y+22	; 0x16
    5a44:	8f 89       	ldd	r24, Y+23	; 0x17
    5a46:	98 8d       	ldd	r25, Y+24	; 0x18
    5a48:	20 e0       	ldi	r18, 0x00	; 0
    5a4a:	3f ef       	ldi	r19, 0xFF	; 255
    5a4c:	4f e7       	ldi	r20, 0x7F	; 127
    5a4e:	57 e4       	ldi	r21, 0x47	; 71
    5a50:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5a54:	18 16       	cp	r1, r24
    5a56:	4c f5       	brge	.+82     	; 0x5aaa <LED_voidShiftLeftRight+0x1470>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5a58:	69 8d       	ldd	r22, Y+25	; 0x19
    5a5a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5a5c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5a5e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5a60:	20 e0       	ldi	r18, 0x00	; 0
    5a62:	30 e0       	ldi	r19, 0x00	; 0
    5a64:	40 e2       	ldi	r20, 0x20	; 32
    5a66:	51 e4       	ldi	r21, 0x41	; 65
    5a68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5a6c:	dc 01       	movw	r26, r24
    5a6e:	cb 01       	movw	r24, r22
    5a70:	bc 01       	movw	r22, r24
    5a72:	cd 01       	movw	r24, r26
    5a74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5a78:	dc 01       	movw	r26, r24
    5a7a:	cb 01       	movw	r24, r22
    5a7c:	9c 8b       	std	Y+20, r25	; 0x14
    5a7e:	8b 8b       	std	Y+19, r24	; 0x13
    5a80:	0f c0       	rjmp	.+30     	; 0x5aa0 <LED_voidShiftLeftRight+0x1466>
    5a82:	88 ec       	ldi	r24, 0xC8	; 200
    5a84:	90 e0       	ldi	r25, 0x00	; 0
    5a86:	9a 8b       	std	Y+18, r25	; 0x12
    5a88:	89 8b       	std	Y+17, r24	; 0x11
    5a8a:	89 89       	ldd	r24, Y+17	; 0x11
    5a8c:	9a 89       	ldd	r25, Y+18	; 0x12
    5a8e:	01 97       	sbiw	r24, 0x01	; 1
    5a90:	f1 f7       	brne	.-4      	; 0x5a8e <LED_voidShiftLeftRight+0x1454>
    5a92:	9a 8b       	std	Y+18, r25	; 0x12
    5a94:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5a96:	8b 89       	ldd	r24, Y+19	; 0x13
    5a98:	9c 89       	ldd	r25, Y+20	; 0x14
    5a9a:	01 97       	sbiw	r24, 0x01	; 1
    5a9c:	9c 8b       	std	Y+20, r25	; 0x14
    5a9e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5aa0:	8b 89       	ldd	r24, Y+19	; 0x13
    5aa2:	9c 89       	ldd	r25, Y+20	; 0x14
    5aa4:	00 97       	sbiw	r24, 0x00	; 0
    5aa6:	69 f7       	brne	.-38     	; 0x5a82 <LED_voidShiftLeftRight+0x1448>
    5aa8:	14 c0       	rjmp	.+40     	; 0x5ad2 <LED_voidShiftLeftRight+0x1498>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5aaa:	6d 89       	ldd	r22, Y+21	; 0x15
    5aac:	7e 89       	ldd	r23, Y+22	; 0x16
    5aae:	8f 89       	ldd	r24, Y+23	; 0x17
    5ab0:	98 8d       	ldd	r25, Y+24	; 0x18
    5ab2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5ab6:	dc 01       	movw	r26, r24
    5ab8:	cb 01       	movw	r24, r22
    5aba:	9c 8b       	std	Y+20, r25	; 0x14
    5abc:	8b 8b       	std	Y+19, r24	; 0x13
    5abe:	8b 89       	ldd	r24, Y+19	; 0x13
    5ac0:	9c 89       	ldd	r25, Y+20	; 0x14
    5ac2:	98 8b       	std	Y+16, r25	; 0x10
    5ac4:	8f 87       	std	Y+15, r24	; 0x0f
    5ac6:	8f 85       	ldd	r24, Y+15	; 0x0f
    5ac8:	98 89       	ldd	r25, Y+16	; 0x10
    5aca:	01 97       	sbiw	r24, 0x01	; 1
    5acc:	f1 f7       	brne	.-4      	; 0x5aca <LED_voidShiftLeftRight+0x1490>
    5ace:	98 8b       	std	Y+16, r25	; 0x10
    5ad0:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    5ad2:	fe 01       	movw	r30, r28
    5ad4:	ed 52       	subi	r30, 0x2D	; 45
    5ad6:	ff 4f       	sbci	r31, 0xFF	; 255
    5ad8:	80 81       	ld	r24, Z
    5ada:	60 e0       	ldi	r22, 0x00	; 0
    5adc:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>

	DIO_voidSetPinValue(Copy_u8PortNum, DIO_u8PIN0, DIO_u8HIGH);
    5ae0:	fe 01       	movw	r30, r28
    5ae2:	ed 52       	subi	r30, 0x2D	; 45
    5ae4:	ff 4f       	sbci	r31, 0xFF	; 255
    5ae6:	80 81       	ld	r24, Z
    5ae8:	60 e0       	ldi	r22, 0x00	; 0
    5aea:	41 e0       	ldi	r20, 0x01	; 1
    5aec:	0e 94 c3 07 	call	0xf86	; 0xf86 <DIO_voidSetPinValue>
	_delay_ms(Copy_u8Delayms);
    5af0:	fe 01       	movw	r30, r28
    5af2:	ec 52       	subi	r30, 0x2C	; 44
    5af4:	ff 4f       	sbci	r31, 0xFF	; 255
    5af6:	80 81       	ld	r24, Z
    5af8:	88 2f       	mov	r24, r24
    5afa:	90 e0       	ldi	r25, 0x00	; 0
    5afc:	a0 e0       	ldi	r26, 0x00	; 0
    5afe:	b0 e0       	ldi	r27, 0x00	; 0
    5b00:	bc 01       	movw	r22, r24
    5b02:	cd 01       	movw	r24, r26
    5b04:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    5b08:	dc 01       	movw	r26, r24
    5b0a:	cb 01       	movw	r24, r22
    5b0c:	8b 87       	std	Y+11, r24	; 0x0b
    5b0e:	9c 87       	std	Y+12, r25	; 0x0c
    5b10:	ad 87       	std	Y+13, r26	; 0x0d
    5b12:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b14:	6b 85       	ldd	r22, Y+11	; 0x0b
    5b16:	7c 85       	ldd	r23, Y+12	; 0x0c
    5b18:	8d 85       	ldd	r24, Y+13	; 0x0d
    5b1a:	9e 85       	ldd	r25, Y+14	; 0x0e
    5b1c:	20 e0       	ldi	r18, 0x00	; 0
    5b1e:	30 e0       	ldi	r19, 0x00	; 0
    5b20:	4a ef       	ldi	r20, 0xFA	; 250
    5b22:	54 e4       	ldi	r21, 0x44	; 68
    5b24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5b28:	dc 01       	movw	r26, r24
    5b2a:	cb 01       	movw	r24, r22
    5b2c:	8f 83       	std	Y+7, r24	; 0x07
    5b2e:	98 87       	std	Y+8, r25	; 0x08
    5b30:	a9 87       	std	Y+9, r26	; 0x09
    5b32:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5b34:	6f 81       	ldd	r22, Y+7	; 0x07
    5b36:	78 85       	ldd	r23, Y+8	; 0x08
    5b38:	89 85       	ldd	r24, Y+9	; 0x09
    5b3a:	9a 85       	ldd	r25, Y+10	; 0x0a
    5b3c:	20 e0       	ldi	r18, 0x00	; 0
    5b3e:	30 e0       	ldi	r19, 0x00	; 0
    5b40:	40 e8       	ldi	r20, 0x80	; 128
    5b42:	5f e3       	ldi	r21, 0x3F	; 63
    5b44:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5b48:	88 23       	and	r24, r24
    5b4a:	2c f4       	brge	.+10     	; 0x5b56 <LED_voidShiftLeftRight+0x151c>
		__ticks = 1;
    5b4c:	81 e0       	ldi	r24, 0x01	; 1
    5b4e:	90 e0       	ldi	r25, 0x00	; 0
    5b50:	9e 83       	std	Y+6, r25	; 0x06
    5b52:	8d 83       	std	Y+5, r24	; 0x05
    5b54:	3f c0       	rjmp	.+126    	; 0x5bd4 <LED_voidShiftLeftRight+0x159a>
	else if (__tmp > 65535)
    5b56:	6f 81       	ldd	r22, Y+7	; 0x07
    5b58:	78 85       	ldd	r23, Y+8	; 0x08
    5b5a:	89 85       	ldd	r24, Y+9	; 0x09
    5b5c:	9a 85       	ldd	r25, Y+10	; 0x0a
    5b5e:	20 e0       	ldi	r18, 0x00	; 0
    5b60:	3f ef       	ldi	r19, 0xFF	; 255
    5b62:	4f e7       	ldi	r20, 0x7F	; 127
    5b64:	57 e4       	ldi	r21, 0x47	; 71
    5b66:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5b6a:	18 16       	cp	r1, r24
    5b6c:	4c f5       	brge	.+82     	; 0x5bc0 <LED_voidShiftLeftRight+0x1586>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b6e:	6b 85       	ldd	r22, Y+11	; 0x0b
    5b70:	7c 85       	ldd	r23, Y+12	; 0x0c
    5b72:	8d 85       	ldd	r24, Y+13	; 0x0d
    5b74:	9e 85       	ldd	r25, Y+14	; 0x0e
    5b76:	20 e0       	ldi	r18, 0x00	; 0
    5b78:	30 e0       	ldi	r19, 0x00	; 0
    5b7a:	40 e2       	ldi	r20, 0x20	; 32
    5b7c:	51 e4       	ldi	r21, 0x41	; 65
    5b7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5b82:	dc 01       	movw	r26, r24
    5b84:	cb 01       	movw	r24, r22
    5b86:	bc 01       	movw	r22, r24
    5b88:	cd 01       	movw	r24, r26
    5b8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5b8e:	dc 01       	movw	r26, r24
    5b90:	cb 01       	movw	r24, r22
    5b92:	9e 83       	std	Y+6, r25	; 0x06
    5b94:	8d 83       	std	Y+5, r24	; 0x05
    5b96:	0f c0       	rjmp	.+30     	; 0x5bb6 <LED_voidShiftLeftRight+0x157c>
    5b98:	88 ec       	ldi	r24, 0xC8	; 200
    5b9a:	90 e0       	ldi	r25, 0x00	; 0
    5b9c:	9c 83       	std	Y+4, r25	; 0x04
    5b9e:	8b 83       	std	Y+3, r24	; 0x03
    5ba0:	8b 81       	ldd	r24, Y+3	; 0x03
    5ba2:	9c 81       	ldd	r25, Y+4	; 0x04
    5ba4:	01 97       	sbiw	r24, 0x01	; 1
    5ba6:	f1 f7       	brne	.-4      	; 0x5ba4 <LED_voidShiftLeftRight+0x156a>
    5ba8:	9c 83       	std	Y+4, r25	; 0x04
    5baa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5bac:	8d 81       	ldd	r24, Y+5	; 0x05
    5bae:	9e 81       	ldd	r25, Y+6	; 0x06
    5bb0:	01 97       	sbiw	r24, 0x01	; 1
    5bb2:	9e 83       	std	Y+6, r25	; 0x06
    5bb4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5bb6:	8d 81       	ldd	r24, Y+5	; 0x05
    5bb8:	9e 81       	ldd	r25, Y+6	; 0x06
    5bba:	00 97       	sbiw	r24, 0x00	; 0
    5bbc:	69 f7       	brne	.-38     	; 0x5b98 <LED_voidShiftLeftRight+0x155e>
    5bbe:	14 c0       	rjmp	.+40     	; 0x5be8 <LED_voidShiftLeftRight+0x15ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5bc0:	6f 81       	ldd	r22, Y+7	; 0x07
    5bc2:	78 85       	ldd	r23, Y+8	; 0x08
    5bc4:	89 85       	ldd	r24, Y+9	; 0x09
    5bc6:	9a 85       	ldd	r25, Y+10	; 0x0a
    5bc8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5bcc:	dc 01       	movw	r26, r24
    5bce:	cb 01       	movw	r24, r22
    5bd0:	9e 83       	std	Y+6, r25	; 0x06
    5bd2:	8d 83       	std	Y+5, r24	; 0x05
    5bd4:	8d 81       	ldd	r24, Y+5	; 0x05
    5bd6:	9e 81       	ldd	r25, Y+6	; 0x06
    5bd8:	9a 83       	std	Y+2, r25	; 0x02
    5bda:	89 83       	std	Y+1, r24	; 0x01
    5bdc:	89 81       	ldd	r24, Y+1	; 0x01
    5bde:	9a 81       	ldd	r25, Y+2	; 0x02
    5be0:	01 97       	sbiw	r24, 0x01	; 1
    5be2:	f1 f7       	brne	.-4      	; 0x5be0 <LED_voidShiftLeftRight+0x15a6>
    5be4:	9a 83       	std	Y+2, r25	; 0x02
    5be6:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(Copy_u8PortNum, 0x00);
    5be8:	fe 01       	movw	r30, r28
    5bea:	ed 52       	subi	r30, 0x2D	; 45
    5bec:	ff 4f       	sbci	r31, 0xFF	; 255
    5bee:	80 81       	ld	r24, Z
    5bf0:	60 e0       	ldi	r22, 0x00	; 0
    5bf2:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
}
    5bf6:	cc 52       	subi	r28, 0x2C	; 44
    5bf8:	df 4f       	sbci	r29, 0xFF	; 255
    5bfa:	0f b6       	in	r0, 0x3f	; 63
    5bfc:	f8 94       	cli
    5bfe:	de bf       	out	0x3e, r29	; 62
    5c00:	0f be       	out	0x3f, r0	; 63
    5c02:	cd bf       	out	0x3d, r28	; 61
    5c04:	cf 91       	pop	r28
    5c06:	df 91       	pop	r29
    5c08:	1f 91       	pop	r17
    5c0a:	0f 91       	pop	r16
    5c0c:	08 95       	ret

00005c0e <LED_voidFlash>:

void LED_voidFlash (uint8 Copy_u8PortNum, uint8 Copy_u8Delayms)
{
    5c0e:	df 93       	push	r29
    5c10:	cf 93       	push	r28
    5c12:	cd b7       	in	r28, 0x3d	; 61
    5c14:	de b7       	in	r29, 0x3e	; 62
    5c16:	6e 97       	sbiw	r28, 0x1e	; 30
    5c18:	0f b6       	in	r0, 0x3f	; 63
    5c1a:	f8 94       	cli
    5c1c:	de bf       	out	0x3e, r29	; 62
    5c1e:	0f be       	out	0x3f, r0	; 63
    5c20:	cd bf       	out	0x3d, r28	; 61
    5c22:	8d 8f       	std	Y+29, r24	; 0x1d
    5c24:	6e 8f       	std	Y+30, r22	; 0x1e
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
    5c26:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5c28:	61 e0       	ldi	r22, 0x01	; 1
    5c2a:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>
	DIO_voidSetPortValue(Copy_u8PortNum, 0XFF);
    5c2e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5c30:	6f ef       	ldi	r22, 0xFF	; 255
    5c32:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    5c36:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5c38:	88 2f       	mov	r24, r24
    5c3a:	90 e0       	ldi	r25, 0x00	; 0
    5c3c:	a0 e0       	ldi	r26, 0x00	; 0
    5c3e:	b0 e0       	ldi	r27, 0x00	; 0
    5c40:	bc 01       	movw	r22, r24
    5c42:	cd 01       	movw	r24, r26
    5c44:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    5c48:	dc 01       	movw	r26, r24
    5c4a:	cb 01       	movw	r24, r22
    5c4c:	89 8f       	std	Y+25, r24	; 0x19
    5c4e:	9a 8f       	std	Y+26, r25	; 0x1a
    5c50:	ab 8f       	std	Y+27, r26	; 0x1b
    5c52:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c54:	69 8d       	ldd	r22, Y+25	; 0x19
    5c56:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5c58:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5c5a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5c5c:	20 e0       	ldi	r18, 0x00	; 0
    5c5e:	30 e0       	ldi	r19, 0x00	; 0
    5c60:	4a ef       	ldi	r20, 0xFA	; 250
    5c62:	54 e4       	ldi	r21, 0x44	; 68
    5c64:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5c68:	dc 01       	movw	r26, r24
    5c6a:	cb 01       	movw	r24, r22
    5c6c:	8d 8b       	std	Y+21, r24	; 0x15
    5c6e:	9e 8b       	std	Y+22, r25	; 0x16
    5c70:	af 8b       	std	Y+23, r26	; 0x17
    5c72:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5c74:	6d 89       	ldd	r22, Y+21	; 0x15
    5c76:	7e 89       	ldd	r23, Y+22	; 0x16
    5c78:	8f 89       	ldd	r24, Y+23	; 0x17
    5c7a:	98 8d       	ldd	r25, Y+24	; 0x18
    5c7c:	20 e0       	ldi	r18, 0x00	; 0
    5c7e:	30 e0       	ldi	r19, 0x00	; 0
    5c80:	40 e8       	ldi	r20, 0x80	; 128
    5c82:	5f e3       	ldi	r21, 0x3F	; 63
    5c84:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5c88:	88 23       	and	r24, r24
    5c8a:	2c f4       	brge	.+10     	; 0x5c96 <LED_voidFlash+0x88>
		__ticks = 1;
    5c8c:	81 e0       	ldi	r24, 0x01	; 1
    5c8e:	90 e0       	ldi	r25, 0x00	; 0
    5c90:	9c 8b       	std	Y+20, r25	; 0x14
    5c92:	8b 8b       	std	Y+19, r24	; 0x13
    5c94:	3f c0       	rjmp	.+126    	; 0x5d14 <LED_voidFlash+0x106>
	else if (__tmp > 65535)
    5c96:	6d 89       	ldd	r22, Y+21	; 0x15
    5c98:	7e 89       	ldd	r23, Y+22	; 0x16
    5c9a:	8f 89       	ldd	r24, Y+23	; 0x17
    5c9c:	98 8d       	ldd	r25, Y+24	; 0x18
    5c9e:	20 e0       	ldi	r18, 0x00	; 0
    5ca0:	3f ef       	ldi	r19, 0xFF	; 255
    5ca2:	4f e7       	ldi	r20, 0x7F	; 127
    5ca4:	57 e4       	ldi	r21, 0x47	; 71
    5ca6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5caa:	18 16       	cp	r1, r24
    5cac:	4c f5       	brge	.+82     	; 0x5d00 <LED_voidFlash+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5cae:	69 8d       	ldd	r22, Y+25	; 0x19
    5cb0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5cb2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5cb4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5cb6:	20 e0       	ldi	r18, 0x00	; 0
    5cb8:	30 e0       	ldi	r19, 0x00	; 0
    5cba:	40 e2       	ldi	r20, 0x20	; 32
    5cbc:	51 e4       	ldi	r21, 0x41	; 65
    5cbe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5cc2:	dc 01       	movw	r26, r24
    5cc4:	cb 01       	movw	r24, r22
    5cc6:	bc 01       	movw	r22, r24
    5cc8:	cd 01       	movw	r24, r26
    5cca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5cce:	dc 01       	movw	r26, r24
    5cd0:	cb 01       	movw	r24, r22
    5cd2:	9c 8b       	std	Y+20, r25	; 0x14
    5cd4:	8b 8b       	std	Y+19, r24	; 0x13
    5cd6:	0f c0       	rjmp	.+30     	; 0x5cf6 <LED_voidFlash+0xe8>
    5cd8:	88 ec       	ldi	r24, 0xC8	; 200
    5cda:	90 e0       	ldi	r25, 0x00	; 0
    5cdc:	9a 8b       	std	Y+18, r25	; 0x12
    5cde:	89 8b       	std	Y+17, r24	; 0x11
    5ce0:	89 89       	ldd	r24, Y+17	; 0x11
    5ce2:	9a 89       	ldd	r25, Y+18	; 0x12
    5ce4:	01 97       	sbiw	r24, 0x01	; 1
    5ce6:	f1 f7       	brne	.-4      	; 0x5ce4 <LED_voidFlash+0xd6>
    5ce8:	9a 8b       	std	Y+18, r25	; 0x12
    5cea:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5cec:	8b 89       	ldd	r24, Y+19	; 0x13
    5cee:	9c 89       	ldd	r25, Y+20	; 0x14
    5cf0:	01 97       	sbiw	r24, 0x01	; 1
    5cf2:	9c 8b       	std	Y+20, r25	; 0x14
    5cf4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5cf6:	8b 89       	ldd	r24, Y+19	; 0x13
    5cf8:	9c 89       	ldd	r25, Y+20	; 0x14
    5cfa:	00 97       	sbiw	r24, 0x00	; 0
    5cfc:	69 f7       	brne	.-38     	; 0x5cd8 <LED_voidFlash+0xca>
    5cfe:	14 c0       	rjmp	.+40     	; 0x5d28 <LED_voidFlash+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5d00:	6d 89       	ldd	r22, Y+21	; 0x15
    5d02:	7e 89       	ldd	r23, Y+22	; 0x16
    5d04:	8f 89       	ldd	r24, Y+23	; 0x17
    5d06:	98 8d       	ldd	r25, Y+24	; 0x18
    5d08:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5d0c:	dc 01       	movw	r26, r24
    5d0e:	cb 01       	movw	r24, r22
    5d10:	9c 8b       	std	Y+20, r25	; 0x14
    5d12:	8b 8b       	std	Y+19, r24	; 0x13
    5d14:	8b 89       	ldd	r24, Y+19	; 0x13
    5d16:	9c 89       	ldd	r25, Y+20	; 0x14
    5d18:	98 8b       	std	Y+16, r25	; 0x10
    5d1a:	8f 87       	std	Y+15, r24	; 0x0f
    5d1c:	8f 85       	ldd	r24, Y+15	; 0x0f
    5d1e:	98 89       	ldd	r25, Y+16	; 0x10
    5d20:	01 97       	sbiw	r24, 0x01	; 1
    5d22:	f1 f7       	brne	.-4      	; 0x5d20 <LED_voidFlash+0x112>
    5d24:	98 8b       	std	Y+16, r25	; 0x10
    5d26:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPortValue(Copy_u8PortNum, 0X00);
    5d28:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5d2a:	60 e0       	ldi	r22, 0x00	; 0
    5d2c:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    5d30:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5d32:	88 2f       	mov	r24, r24
    5d34:	90 e0       	ldi	r25, 0x00	; 0
    5d36:	a0 e0       	ldi	r26, 0x00	; 0
    5d38:	b0 e0       	ldi	r27, 0x00	; 0
    5d3a:	bc 01       	movw	r22, r24
    5d3c:	cd 01       	movw	r24, r26
    5d3e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    5d42:	dc 01       	movw	r26, r24
    5d44:	cb 01       	movw	r24, r22
    5d46:	8b 87       	std	Y+11, r24	; 0x0b
    5d48:	9c 87       	std	Y+12, r25	; 0x0c
    5d4a:	ad 87       	std	Y+13, r26	; 0x0d
    5d4c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5d4e:	6b 85       	ldd	r22, Y+11	; 0x0b
    5d50:	7c 85       	ldd	r23, Y+12	; 0x0c
    5d52:	8d 85       	ldd	r24, Y+13	; 0x0d
    5d54:	9e 85       	ldd	r25, Y+14	; 0x0e
    5d56:	20 e0       	ldi	r18, 0x00	; 0
    5d58:	30 e0       	ldi	r19, 0x00	; 0
    5d5a:	4a ef       	ldi	r20, 0xFA	; 250
    5d5c:	54 e4       	ldi	r21, 0x44	; 68
    5d5e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5d62:	dc 01       	movw	r26, r24
    5d64:	cb 01       	movw	r24, r22
    5d66:	8f 83       	std	Y+7, r24	; 0x07
    5d68:	98 87       	std	Y+8, r25	; 0x08
    5d6a:	a9 87       	std	Y+9, r26	; 0x09
    5d6c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5d6e:	6f 81       	ldd	r22, Y+7	; 0x07
    5d70:	78 85       	ldd	r23, Y+8	; 0x08
    5d72:	89 85       	ldd	r24, Y+9	; 0x09
    5d74:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d76:	20 e0       	ldi	r18, 0x00	; 0
    5d78:	30 e0       	ldi	r19, 0x00	; 0
    5d7a:	40 e8       	ldi	r20, 0x80	; 128
    5d7c:	5f e3       	ldi	r21, 0x3F	; 63
    5d7e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5d82:	88 23       	and	r24, r24
    5d84:	2c f4       	brge	.+10     	; 0x5d90 <LED_voidFlash+0x182>
		__ticks = 1;
    5d86:	81 e0       	ldi	r24, 0x01	; 1
    5d88:	90 e0       	ldi	r25, 0x00	; 0
    5d8a:	9e 83       	std	Y+6, r25	; 0x06
    5d8c:	8d 83       	std	Y+5, r24	; 0x05
    5d8e:	3f c0       	rjmp	.+126    	; 0x5e0e <LED_voidFlash+0x200>
	else if (__tmp > 65535)
    5d90:	6f 81       	ldd	r22, Y+7	; 0x07
    5d92:	78 85       	ldd	r23, Y+8	; 0x08
    5d94:	89 85       	ldd	r24, Y+9	; 0x09
    5d96:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d98:	20 e0       	ldi	r18, 0x00	; 0
    5d9a:	3f ef       	ldi	r19, 0xFF	; 255
    5d9c:	4f e7       	ldi	r20, 0x7F	; 127
    5d9e:	57 e4       	ldi	r21, 0x47	; 71
    5da0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5da4:	18 16       	cp	r1, r24
    5da6:	4c f5       	brge	.+82     	; 0x5dfa <LED_voidFlash+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5da8:	6b 85       	ldd	r22, Y+11	; 0x0b
    5daa:	7c 85       	ldd	r23, Y+12	; 0x0c
    5dac:	8d 85       	ldd	r24, Y+13	; 0x0d
    5dae:	9e 85       	ldd	r25, Y+14	; 0x0e
    5db0:	20 e0       	ldi	r18, 0x00	; 0
    5db2:	30 e0       	ldi	r19, 0x00	; 0
    5db4:	40 e2       	ldi	r20, 0x20	; 32
    5db6:	51 e4       	ldi	r21, 0x41	; 65
    5db8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5dbc:	dc 01       	movw	r26, r24
    5dbe:	cb 01       	movw	r24, r22
    5dc0:	bc 01       	movw	r22, r24
    5dc2:	cd 01       	movw	r24, r26
    5dc4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5dc8:	dc 01       	movw	r26, r24
    5dca:	cb 01       	movw	r24, r22
    5dcc:	9e 83       	std	Y+6, r25	; 0x06
    5dce:	8d 83       	std	Y+5, r24	; 0x05
    5dd0:	0f c0       	rjmp	.+30     	; 0x5df0 <LED_voidFlash+0x1e2>
    5dd2:	88 ec       	ldi	r24, 0xC8	; 200
    5dd4:	90 e0       	ldi	r25, 0x00	; 0
    5dd6:	9c 83       	std	Y+4, r25	; 0x04
    5dd8:	8b 83       	std	Y+3, r24	; 0x03
    5dda:	8b 81       	ldd	r24, Y+3	; 0x03
    5ddc:	9c 81       	ldd	r25, Y+4	; 0x04
    5dde:	01 97       	sbiw	r24, 0x01	; 1
    5de0:	f1 f7       	brne	.-4      	; 0x5dde <LED_voidFlash+0x1d0>
    5de2:	9c 83       	std	Y+4, r25	; 0x04
    5de4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5de6:	8d 81       	ldd	r24, Y+5	; 0x05
    5de8:	9e 81       	ldd	r25, Y+6	; 0x06
    5dea:	01 97       	sbiw	r24, 0x01	; 1
    5dec:	9e 83       	std	Y+6, r25	; 0x06
    5dee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5df0:	8d 81       	ldd	r24, Y+5	; 0x05
    5df2:	9e 81       	ldd	r25, Y+6	; 0x06
    5df4:	00 97       	sbiw	r24, 0x00	; 0
    5df6:	69 f7       	brne	.-38     	; 0x5dd2 <LED_voidFlash+0x1c4>
    5df8:	14 c0       	rjmp	.+40     	; 0x5e22 <LED_voidFlash+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5dfa:	6f 81       	ldd	r22, Y+7	; 0x07
    5dfc:	78 85       	ldd	r23, Y+8	; 0x08
    5dfe:	89 85       	ldd	r24, Y+9	; 0x09
    5e00:	9a 85       	ldd	r25, Y+10	; 0x0a
    5e02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5e06:	dc 01       	movw	r26, r24
    5e08:	cb 01       	movw	r24, r22
    5e0a:	9e 83       	std	Y+6, r25	; 0x06
    5e0c:	8d 83       	std	Y+5, r24	; 0x05
    5e0e:	8d 81       	ldd	r24, Y+5	; 0x05
    5e10:	9e 81       	ldd	r25, Y+6	; 0x06
    5e12:	9a 83       	std	Y+2, r25	; 0x02
    5e14:	89 83       	std	Y+1, r24	; 0x01
    5e16:	89 81       	ldd	r24, Y+1	; 0x01
    5e18:	9a 81       	ldd	r25, Y+2	; 0x02
    5e1a:	01 97       	sbiw	r24, 0x01	; 1
    5e1c:	f1 f7       	brne	.-4      	; 0x5e1a <LED_voidFlash+0x20c>
    5e1e:	9a 83       	std	Y+2, r25	; 0x02
    5e20:	89 83       	std	Y+1, r24	; 0x01
}
    5e22:	6e 96       	adiw	r28, 0x1e	; 30
    5e24:	0f b6       	in	r0, 0x3f	; 63
    5e26:	f8 94       	cli
    5e28:	de bf       	out	0x3e, r29	; 62
    5e2a:	0f be       	out	0x3f, r0	; 63
    5e2c:	cd bf       	out	0x3d, r28	; 61
    5e2e:	cf 91       	pop	r28
    5e30:	df 91       	pop	r29
    5e32:	08 95       	ret

00005e34 <LED_voidInOut>:

void LED_voidInOut (uint8 Copy_u8PortNum, uint8 Copy_u8Delayms)
{
    5e34:	0f 93       	push	r16
    5e36:	1f 93       	push	r17
    5e38:	df 93       	push	r29
    5e3a:	cf 93       	push	r28
    5e3c:	cd b7       	in	r28, 0x3d	; 61
    5e3e:	de b7       	in	r29, 0x3e	; 62
    5e40:	c2 57       	subi	r28, 0x72	; 114
    5e42:	d0 40       	sbci	r29, 0x00	; 0
    5e44:	0f b6       	in	r0, 0x3f	; 63
    5e46:	f8 94       	cli
    5e48:	de bf       	out	0x3e, r29	; 62
    5e4a:	0f be       	out	0x3f, r0	; 63
    5e4c:	cd bf       	out	0x3d, r28	; 61
    5e4e:	fe 01       	movw	r30, r28
    5e50:	ef 58       	subi	r30, 0x8F	; 143
    5e52:	ff 4f       	sbci	r31, 0xFF	; 255
    5e54:	80 83       	st	Z, r24
    5e56:	fe 01       	movw	r30, r28
    5e58:	ee 58       	subi	r30, 0x8E	; 142
    5e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    5e5c:	60 83       	st	Z, r22
	DIO_voidSetPortDirection(Copy_u8PortNum, DIO_u8OUTPUT);
    5e5e:	fe 01       	movw	r30, r28
    5e60:	ef 58       	subi	r30, 0x8F	; 143
    5e62:	ff 4f       	sbci	r31, 0xFF	; 255
    5e64:	80 81       	ld	r24, Z
    5e66:	61 e0       	ldi	r22, 0x01	; 1
    5e68:	0e 94 3f 09 	call	0x127e	; 0x127e <DIO_voidSetPortDirection>

	DIO_voidSetPortValue(Copy_u8PortNum, 0X18);
    5e6c:	fe 01       	movw	r30, r28
    5e6e:	ef 58       	subi	r30, 0x8F	; 143
    5e70:	ff 4f       	sbci	r31, 0xFF	; 255
    5e72:	80 81       	ld	r24, Z
    5e74:	68 e1       	ldi	r22, 0x18	; 24
    5e76:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    5e7a:	fe 01       	movw	r30, r28
    5e7c:	ee 58       	subi	r30, 0x8E	; 142
    5e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    5e80:	80 81       	ld	r24, Z
    5e82:	88 2f       	mov	r24, r24
    5e84:	90 e0       	ldi	r25, 0x00	; 0
    5e86:	a0 e0       	ldi	r26, 0x00	; 0
    5e88:	b0 e0       	ldi	r27, 0x00	; 0
    5e8a:	bc 01       	movw	r22, r24
    5e8c:	cd 01       	movw	r24, r26
    5e8e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    5e92:	dc 01       	movw	r26, r24
    5e94:	cb 01       	movw	r24, r22
    5e96:	fe 01       	movw	r30, r28
    5e98:	e3 59       	subi	r30, 0x93	; 147
    5e9a:	ff 4f       	sbci	r31, 0xFF	; 255
    5e9c:	80 83       	st	Z, r24
    5e9e:	91 83       	std	Z+1, r25	; 0x01
    5ea0:	a2 83       	std	Z+2, r26	; 0x02
    5ea2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5ea4:	8e 01       	movw	r16, r28
    5ea6:	07 59       	subi	r16, 0x97	; 151
    5ea8:	1f 4f       	sbci	r17, 0xFF	; 255
    5eaa:	fe 01       	movw	r30, r28
    5eac:	e3 59       	subi	r30, 0x93	; 147
    5eae:	ff 4f       	sbci	r31, 0xFF	; 255
    5eb0:	60 81       	ld	r22, Z
    5eb2:	71 81       	ldd	r23, Z+1	; 0x01
    5eb4:	82 81       	ldd	r24, Z+2	; 0x02
    5eb6:	93 81       	ldd	r25, Z+3	; 0x03
    5eb8:	20 e0       	ldi	r18, 0x00	; 0
    5eba:	30 e0       	ldi	r19, 0x00	; 0
    5ebc:	4a ef       	ldi	r20, 0xFA	; 250
    5ebe:	54 e4       	ldi	r21, 0x44	; 68
    5ec0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5ec4:	dc 01       	movw	r26, r24
    5ec6:	cb 01       	movw	r24, r22
    5ec8:	f8 01       	movw	r30, r16
    5eca:	80 83       	st	Z, r24
    5ecc:	91 83       	std	Z+1, r25	; 0x01
    5ece:	a2 83       	std	Z+2, r26	; 0x02
    5ed0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5ed2:	fe 01       	movw	r30, r28
    5ed4:	e7 59       	subi	r30, 0x97	; 151
    5ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    5ed8:	60 81       	ld	r22, Z
    5eda:	71 81       	ldd	r23, Z+1	; 0x01
    5edc:	82 81       	ldd	r24, Z+2	; 0x02
    5ede:	93 81       	ldd	r25, Z+3	; 0x03
    5ee0:	20 e0       	ldi	r18, 0x00	; 0
    5ee2:	30 e0       	ldi	r19, 0x00	; 0
    5ee4:	40 e8       	ldi	r20, 0x80	; 128
    5ee6:	5f e3       	ldi	r21, 0x3F	; 63
    5ee8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5eec:	88 23       	and	r24, r24
    5eee:	44 f4       	brge	.+16     	; 0x5f00 <LED_voidInOut+0xcc>
		__ticks = 1;
    5ef0:	fe 01       	movw	r30, r28
    5ef2:	e9 59       	subi	r30, 0x99	; 153
    5ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    5ef6:	81 e0       	ldi	r24, 0x01	; 1
    5ef8:	90 e0       	ldi	r25, 0x00	; 0
    5efa:	91 83       	std	Z+1, r25	; 0x01
    5efc:	80 83       	st	Z, r24
    5efe:	64 c0       	rjmp	.+200    	; 0x5fc8 <LED_voidInOut+0x194>
	else if (__tmp > 65535)
    5f00:	fe 01       	movw	r30, r28
    5f02:	e7 59       	subi	r30, 0x97	; 151
    5f04:	ff 4f       	sbci	r31, 0xFF	; 255
    5f06:	60 81       	ld	r22, Z
    5f08:	71 81       	ldd	r23, Z+1	; 0x01
    5f0a:	82 81       	ldd	r24, Z+2	; 0x02
    5f0c:	93 81       	ldd	r25, Z+3	; 0x03
    5f0e:	20 e0       	ldi	r18, 0x00	; 0
    5f10:	3f ef       	ldi	r19, 0xFF	; 255
    5f12:	4f e7       	ldi	r20, 0x7F	; 127
    5f14:	57 e4       	ldi	r21, 0x47	; 71
    5f16:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5f1a:	18 16       	cp	r1, r24
    5f1c:	0c f0       	brlt	.+2      	; 0x5f20 <LED_voidInOut+0xec>
    5f1e:	43 c0       	rjmp	.+134    	; 0x5fa6 <LED_voidInOut+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5f20:	fe 01       	movw	r30, r28
    5f22:	e3 59       	subi	r30, 0x93	; 147
    5f24:	ff 4f       	sbci	r31, 0xFF	; 255
    5f26:	60 81       	ld	r22, Z
    5f28:	71 81       	ldd	r23, Z+1	; 0x01
    5f2a:	82 81       	ldd	r24, Z+2	; 0x02
    5f2c:	93 81       	ldd	r25, Z+3	; 0x03
    5f2e:	20 e0       	ldi	r18, 0x00	; 0
    5f30:	30 e0       	ldi	r19, 0x00	; 0
    5f32:	40 e2       	ldi	r20, 0x20	; 32
    5f34:	51 e4       	ldi	r21, 0x41	; 65
    5f36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5f3a:	dc 01       	movw	r26, r24
    5f3c:	cb 01       	movw	r24, r22
    5f3e:	8e 01       	movw	r16, r28
    5f40:	09 59       	subi	r16, 0x99	; 153
    5f42:	1f 4f       	sbci	r17, 0xFF	; 255
    5f44:	bc 01       	movw	r22, r24
    5f46:	cd 01       	movw	r24, r26
    5f48:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5f4c:	dc 01       	movw	r26, r24
    5f4e:	cb 01       	movw	r24, r22
    5f50:	f8 01       	movw	r30, r16
    5f52:	91 83       	std	Z+1, r25	; 0x01
    5f54:	80 83       	st	Z, r24
    5f56:	1f c0       	rjmp	.+62     	; 0x5f96 <LED_voidInOut+0x162>
    5f58:	fe 01       	movw	r30, r28
    5f5a:	eb 59       	subi	r30, 0x9B	; 155
    5f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    5f5e:	88 ec       	ldi	r24, 0xC8	; 200
    5f60:	90 e0       	ldi	r25, 0x00	; 0
    5f62:	91 83       	std	Z+1, r25	; 0x01
    5f64:	80 83       	st	Z, r24
    5f66:	fe 01       	movw	r30, r28
    5f68:	eb 59       	subi	r30, 0x9B	; 155
    5f6a:	ff 4f       	sbci	r31, 0xFF	; 255
    5f6c:	80 81       	ld	r24, Z
    5f6e:	91 81       	ldd	r25, Z+1	; 0x01
    5f70:	01 97       	sbiw	r24, 0x01	; 1
    5f72:	f1 f7       	brne	.-4      	; 0x5f70 <LED_voidInOut+0x13c>
    5f74:	fe 01       	movw	r30, r28
    5f76:	eb 59       	subi	r30, 0x9B	; 155
    5f78:	ff 4f       	sbci	r31, 0xFF	; 255
    5f7a:	91 83       	std	Z+1, r25	; 0x01
    5f7c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5f7e:	de 01       	movw	r26, r28
    5f80:	a9 59       	subi	r26, 0x99	; 153
    5f82:	bf 4f       	sbci	r27, 0xFF	; 255
    5f84:	fe 01       	movw	r30, r28
    5f86:	e9 59       	subi	r30, 0x99	; 153
    5f88:	ff 4f       	sbci	r31, 0xFF	; 255
    5f8a:	80 81       	ld	r24, Z
    5f8c:	91 81       	ldd	r25, Z+1	; 0x01
    5f8e:	01 97       	sbiw	r24, 0x01	; 1
    5f90:	11 96       	adiw	r26, 0x01	; 1
    5f92:	9c 93       	st	X, r25
    5f94:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5f96:	fe 01       	movw	r30, r28
    5f98:	e9 59       	subi	r30, 0x99	; 153
    5f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    5f9c:	80 81       	ld	r24, Z
    5f9e:	91 81       	ldd	r25, Z+1	; 0x01
    5fa0:	00 97       	sbiw	r24, 0x00	; 0
    5fa2:	d1 f6       	brne	.-76     	; 0x5f58 <LED_voidInOut+0x124>
    5fa4:	27 c0       	rjmp	.+78     	; 0x5ff4 <LED_voidInOut+0x1c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5fa6:	8e 01       	movw	r16, r28
    5fa8:	09 59       	subi	r16, 0x99	; 153
    5faa:	1f 4f       	sbci	r17, 0xFF	; 255
    5fac:	fe 01       	movw	r30, r28
    5fae:	e7 59       	subi	r30, 0x97	; 151
    5fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    5fb2:	60 81       	ld	r22, Z
    5fb4:	71 81       	ldd	r23, Z+1	; 0x01
    5fb6:	82 81       	ldd	r24, Z+2	; 0x02
    5fb8:	93 81       	ldd	r25, Z+3	; 0x03
    5fba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5fbe:	dc 01       	movw	r26, r24
    5fc0:	cb 01       	movw	r24, r22
    5fc2:	f8 01       	movw	r30, r16
    5fc4:	91 83       	std	Z+1, r25	; 0x01
    5fc6:	80 83       	st	Z, r24
    5fc8:	de 01       	movw	r26, r28
    5fca:	ad 59       	subi	r26, 0x9D	; 157
    5fcc:	bf 4f       	sbci	r27, 0xFF	; 255
    5fce:	fe 01       	movw	r30, r28
    5fd0:	e9 59       	subi	r30, 0x99	; 153
    5fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    5fd4:	80 81       	ld	r24, Z
    5fd6:	91 81       	ldd	r25, Z+1	; 0x01
    5fd8:	8d 93       	st	X+, r24
    5fda:	9c 93       	st	X, r25
    5fdc:	fe 01       	movw	r30, r28
    5fde:	ed 59       	subi	r30, 0x9D	; 157
    5fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    5fe2:	80 81       	ld	r24, Z
    5fe4:	91 81       	ldd	r25, Z+1	; 0x01
    5fe6:	01 97       	sbiw	r24, 0x01	; 1
    5fe8:	f1 f7       	brne	.-4      	; 0x5fe6 <LED_voidInOut+0x1b2>
    5fea:	fe 01       	movw	r30, r28
    5fec:	ed 59       	subi	r30, 0x9D	; 157
    5fee:	ff 4f       	sbci	r31, 0xFF	; 255
    5ff0:	91 83       	std	Z+1, r25	; 0x01
    5ff2:	80 83       	st	Z, r24

	DIO_voidSetPortValue(Copy_u8PortNum, 0X3C);
    5ff4:	fe 01       	movw	r30, r28
    5ff6:	ef 58       	subi	r30, 0x8F	; 143
    5ff8:	ff 4f       	sbci	r31, 0xFF	; 255
    5ffa:	80 81       	ld	r24, Z
    5ffc:	6c e3       	ldi	r22, 0x3C	; 60
    5ffe:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    6002:	fe 01       	movw	r30, r28
    6004:	ee 58       	subi	r30, 0x8E	; 142
    6006:	ff 4f       	sbci	r31, 0xFF	; 255
    6008:	80 81       	ld	r24, Z
    600a:	88 2f       	mov	r24, r24
    600c:	90 e0       	ldi	r25, 0x00	; 0
    600e:	a0 e0       	ldi	r26, 0x00	; 0
    6010:	b0 e0       	ldi	r27, 0x00	; 0
    6012:	bc 01       	movw	r22, r24
    6014:	cd 01       	movw	r24, r26
    6016:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    601a:	dc 01       	movw	r26, r24
    601c:	cb 01       	movw	r24, r22
    601e:	fe 01       	movw	r30, r28
    6020:	e1 5a       	subi	r30, 0xA1	; 161
    6022:	ff 4f       	sbci	r31, 0xFF	; 255
    6024:	80 83       	st	Z, r24
    6026:	91 83       	std	Z+1, r25	; 0x01
    6028:	a2 83       	std	Z+2, r26	; 0x02
    602a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    602c:	8e 01       	movw	r16, r28
    602e:	05 5a       	subi	r16, 0xA5	; 165
    6030:	1f 4f       	sbci	r17, 0xFF	; 255
    6032:	fe 01       	movw	r30, r28
    6034:	e1 5a       	subi	r30, 0xA1	; 161
    6036:	ff 4f       	sbci	r31, 0xFF	; 255
    6038:	60 81       	ld	r22, Z
    603a:	71 81       	ldd	r23, Z+1	; 0x01
    603c:	82 81       	ldd	r24, Z+2	; 0x02
    603e:	93 81       	ldd	r25, Z+3	; 0x03
    6040:	20 e0       	ldi	r18, 0x00	; 0
    6042:	30 e0       	ldi	r19, 0x00	; 0
    6044:	4a ef       	ldi	r20, 0xFA	; 250
    6046:	54 e4       	ldi	r21, 0x44	; 68
    6048:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    604c:	dc 01       	movw	r26, r24
    604e:	cb 01       	movw	r24, r22
    6050:	f8 01       	movw	r30, r16
    6052:	80 83       	st	Z, r24
    6054:	91 83       	std	Z+1, r25	; 0x01
    6056:	a2 83       	std	Z+2, r26	; 0x02
    6058:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    605a:	fe 01       	movw	r30, r28
    605c:	e5 5a       	subi	r30, 0xA5	; 165
    605e:	ff 4f       	sbci	r31, 0xFF	; 255
    6060:	60 81       	ld	r22, Z
    6062:	71 81       	ldd	r23, Z+1	; 0x01
    6064:	82 81       	ldd	r24, Z+2	; 0x02
    6066:	93 81       	ldd	r25, Z+3	; 0x03
    6068:	20 e0       	ldi	r18, 0x00	; 0
    606a:	30 e0       	ldi	r19, 0x00	; 0
    606c:	40 e8       	ldi	r20, 0x80	; 128
    606e:	5f e3       	ldi	r21, 0x3F	; 63
    6070:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    6074:	88 23       	and	r24, r24
    6076:	44 f4       	brge	.+16     	; 0x6088 <LED_voidInOut+0x254>
		__ticks = 1;
    6078:	fe 01       	movw	r30, r28
    607a:	e7 5a       	subi	r30, 0xA7	; 167
    607c:	ff 4f       	sbci	r31, 0xFF	; 255
    607e:	81 e0       	ldi	r24, 0x01	; 1
    6080:	90 e0       	ldi	r25, 0x00	; 0
    6082:	91 83       	std	Z+1, r25	; 0x01
    6084:	80 83       	st	Z, r24
    6086:	64 c0       	rjmp	.+200    	; 0x6150 <LED_voidInOut+0x31c>
	else if (__tmp > 65535)
    6088:	fe 01       	movw	r30, r28
    608a:	e5 5a       	subi	r30, 0xA5	; 165
    608c:	ff 4f       	sbci	r31, 0xFF	; 255
    608e:	60 81       	ld	r22, Z
    6090:	71 81       	ldd	r23, Z+1	; 0x01
    6092:	82 81       	ldd	r24, Z+2	; 0x02
    6094:	93 81       	ldd	r25, Z+3	; 0x03
    6096:	20 e0       	ldi	r18, 0x00	; 0
    6098:	3f ef       	ldi	r19, 0xFF	; 255
    609a:	4f e7       	ldi	r20, 0x7F	; 127
    609c:	57 e4       	ldi	r21, 0x47	; 71
    609e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    60a2:	18 16       	cp	r1, r24
    60a4:	0c f0       	brlt	.+2      	; 0x60a8 <LED_voidInOut+0x274>
    60a6:	43 c0       	rjmp	.+134    	; 0x612e <LED_voidInOut+0x2fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    60a8:	fe 01       	movw	r30, r28
    60aa:	e1 5a       	subi	r30, 0xA1	; 161
    60ac:	ff 4f       	sbci	r31, 0xFF	; 255
    60ae:	60 81       	ld	r22, Z
    60b0:	71 81       	ldd	r23, Z+1	; 0x01
    60b2:	82 81       	ldd	r24, Z+2	; 0x02
    60b4:	93 81       	ldd	r25, Z+3	; 0x03
    60b6:	20 e0       	ldi	r18, 0x00	; 0
    60b8:	30 e0       	ldi	r19, 0x00	; 0
    60ba:	40 e2       	ldi	r20, 0x20	; 32
    60bc:	51 e4       	ldi	r21, 0x41	; 65
    60be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    60c2:	dc 01       	movw	r26, r24
    60c4:	cb 01       	movw	r24, r22
    60c6:	8e 01       	movw	r16, r28
    60c8:	07 5a       	subi	r16, 0xA7	; 167
    60ca:	1f 4f       	sbci	r17, 0xFF	; 255
    60cc:	bc 01       	movw	r22, r24
    60ce:	cd 01       	movw	r24, r26
    60d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    60d4:	dc 01       	movw	r26, r24
    60d6:	cb 01       	movw	r24, r22
    60d8:	f8 01       	movw	r30, r16
    60da:	91 83       	std	Z+1, r25	; 0x01
    60dc:	80 83       	st	Z, r24
    60de:	1f c0       	rjmp	.+62     	; 0x611e <LED_voidInOut+0x2ea>
    60e0:	fe 01       	movw	r30, r28
    60e2:	e9 5a       	subi	r30, 0xA9	; 169
    60e4:	ff 4f       	sbci	r31, 0xFF	; 255
    60e6:	88 ec       	ldi	r24, 0xC8	; 200
    60e8:	90 e0       	ldi	r25, 0x00	; 0
    60ea:	91 83       	std	Z+1, r25	; 0x01
    60ec:	80 83       	st	Z, r24
    60ee:	fe 01       	movw	r30, r28
    60f0:	e9 5a       	subi	r30, 0xA9	; 169
    60f2:	ff 4f       	sbci	r31, 0xFF	; 255
    60f4:	80 81       	ld	r24, Z
    60f6:	91 81       	ldd	r25, Z+1	; 0x01
    60f8:	01 97       	sbiw	r24, 0x01	; 1
    60fa:	f1 f7       	brne	.-4      	; 0x60f8 <LED_voidInOut+0x2c4>
    60fc:	fe 01       	movw	r30, r28
    60fe:	e9 5a       	subi	r30, 0xA9	; 169
    6100:	ff 4f       	sbci	r31, 0xFF	; 255
    6102:	91 83       	std	Z+1, r25	; 0x01
    6104:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6106:	de 01       	movw	r26, r28
    6108:	a7 5a       	subi	r26, 0xA7	; 167
    610a:	bf 4f       	sbci	r27, 0xFF	; 255
    610c:	fe 01       	movw	r30, r28
    610e:	e7 5a       	subi	r30, 0xA7	; 167
    6110:	ff 4f       	sbci	r31, 0xFF	; 255
    6112:	80 81       	ld	r24, Z
    6114:	91 81       	ldd	r25, Z+1	; 0x01
    6116:	01 97       	sbiw	r24, 0x01	; 1
    6118:	11 96       	adiw	r26, 0x01	; 1
    611a:	9c 93       	st	X, r25
    611c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    611e:	fe 01       	movw	r30, r28
    6120:	e7 5a       	subi	r30, 0xA7	; 167
    6122:	ff 4f       	sbci	r31, 0xFF	; 255
    6124:	80 81       	ld	r24, Z
    6126:	91 81       	ldd	r25, Z+1	; 0x01
    6128:	00 97       	sbiw	r24, 0x00	; 0
    612a:	d1 f6       	brne	.-76     	; 0x60e0 <LED_voidInOut+0x2ac>
    612c:	27 c0       	rjmp	.+78     	; 0x617c <LED_voidInOut+0x348>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    612e:	8e 01       	movw	r16, r28
    6130:	07 5a       	subi	r16, 0xA7	; 167
    6132:	1f 4f       	sbci	r17, 0xFF	; 255
    6134:	fe 01       	movw	r30, r28
    6136:	e5 5a       	subi	r30, 0xA5	; 165
    6138:	ff 4f       	sbci	r31, 0xFF	; 255
    613a:	60 81       	ld	r22, Z
    613c:	71 81       	ldd	r23, Z+1	; 0x01
    613e:	82 81       	ldd	r24, Z+2	; 0x02
    6140:	93 81       	ldd	r25, Z+3	; 0x03
    6142:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6146:	dc 01       	movw	r26, r24
    6148:	cb 01       	movw	r24, r22
    614a:	f8 01       	movw	r30, r16
    614c:	91 83       	std	Z+1, r25	; 0x01
    614e:	80 83       	st	Z, r24
    6150:	de 01       	movw	r26, r28
    6152:	ab 5a       	subi	r26, 0xAB	; 171
    6154:	bf 4f       	sbci	r27, 0xFF	; 255
    6156:	fe 01       	movw	r30, r28
    6158:	e7 5a       	subi	r30, 0xA7	; 167
    615a:	ff 4f       	sbci	r31, 0xFF	; 255
    615c:	80 81       	ld	r24, Z
    615e:	91 81       	ldd	r25, Z+1	; 0x01
    6160:	8d 93       	st	X+, r24
    6162:	9c 93       	st	X, r25
    6164:	fe 01       	movw	r30, r28
    6166:	eb 5a       	subi	r30, 0xAB	; 171
    6168:	ff 4f       	sbci	r31, 0xFF	; 255
    616a:	80 81       	ld	r24, Z
    616c:	91 81       	ldd	r25, Z+1	; 0x01
    616e:	01 97       	sbiw	r24, 0x01	; 1
    6170:	f1 f7       	brne	.-4      	; 0x616e <LED_voidInOut+0x33a>
    6172:	fe 01       	movw	r30, r28
    6174:	eb 5a       	subi	r30, 0xAB	; 171
    6176:	ff 4f       	sbci	r31, 0xFF	; 255
    6178:	91 83       	std	Z+1, r25	; 0x01
    617a:	80 83       	st	Z, r24

	DIO_voidSetPortValue(Copy_u8PortNum, 0X7E);
    617c:	fe 01       	movw	r30, r28
    617e:	ef 58       	subi	r30, 0x8F	; 143
    6180:	ff 4f       	sbci	r31, 0xFF	; 255
    6182:	80 81       	ld	r24, Z
    6184:	6e e7       	ldi	r22, 0x7E	; 126
    6186:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    618a:	fe 01       	movw	r30, r28
    618c:	ee 58       	subi	r30, 0x8E	; 142
    618e:	ff 4f       	sbci	r31, 0xFF	; 255
    6190:	80 81       	ld	r24, Z
    6192:	88 2f       	mov	r24, r24
    6194:	90 e0       	ldi	r25, 0x00	; 0
    6196:	a0 e0       	ldi	r26, 0x00	; 0
    6198:	b0 e0       	ldi	r27, 0x00	; 0
    619a:	bc 01       	movw	r22, r24
    619c:	cd 01       	movw	r24, r26
    619e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    61a2:	dc 01       	movw	r26, r24
    61a4:	cb 01       	movw	r24, r22
    61a6:	fe 01       	movw	r30, r28
    61a8:	ef 5a       	subi	r30, 0xAF	; 175
    61aa:	ff 4f       	sbci	r31, 0xFF	; 255
    61ac:	80 83       	st	Z, r24
    61ae:	91 83       	std	Z+1, r25	; 0x01
    61b0:	a2 83       	std	Z+2, r26	; 0x02
    61b2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    61b4:	8e 01       	movw	r16, r28
    61b6:	03 5b       	subi	r16, 0xB3	; 179
    61b8:	1f 4f       	sbci	r17, 0xFF	; 255
    61ba:	fe 01       	movw	r30, r28
    61bc:	ef 5a       	subi	r30, 0xAF	; 175
    61be:	ff 4f       	sbci	r31, 0xFF	; 255
    61c0:	60 81       	ld	r22, Z
    61c2:	71 81       	ldd	r23, Z+1	; 0x01
    61c4:	82 81       	ldd	r24, Z+2	; 0x02
    61c6:	93 81       	ldd	r25, Z+3	; 0x03
    61c8:	20 e0       	ldi	r18, 0x00	; 0
    61ca:	30 e0       	ldi	r19, 0x00	; 0
    61cc:	4a ef       	ldi	r20, 0xFA	; 250
    61ce:	54 e4       	ldi	r21, 0x44	; 68
    61d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    61d4:	dc 01       	movw	r26, r24
    61d6:	cb 01       	movw	r24, r22
    61d8:	f8 01       	movw	r30, r16
    61da:	80 83       	st	Z, r24
    61dc:	91 83       	std	Z+1, r25	; 0x01
    61de:	a2 83       	std	Z+2, r26	; 0x02
    61e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    61e2:	fe 01       	movw	r30, r28
    61e4:	e3 5b       	subi	r30, 0xB3	; 179
    61e6:	ff 4f       	sbci	r31, 0xFF	; 255
    61e8:	60 81       	ld	r22, Z
    61ea:	71 81       	ldd	r23, Z+1	; 0x01
    61ec:	82 81       	ldd	r24, Z+2	; 0x02
    61ee:	93 81       	ldd	r25, Z+3	; 0x03
    61f0:	20 e0       	ldi	r18, 0x00	; 0
    61f2:	30 e0       	ldi	r19, 0x00	; 0
    61f4:	40 e8       	ldi	r20, 0x80	; 128
    61f6:	5f e3       	ldi	r21, 0x3F	; 63
    61f8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    61fc:	88 23       	and	r24, r24
    61fe:	44 f4       	brge	.+16     	; 0x6210 <LED_voidInOut+0x3dc>
		__ticks = 1;
    6200:	fe 01       	movw	r30, r28
    6202:	e5 5b       	subi	r30, 0xB5	; 181
    6204:	ff 4f       	sbci	r31, 0xFF	; 255
    6206:	81 e0       	ldi	r24, 0x01	; 1
    6208:	90 e0       	ldi	r25, 0x00	; 0
    620a:	91 83       	std	Z+1, r25	; 0x01
    620c:	80 83       	st	Z, r24
    620e:	64 c0       	rjmp	.+200    	; 0x62d8 <LED_voidInOut+0x4a4>
	else if (__tmp > 65535)
    6210:	fe 01       	movw	r30, r28
    6212:	e3 5b       	subi	r30, 0xB3	; 179
    6214:	ff 4f       	sbci	r31, 0xFF	; 255
    6216:	60 81       	ld	r22, Z
    6218:	71 81       	ldd	r23, Z+1	; 0x01
    621a:	82 81       	ldd	r24, Z+2	; 0x02
    621c:	93 81       	ldd	r25, Z+3	; 0x03
    621e:	20 e0       	ldi	r18, 0x00	; 0
    6220:	3f ef       	ldi	r19, 0xFF	; 255
    6222:	4f e7       	ldi	r20, 0x7F	; 127
    6224:	57 e4       	ldi	r21, 0x47	; 71
    6226:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    622a:	18 16       	cp	r1, r24
    622c:	0c f0       	brlt	.+2      	; 0x6230 <LED_voidInOut+0x3fc>
    622e:	43 c0       	rjmp	.+134    	; 0x62b6 <LED_voidInOut+0x482>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6230:	fe 01       	movw	r30, r28
    6232:	ef 5a       	subi	r30, 0xAF	; 175
    6234:	ff 4f       	sbci	r31, 0xFF	; 255
    6236:	60 81       	ld	r22, Z
    6238:	71 81       	ldd	r23, Z+1	; 0x01
    623a:	82 81       	ldd	r24, Z+2	; 0x02
    623c:	93 81       	ldd	r25, Z+3	; 0x03
    623e:	20 e0       	ldi	r18, 0x00	; 0
    6240:	30 e0       	ldi	r19, 0x00	; 0
    6242:	40 e2       	ldi	r20, 0x20	; 32
    6244:	51 e4       	ldi	r21, 0x41	; 65
    6246:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    624a:	dc 01       	movw	r26, r24
    624c:	cb 01       	movw	r24, r22
    624e:	8e 01       	movw	r16, r28
    6250:	05 5b       	subi	r16, 0xB5	; 181
    6252:	1f 4f       	sbci	r17, 0xFF	; 255
    6254:	bc 01       	movw	r22, r24
    6256:	cd 01       	movw	r24, r26
    6258:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    625c:	dc 01       	movw	r26, r24
    625e:	cb 01       	movw	r24, r22
    6260:	f8 01       	movw	r30, r16
    6262:	91 83       	std	Z+1, r25	; 0x01
    6264:	80 83       	st	Z, r24
    6266:	1f c0       	rjmp	.+62     	; 0x62a6 <LED_voidInOut+0x472>
    6268:	fe 01       	movw	r30, r28
    626a:	e7 5b       	subi	r30, 0xB7	; 183
    626c:	ff 4f       	sbci	r31, 0xFF	; 255
    626e:	88 ec       	ldi	r24, 0xC8	; 200
    6270:	90 e0       	ldi	r25, 0x00	; 0
    6272:	91 83       	std	Z+1, r25	; 0x01
    6274:	80 83       	st	Z, r24
    6276:	fe 01       	movw	r30, r28
    6278:	e7 5b       	subi	r30, 0xB7	; 183
    627a:	ff 4f       	sbci	r31, 0xFF	; 255
    627c:	80 81       	ld	r24, Z
    627e:	91 81       	ldd	r25, Z+1	; 0x01
    6280:	01 97       	sbiw	r24, 0x01	; 1
    6282:	f1 f7       	brne	.-4      	; 0x6280 <LED_voidInOut+0x44c>
    6284:	fe 01       	movw	r30, r28
    6286:	e7 5b       	subi	r30, 0xB7	; 183
    6288:	ff 4f       	sbci	r31, 0xFF	; 255
    628a:	91 83       	std	Z+1, r25	; 0x01
    628c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    628e:	de 01       	movw	r26, r28
    6290:	a5 5b       	subi	r26, 0xB5	; 181
    6292:	bf 4f       	sbci	r27, 0xFF	; 255
    6294:	fe 01       	movw	r30, r28
    6296:	e5 5b       	subi	r30, 0xB5	; 181
    6298:	ff 4f       	sbci	r31, 0xFF	; 255
    629a:	80 81       	ld	r24, Z
    629c:	91 81       	ldd	r25, Z+1	; 0x01
    629e:	01 97       	sbiw	r24, 0x01	; 1
    62a0:	11 96       	adiw	r26, 0x01	; 1
    62a2:	9c 93       	st	X, r25
    62a4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    62a6:	fe 01       	movw	r30, r28
    62a8:	e5 5b       	subi	r30, 0xB5	; 181
    62aa:	ff 4f       	sbci	r31, 0xFF	; 255
    62ac:	80 81       	ld	r24, Z
    62ae:	91 81       	ldd	r25, Z+1	; 0x01
    62b0:	00 97       	sbiw	r24, 0x00	; 0
    62b2:	d1 f6       	brne	.-76     	; 0x6268 <LED_voidInOut+0x434>
    62b4:	27 c0       	rjmp	.+78     	; 0x6304 <LED_voidInOut+0x4d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    62b6:	8e 01       	movw	r16, r28
    62b8:	05 5b       	subi	r16, 0xB5	; 181
    62ba:	1f 4f       	sbci	r17, 0xFF	; 255
    62bc:	fe 01       	movw	r30, r28
    62be:	e3 5b       	subi	r30, 0xB3	; 179
    62c0:	ff 4f       	sbci	r31, 0xFF	; 255
    62c2:	60 81       	ld	r22, Z
    62c4:	71 81       	ldd	r23, Z+1	; 0x01
    62c6:	82 81       	ldd	r24, Z+2	; 0x02
    62c8:	93 81       	ldd	r25, Z+3	; 0x03
    62ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    62ce:	dc 01       	movw	r26, r24
    62d0:	cb 01       	movw	r24, r22
    62d2:	f8 01       	movw	r30, r16
    62d4:	91 83       	std	Z+1, r25	; 0x01
    62d6:	80 83       	st	Z, r24
    62d8:	de 01       	movw	r26, r28
    62da:	a9 5b       	subi	r26, 0xB9	; 185
    62dc:	bf 4f       	sbci	r27, 0xFF	; 255
    62de:	fe 01       	movw	r30, r28
    62e0:	e5 5b       	subi	r30, 0xB5	; 181
    62e2:	ff 4f       	sbci	r31, 0xFF	; 255
    62e4:	80 81       	ld	r24, Z
    62e6:	91 81       	ldd	r25, Z+1	; 0x01
    62e8:	8d 93       	st	X+, r24
    62ea:	9c 93       	st	X, r25
    62ec:	fe 01       	movw	r30, r28
    62ee:	e9 5b       	subi	r30, 0xB9	; 185
    62f0:	ff 4f       	sbci	r31, 0xFF	; 255
    62f2:	80 81       	ld	r24, Z
    62f4:	91 81       	ldd	r25, Z+1	; 0x01
    62f6:	01 97       	sbiw	r24, 0x01	; 1
    62f8:	f1 f7       	brne	.-4      	; 0x62f6 <LED_voidInOut+0x4c2>
    62fa:	fe 01       	movw	r30, r28
    62fc:	e9 5b       	subi	r30, 0xB9	; 185
    62fe:	ff 4f       	sbci	r31, 0xFF	; 255
    6300:	91 83       	std	Z+1, r25	; 0x01
    6302:	80 83       	st	Z, r24

	DIO_voidSetPortValue(Copy_u8PortNum, 0XFF);
    6304:	fe 01       	movw	r30, r28
    6306:	ef 58       	subi	r30, 0x8F	; 143
    6308:	ff 4f       	sbci	r31, 0xFF	; 255
    630a:	80 81       	ld	r24, Z
    630c:	6f ef       	ldi	r22, 0xFF	; 255
    630e:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    6312:	fe 01       	movw	r30, r28
    6314:	ee 58       	subi	r30, 0x8E	; 142
    6316:	ff 4f       	sbci	r31, 0xFF	; 255
    6318:	80 81       	ld	r24, Z
    631a:	88 2f       	mov	r24, r24
    631c:	90 e0       	ldi	r25, 0x00	; 0
    631e:	a0 e0       	ldi	r26, 0x00	; 0
    6320:	b0 e0       	ldi	r27, 0x00	; 0
    6322:	bc 01       	movw	r22, r24
    6324:	cd 01       	movw	r24, r26
    6326:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    632a:	dc 01       	movw	r26, r24
    632c:	cb 01       	movw	r24, r22
    632e:	fe 01       	movw	r30, r28
    6330:	ed 5b       	subi	r30, 0xBD	; 189
    6332:	ff 4f       	sbci	r31, 0xFF	; 255
    6334:	80 83       	st	Z, r24
    6336:	91 83       	std	Z+1, r25	; 0x01
    6338:	a2 83       	std	Z+2, r26	; 0x02
    633a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    633c:	8e 01       	movw	r16, r28
    633e:	01 5c       	subi	r16, 0xC1	; 193
    6340:	1f 4f       	sbci	r17, 0xFF	; 255
    6342:	fe 01       	movw	r30, r28
    6344:	ed 5b       	subi	r30, 0xBD	; 189
    6346:	ff 4f       	sbci	r31, 0xFF	; 255
    6348:	60 81       	ld	r22, Z
    634a:	71 81       	ldd	r23, Z+1	; 0x01
    634c:	82 81       	ldd	r24, Z+2	; 0x02
    634e:	93 81       	ldd	r25, Z+3	; 0x03
    6350:	20 e0       	ldi	r18, 0x00	; 0
    6352:	30 e0       	ldi	r19, 0x00	; 0
    6354:	4a ef       	ldi	r20, 0xFA	; 250
    6356:	54 e4       	ldi	r21, 0x44	; 68
    6358:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    635c:	dc 01       	movw	r26, r24
    635e:	cb 01       	movw	r24, r22
    6360:	f8 01       	movw	r30, r16
    6362:	80 83       	st	Z, r24
    6364:	91 83       	std	Z+1, r25	; 0x01
    6366:	a2 83       	std	Z+2, r26	; 0x02
    6368:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    636a:	fe 01       	movw	r30, r28
    636c:	ff 96       	adiw	r30, 0x3f	; 63
    636e:	60 81       	ld	r22, Z
    6370:	71 81       	ldd	r23, Z+1	; 0x01
    6372:	82 81       	ldd	r24, Z+2	; 0x02
    6374:	93 81       	ldd	r25, Z+3	; 0x03
    6376:	20 e0       	ldi	r18, 0x00	; 0
    6378:	30 e0       	ldi	r19, 0x00	; 0
    637a:	40 e8       	ldi	r20, 0x80	; 128
    637c:	5f e3       	ldi	r21, 0x3F	; 63
    637e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    6382:	88 23       	and	r24, r24
    6384:	2c f4       	brge	.+10     	; 0x6390 <LED_voidInOut+0x55c>
		__ticks = 1;
    6386:	81 e0       	ldi	r24, 0x01	; 1
    6388:	90 e0       	ldi	r25, 0x00	; 0
    638a:	9e af       	std	Y+62, r25	; 0x3e
    638c:	8d af       	std	Y+61, r24	; 0x3d
    638e:	46 c0       	rjmp	.+140    	; 0x641c <LED_voidInOut+0x5e8>
	else if (__tmp > 65535)
    6390:	fe 01       	movw	r30, r28
    6392:	ff 96       	adiw	r30, 0x3f	; 63
    6394:	60 81       	ld	r22, Z
    6396:	71 81       	ldd	r23, Z+1	; 0x01
    6398:	82 81       	ldd	r24, Z+2	; 0x02
    639a:	93 81       	ldd	r25, Z+3	; 0x03
    639c:	20 e0       	ldi	r18, 0x00	; 0
    639e:	3f ef       	ldi	r19, 0xFF	; 255
    63a0:	4f e7       	ldi	r20, 0x7F	; 127
    63a2:	57 e4       	ldi	r21, 0x47	; 71
    63a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    63a8:	18 16       	cp	r1, r24
    63aa:	64 f5       	brge	.+88     	; 0x6404 <LED_voidInOut+0x5d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    63ac:	fe 01       	movw	r30, r28
    63ae:	ed 5b       	subi	r30, 0xBD	; 189
    63b0:	ff 4f       	sbci	r31, 0xFF	; 255
    63b2:	60 81       	ld	r22, Z
    63b4:	71 81       	ldd	r23, Z+1	; 0x01
    63b6:	82 81       	ldd	r24, Z+2	; 0x02
    63b8:	93 81       	ldd	r25, Z+3	; 0x03
    63ba:	20 e0       	ldi	r18, 0x00	; 0
    63bc:	30 e0       	ldi	r19, 0x00	; 0
    63be:	40 e2       	ldi	r20, 0x20	; 32
    63c0:	51 e4       	ldi	r21, 0x41	; 65
    63c2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    63c6:	dc 01       	movw	r26, r24
    63c8:	cb 01       	movw	r24, r22
    63ca:	bc 01       	movw	r22, r24
    63cc:	cd 01       	movw	r24, r26
    63ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    63d2:	dc 01       	movw	r26, r24
    63d4:	cb 01       	movw	r24, r22
    63d6:	9e af       	std	Y+62, r25	; 0x3e
    63d8:	8d af       	std	Y+61, r24	; 0x3d
    63da:	0f c0       	rjmp	.+30     	; 0x63fa <LED_voidInOut+0x5c6>
    63dc:	88 ec       	ldi	r24, 0xC8	; 200
    63de:	90 e0       	ldi	r25, 0x00	; 0
    63e0:	9c af       	std	Y+60, r25	; 0x3c
    63e2:	8b af       	std	Y+59, r24	; 0x3b
    63e4:	8b ad       	ldd	r24, Y+59	; 0x3b
    63e6:	9c ad       	ldd	r25, Y+60	; 0x3c
    63e8:	01 97       	sbiw	r24, 0x01	; 1
    63ea:	f1 f7       	brne	.-4      	; 0x63e8 <LED_voidInOut+0x5b4>
    63ec:	9c af       	std	Y+60, r25	; 0x3c
    63ee:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    63f0:	8d ad       	ldd	r24, Y+61	; 0x3d
    63f2:	9e ad       	ldd	r25, Y+62	; 0x3e
    63f4:	01 97       	sbiw	r24, 0x01	; 1
    63f6:	9e af       	std	Y+62, r25	; 0x3e
    63f8:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    63fa:	8d ad       	ldd	r24, Y+61	; 0x3d
    63fc:	9e ad       	ldd	r25, Y+62	; 0x3e
    63fe:	00 97       	sbiw	r24, 0x00	; 0
    6400:	69 f7       	brne	.-38     	; 0x63dc <LED_voidInOut+0x5a8>
    6402:	16 c0       	rjmp	.+44     	; 0x6430 <LED_voidInOut+0x5fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6404:	fe 01       	movw	r30, r28
    6406:	ff 96       	adiw	r30, 0x3f	; 63
    6408:	60 81       	ld	r22, Z
    640a:	71 81       	ldd	r23, Z+1	; 0x01
    640c:	82 81       	ldd	r24, Z+2	; 0x02
    640e:	93 81       	ldd	r25, Z+3	; 0x03
    6410:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6414:	dc 01       	movw	r26, r24
    6416:	cb 01       	movw	r24, r22
    6418:	9e af       	std	Y+62, r25	; 0x3e
    641a:	8d af       	std	Y+61, r24	; 0x3d
    641c:	8d ad       	ldd	r24, Y+61	; 0x3d
    641e:	9e ad       	ldd	r25, Y+62	; 0x3e
    6420:	9a af       	std	Y+58, r25	; 0x3a
    6422:	89 af       	std	Y+57, r24	; 0x39
    6424:	89 ad       	ldd	r24, Y+57	; 0x39
    6426:	9a ad       	ldd	r25, Y+58	; 0x3a
    6428:	01 97       	sbiw	r24, 0x01	; 1
    642a:	f1 f7       	brne	.-4      	; 0x6428 <LED_voidInOut+0x5f4>
    642c:	9a af       	std	Y+58, r25	; 0x3a
    642e:	89 af       	std	Y+57, r24	; 0x39

	DIO_voidSetPortValue(Copy_u8PortNum, 0X7E);
    6430:	fe 01       	movw	r30, r28
    6432:	ef 58       	subi	r30, 0x8F	; 143
    6434:	ff 4f       	sbci	r31, 0xFF	; 255
    6436:	80 81       	ld	r24, Z
    6438:	6e e7       	ldi	r22, 0x7E	; 126
    643a:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    643e:	fe 01       	movw	r30, r28
    6440:	ee 58       	subi	r30, 0x8E	; 142
    6442:	ff 4f       	sbci	r31, 0xFF	; 255
    6444:	80 81       	ld	r24, Z
    6446:	88 2f       	mov	r24, r24
    6448:	90 e0       	ldi	r25, 0x00	; 0
    644a:	a0 e0       	ldi	r26, 0x00	; 0
    644c:	b0 e0       	ldi	r27, 0x00	; 0
    644e:	bc 01       	movw	r22, r24
    6450:	cd 01       	movw	r24, r26
    6452:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    6456:	dc 01       	movw	r26, r24
    6458:	cb 01       	movw	r24, r22
    645a:	8d ab       	std	Y+53, r24	; 0x35
    645c:	9e ab       	std	Y+54, r25	; 0x36
    645e:	af ab       	std	Y+55, r26	; 0x37
    6460:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6462:	6d a9       	ldd	r22, Y+53	; 0x35
    6464:	7e a9       	ldd	r23, Y+54	; 0x36
    6466:	8f a9       	ldd	r24, Y+55	; 0x37
    6468:	98 ad       	ldd	r25, Y+56	; 0x38
    646a:	20 e0       	ldi	r18, 0x00	; 0
    646c:	30 e0       	ldi	r19, 0x00	; 0
    646e:	4a ef       	ldi	r20, 0xFA	; 250
    6470:	54 e4       	ldi	r21, 0x44	; 68
    6472:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    6476:	dc 01       	movw	r26, r24
    6478:	cb 01       	movw	r24, r22
    647a:	89 ab       	std	Y+49, r24	; 0x31
    647c:	9a ab       	std	Y+50, r25	; 0x32
    647e:	ab ab       	std	Y+51, r26	; 0x33
    6480:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    6482:	69 a9       	ldd	r22, Y+49	; 0x31
    6484:	7a a9       	ldd	r23, Y+50	; 0x32
    6486:	8b a9       	ldd	r24, Y+51	; 0x33
    6488:	9c a9       	ldd	r25, Y+52	; 0x34
    648a:	20 e0       	ldi	r18, 0x00	; 0
    648c:	30 e0       	ldi	r19, 0x00	; 0
    648e:	40 e8       	ldi	r20, 0x80	; 128
    6490:	5f e3       	ldi	r21, 0x3F	; 63
    6492:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    6496:	88 23       	and	r24, r24
    6498:	2c f4       	brge	.+10     	; 0x64a4 <LED_voidInOut+0x670>
		__ticks = 1;
    649a:	81 e0       	ldi	r24, 0x01	; 1
    649c:	90 e0       	ldi	r25, 0x00	; 0
    649e:	98 ab       	std	Y+48, r25	; 0x30
    64a0:	8f a7       	std	Y+47, r24	; 0x2f
    64a2:	3f c0       	rjmp	.+126    	; 0x6522 <LED_voidInOut+0x6ee>
	else if (__tmp > 65535)
    64a4:	69 a9       	ldd	r22, Y+49	; 0x31
    64a6:	7a a9       	ldd	r23, Y+50	; 0x32
    64a8:	8b a9       	ldd	r24, Y+51	; 0x33
    64aa:	9c a9       	ldd	r25, Y+52	; 0x34
    64ac:	20 e0       	ldi	r18, 0x00	; 0
    64ae:	3f ef       	ldi	r19, 0xFF	; 255
    64b0:	4f e7       	ldi	r20, 0x7F	; 127
    64b2:	57 e4       	ldi	r21, 0x47	; 71
    64b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    64b8:	18 16       	cp	r1, r24
    64ba:	4c f5       	brge	.+82     	; 0x650e <LED_voidInOut+0x6da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    64bc:	6d a9       	ldd	r22, Y+53	; 0x35
    64be:	7e a9       	ldd	r23, Y+54	; 0x36
    64c0:	8f a9       	ldd	r24, Y+55	; 0x37
    64c2:	98 ad       	ldd	r25, Y+56	; 0x38
    64c4:	20 e0       	ldi	r18, 0x00	; 0
    64c6:	30 e0       	ldi	r19, 0x00	; 0
    64c8:	40 e2       	ldi	r20, 0x20	; 32
    64ca:	51 e4       	ldi	r21, 0x41	; 65
    64cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    64d0:	dc 01       	movw	r26, r24
    64d2:	cb 01       	movw	r24, r22
    64d4:	bc 01       	movw	r22, r24
    64d6:	cd 01       	movw	r24, r26
    64d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    64dc:	dc 01       	movw	r26, r24
    64de:	cb 01       	movw	r24, r22
    64e0:	98 ab       	std	Y+48, r25	; 0x30
    64e2:	8f a7       	std	Y+47, r24	; 0x2f
    64e4:	0f c0       	rjmp	.+30     	; 0x6504 <LED_voidInOut+0x6d0>
    64e6:	88 ec       	ldi	r24, 0xC8	; 200
    64e8:	90 e0       	ldi	r25, 0x00	; 0
    64ea:	9e a7       	std	Y+46, r25	; 0x2e
    64ec:	8d a7       	std	Y+45, r24	; 0x2d
    64ee:	8d a5       	ldd	r24, Y+45	; 0x2d
    64f0:	9e a5       	ldd	r25, Y+46	; 0x2e
    64f2:	01 97       	sbiw	r24, 0x01	; 1
    64f4:	f1 f7       	brne	.-4      	; 0x64f2 <LED_voidInOut+0x6be>
    64f6:	9e a7       	std	Y+46, r25	; 0x2e
    64f8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    64fa:	8f a5       	ldd	r24, Y+47	; 0x2f
    64fc:	98 a9       	ldd	r25, Y+48	; 0x30
    64fe:	01 97       	sbiw	r24, 0x01	; 1
    6500:	98 ab       	std	Y+48, r25	; 0x30
    6502:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6504:	8f a5       	ldd	r24, Y+47	; 0x2f
    6506:	98 a9       	ldd	r25, Y+48	; 0x30
    6508:	00 97       	sbiw	r24, 0x00	; 0
    650a:	69 f7       	brne	.-38     	; 0x64e6 <LED_voidInOut+0x6b2>
    650c:	14 c0       	rjmp	.+40     	; 0x6536 <LED_voidInOut+0x702>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    650e:	69 a9       	ldd	r22, Y+49	; 0x31
    6510:	7a a9       	ldd	r23, Y+50	; 0x32
    6512:	8b a9       	ldd	r24, Y+51	; 0x33
    6514:	9c a9       	ldd	r25, Y+52	; 0x34
    6516:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    651a:	dc 01       	movw	r26, r24
    651c:	cb 01       	movw	r24, r22
    651e:	98 ab       	std	Y+48, r25	; 0x30
    6520:	8f a7       	std	Y+47, r24	; 0x2f
    6522:	8f a5       	ldd	r24, Y+47	; 0x2f
    6524:	98 a9       	ldd	r25, Y+48	; 0x30
    6526:	9c a7       	std	Y+44, r25	; 0x2c
    6528:	8b a7       	std	Y+43, r24	; 0x2b
    652a:	8b a5       	ldd	r24, Y+43	; 0x2b
    652c:	9c a5       	ldd	r25, Y+44	; 0x2c
    652e:	01 97       	sbiw	r24, 0x01	; 1
    6530:	f1 f7       	brne	.-4      	; 0x652e <LED_voidInOut+0x6fa>
    6532:	9c a7       	std	Y+44, r25	; 0x2c
    6534:	8b a7       	std	Y+43, r24	; 0x2b

	DIO_voidSetPortValue(Copy_u8PortNum, 0X3C);
    6536:	fe 01       	movw	r30, r28
    6538:	ef 58       	subi	r30, 0x8F	; 143
    653a:	ff 4f       	sbci	r31, 0xFF	; 255
    653c:	80 81       	ld	r24, Z
    653e:	6c e3       	ldi	r22, 0x3C	; 60
    6540:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    6544:	fe 01       	movw	r30, r28
    6546:	ee 58       	subi	r30, 0x8E	; 142
    6548:	ff 4f       	sbci	r31, 0xFF	; 255
    654a:	80 81       	ld	r24, Z
    654c:	88 2f       	mov	r24, r24
    654e:	90 e0       	ldi	r25, 0x00	; 0
    6550:	a0 e0       	ldi	r26, 0x00	; 0
    6552:	b0 e0       	ldi	r27, 0x00	; 0
    6554:	bc 01       	movw	r22, r24
    6556:	cd 01       	movw	r24, r26
    6558:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    655c:	dc 01       	movw	r26, r24
    655e:	cb 01       	movw	r24, r22
    6560:	8f a3       	std	Y+39, r24	; 0x27
    6562:	98 a7       	std	Y+40, r25	; 0x28
    6564:	a9 a7       	std	Y+41, r26	; 0x29
    6566:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6568:	6f a1       	ldd	r22, Y+39	; 0x27
    656a:	78 a5       	ldd	r23, Y+40	; 0x28
    656c:	89 a5       	ldd	r24, Y+41	; 0x29
    656e:	9a a5       	ldd	r25, Y+42	; 0x2a
    6570:	20 e0       	ldi	r18, 0x00	; 0
    6572:	30 e0       	ldi	r19, 0x00	; 0
    6574:	4a ef       	ldi	r20, 0xFA	; 250
    6576:	54 e4       	ldi	r21, 0x44	; 68
    6578:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    657c:	dc 01       	movw	r26, r24
    657e:	cb 01       	movw	r24, r22
    6580:	8b a3       	std	Y+35, r24	; 0x23
    6582:	9c a3       	std	Y+36, r25	; 0x24
    6584:	ad a3       	std	Y+37, r26	; 0x25
    6586:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    6588:	6b a1       	ldd	r22, Y+35	; 0x23
    658a:	7c a1       	ldd	r23, Y+36	; 0x24
    658c:	8d a1       	ldd	r24, Y+37	; 0x25
    658e:	9e a1       	ldd	r25, Y+38	; 0x26
    6590:	20 e0       	ldi	r18, 0x00	; 0
    6592:	30 e0       	ldi	r19, 0x00	; 0
    6594:	40 e8       	ldi	r20, 0x80	; 128
    6596:	5f e3       	ldi	r21, 0x3F	; 63
    6598:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    659c:	88 23       	and	r24, r24
    659e:	2c f4       	brge	.+10     	; 0x65aa <LED_voidInOut+0x776>
		__ticks = 1;
    65a0:	81 e0       	ldi	r24, 0x01	; 1
    65a2:	90 e0       	ldi	r25, 0x00	; 0
    65a4:	9a a3       	std	Y+34, r25	; 0x22
    65a6:	89 a3       	std	Y+33, r24	; 0x21
    65a8:	3f c0       	rjmp	.+126    	; 0x6628 <LED_voidInOut+0x7f4>
	else if (__tmp > 65535)
    65aa:	6b a1       	ldd	r22, Y+35	; 0x23
    65ac:	7c a1       	ldd	r23, Y+36	; 0x24
    65ae:	8d a1       	ldd	r24, Y+37	; 0x25
    65b0:	9e a1       	ldd	r25, Y+38	; 0x26
    65b2:	20 e0       	ldi	r18, 0x00	; 0
    65b4:	3f ef       	ldi	r19, 0xFF	; 255
    65b6:	4f e7       	ldi	r20, 0x7F	; 127
    65b8:	57 e4       	ldi	r21, 0x47	; 71
    65ba:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    65be:	18 16       	cp	r1, r24
    65c0:	4c f5       	brge	.+82     	; 0x6614 <LED_voidInOut+0x7e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    65c2:	6f a1       	ldd	r22, Y+39	; 0x27
    65c4:	78 a5       	ldd	r23, Y+40	; 0x28
    65c6:	89 a5       	ldd	r24, Y+41	; 0x29
    65c8:	9a a5       	ldd	r25, Y+42	; 0x2a
    65ca:	20 e0       	ldi	r18, 0x00	; 0
    65cc:	30 e0       	ldi	r19, 0x00	; 0
    65ce:	40 e2       	ldi	r20, 0x20	; 32
    65d0:	51 e4       	ldi	r21, 0x41	; 65
    65d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    65d6:	dc 01       	movw	r26, r24
    65d8:	cb 01       	movw	r24, r22
    65da:	bc 01       	movw	r22, r24
    65dc:	cd 01       	movw	r24, r26
    65de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    65e2:	dc 01       	movw	r26, r24
    65e4:	cb 01       	movw	r24, r22
    65e6:	9a a3       	std	Y+34, r25	; 0x22
    65e8:	89 a3       	std	Y+33, r24	; 0x21
    65ea:	0f c0       	rjmp	.+30     	; 0x660a <LED_voidInOut+0x7d6>
    65ec:	88 ec       	ldi	r24, 0xC8	; 200
    65ee:	90 e0       	ldi	r25, 0x00	; 0
    65f0:	98 a3       	std	Y+32, r25	; 0x20
    65f2:	8f 8f       	std	Y+31, r24	; 0x1f
    65f4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    65f6:	98 a1       	ldd	r25, Y+32	; 0x20
    65f8:	01 97       	sbiw	r24, 0x01	; 1
    65fa:	f1 f7       	brne	.-4      	; 0x65f8 <LED_voidInOut+0x7c4>
    65fc:	98 a3       	std	Y+32, r25	; 0x20
    65fe:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6600:	89 a1       	ldd	r24, Y+33	; 0x21
    6602:	9a a1       	ldd	r25, Y+34	; 0x22
    6604:	01 97       	sbiw	r24, 0x01	; 1
    6606:	9a a3       	std	Y+34, r25	; 0x22
    6608:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    660a:	89 a1       	ldd	r24, Y+33	; 0x21
    660c:	9a a1       	ldd	r25, Y+34	; 0x22
    660e:	00 97       	sbiw	r24, 0x00	; 0
    6610:	69 f7       	brne	.-38     	; 0x65ec <LED_voidInOut+0x7b8>
    6612:	14 c0       	rjmp	.+40     	; 0x663c <LED_voidInOut+0x808>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6614:	6b a1       	ldd	r22, Y+35	; 0x23
    6616:	7c a1       	ldd	r23, Y+36	; 0x24
    6618:	8d a1       	ldd	r24, Y+37	; 0x25
    661a:	9e a1       	ldd	r25, Y+38	; 0x26
    661c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6620:	dc 01       	movw	r26, r24
    6622:	cb 01       	movw	r24, r22
    6624:	9a a3       	std	Y+34, r25	; 0x22
    6626:	89 a3       	std	Y+33, r24	; 0x21
    6628:	89 a1       	ldd	r24, Y+33	; 0x21
    662a:	9a a1       	ldd	r25, Y+34	; 0x22
    662c:	9e 8f       	std	Y+30, r25	; 0x1e
    662e:	8d 8f       	std	Y+29, r24	; 0x1d
    6630:	8d 8d       	ldd	r24, Y+29	; 0x1d
    6632:	9e 8d       	ldd	r25, Y+30	; 0x1e
    6634:	01 97       	sbiw	r24, 0x01	; 1
    6636:	f1 f7       	brne	.-4      	; 0x6634 <LED_voidInOut+0x800>
    6638:	9e 8f       	std	Y+30, r25	; 0x1e
    663a:	8d 8f       	std	Y+29, r24	; 0x1d

	DIO_voidSetPortValue(Copy_u8PortNum, 0X18);
    663c:	fe 01       	movw	r30, r28
    663e:	ef 58       	subi	r30, 0x8F	; 143
    6640:	ff 4f       	sbci	r31, 0xFF	; 255
    6642:	80 81       	ld	r24, Z
    6644:	68 e1       	ldi	r22, 0x18	; 24
    6646:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    664a:	fe 01       	movw	r30, r28
    664c:	ee 58       	subi	r30, 0x8E	; 142
    664e:	ff 4f       	sbci	r31, 0xFF	; 255
    6650:	80 81       	ld	r24, Z
    6652:	88 2f       	mov	r24, r24
    6654:	90 e0       	ldi	r25, 0x00	; 0
    6656:	a0 e0       	ldi	r26, 0x00	; 0
    6658:	b0 e0       	ldi	r27, 0x00	; 0
    665a:	bc 01       	movw	r22, r24
    665c:	cd 01       	movw	r24, r26
    665e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    6662:	dc 01       	movw	r26, r24
    6664:	cb 01       	movw	r24, r22
    6666:	89 8f       	std	Y+25, r24	; 0x19
    6668:	9a 8f       	std	Y+26, r25	; 0x1a
    666a:	ab 8f       	std	Y+27, r26	; 0x1b
    666c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    666e:	69 8d       	ldd	r22, Y+25	; 0x19
    6670:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6672:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6674:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6676:	20 e0       	ldi	r18, 0x00	; 0
    6678:	30 e0       	ldi	r19, 0x00	; 0
    667a:	4a ef       	ldi	r20, 0xFA	; 250
    667c:	54 e4       	ldi	r21, 0x44	; 68
    667e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    6682:	dc 01       	movw	r26, r24
    6684:	cb 01       	movw	r24, r22
    6686:	8d 8b       	std	Y+21, r24	; 0x15
    6688:	9e 8b       	std	Y+22, r25	; 0x16
    668a:	af 8b       	std	Y+23, r26	; 0x17
    668c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    668e:	6d 89       	ldd	r22, Y+21	; 0x15
    6690:	7e 89       	ldd	r23, Y+22	; 0x16
    6692:	8f 89       	ldd	r24, Y+23	; 0x17
    6694:	98 8d       	ldd	r25, Y+24	; 0x18
    6696:	20 e0       	ldi	r18, 0x00	; 0
    6698:	30 e0       	ldi	r19, 0x00	; 0
    669a:	40 e8       	ldi	r20, 0x80	; 128
    669c:	5f e3       	ldi	r21, 0x3F	; 63
    669e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    66a2:	88 23       	and	r24, r24
    66a4:	2c f4       	brge	.+10     	; 0x66b0 <LED_voidInOut+0x87c>
		__ticks = 1;
    66a6:	81 e0       	ldi	r24, 0x01	; 1
    66a8:	90 e0       	ldi	r25, 0x00	; 0
    66aa:	9c 8b       	std	Y+20, r25	; 0x14
    66ac:	8b 8b       	std	Y+19, r24	; 0x13
    66ae:	3f c0       	rjmp	.+126    	; 0x672e <LED_voidInOut+0x8fa>
	else if (__tmp > 65535)
    66b0:	6d 89       	ldd	r22, Y+21	; 0x15
    66b2:	7e 89       	ldd	r23, Y+22	; 0x16
    66b4:	8f 89       	ldd	r24, Y+23	; 0x17
    66b6:	98 8d       	ldd	r25, Y+24	; 0x18
    66b8:	20 e0       	ldi	r18, 0x00	; 0
    66ba:	3f ef       	ldi	r19, 0xFF	; 255
    66bc:	4f e7       	ldi	r20, 0x7F	; 127
    66be:	57 e4       	ldi	r21, 0x47	; 71
    66c0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    66c4:	18 16       	cp	r1, r24
    66c6:	4c f5       	brge	.+82     	; 0x671a <LED_voidInOut+0x8e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    66c8:	69 8d       	ldd	r22, Y+25	; 0x19
    66ca:	7a 8d       	ldd	r23, Y+26	; 0x1a
    66cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    66ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
    66d0:	20 e0       	ldi	r18, 0x00	; 0
    66d2:	30 e0       	ldi	r19, 0x00	; 0
    66d4:	40 e2       	ldi	r20, 0x20	; 32
    66d6:	51 e4       	ldi	r21, 0x41	; 65
    66d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    66dc:	dc 01       	movw	r26, r24
    66de:	cb 01       	movw	r24, r22
    66e0:	bc 01       	movw	r22, r24
    66e2:	cd 01       	movw	r24, r26
    66e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    66e8:	dc 01       	movw	r26, r24
    66ea:	cb 01       	movw	r24, r22
    66ec:	9c 8b       	std	Y+20, r25	; 0x14
    66ee:	8b 8b       	std	Y+19, r24	; 0x13
    66f0:	0f c0       	rjmp	.+30     	; 0x6710 <LED_voidInOut+0x8dc>
    66f2:	88 ec       	ldi	r24, 0xC8	; 200
    66f4:	90 e0       	ldi	r25, 0x00	; 0
    66f6:	9a 8b       	std	Y+18, r25	; 0x12
    66f8:	89 8b       	std	Y+17, r24	; 0x11
    66fa:	89 89       	ldd	r24, Y+17	; 0x11
    66fc:	9a 89       	ldd	r25, Y+18	; 0x12
    66fe:	01 97       	sbiw	r24, 0x01	; 1
    6700:	f1 f7       	brne	.-4      	; 0x66fe <LED_voidInOut+0x8ca>
    6702:	9a 8b       	std	Y+18, r25	; 0x12
    6704:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6706:	8b 89       	ldd	r24, Y+19	; 0x13
    6708:	9c 89       	ldd	r25, Y+20	; 0x14
    670a:	01 97       	sbiw	r24, 0x01	; 1
    670c:	9c 8b       	std	Y+20, r25	; 0x14
    670e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6710:	8b 89       	ldd	r24, Y+19	; 0x13
    6712:	9c 89       	ldd	r25, Y+20	; 0x14
    6714:	00 97       	sbiw	r24, 0x00	; 0
    6716:	69 f7       	brne	.-38     	; 0x66f2 <LED_voidInOut+0x8be>
    6718:	14 c0       	rjmp	.+40     	; 0x6742 <LED_voidInOut+0x90e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    671a:	6d 89       	ldd	r22, Y+21	; 0x15
    671c:	7e 89       	ldd	r23, Y+22	; 0x16
    671e:	8f 89       	ldd	r24, Y+23	; 0x17
    6720:	98 8d       	ldd	r25, Y+24	; 0x18
    6722:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6726:	dc 01       	movw	r26, r24
    6728:	cb 01       	movw	r24, r22
    672a:	9c 8b       	std	Y+20, r25	; 0x14
    672c:	8b 8b       	std	Y+19, r24	; 0x13
    672e:	8b 89       	ldd	r24, Y+19	; 0x13
    6730:	9c 89       	ldd	r25, Y+20	; 0x14
    6732:	98 8b       	std	Y+16, r25	; 0x10
    6734:	8f 87       	std	Y+15, r24	; 0x0f
    6736:	8f 85       	ldd	r24, Y+15	; 0x0f
    6738:	98 89       	ldd	r25, Y+16	; 0x10
    673a:	01 97       	sbiw	r24, 0x01	; 1
    673c:	f1 f7       	brne	.-4      	; 0x673a <LED_voidInOut+0x906>
    673e:	98 8b       	std	Y+16, r25	; 0x10
    6740:	8f 87       	std	Y+15, r24	; 0x0f

	DIO_voidSetPortValue(Copy_u8PortNum, 0X00);
    6742:	fe 01       	movw	r30, r28
    6744:	ef 58       	subi	r30, 0x8F	; 143
    6746:	ff 4f       	sbci	r31, 0xFF	; 255
    6748:	80 81       	ld	r24, Z
    674a:	60 e0       	ldi	r22, 0x00	; 0
    674c:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
	_delay_ms(Copy_u8Delayms);
    6750:	fe 01       	movw	r30, r28
    6752:	ee 58       	subi	r30, 0x8E	; 142
    6754:	ff 4f       	sbci	r31, 0xFF	; 255
    6756:	80 81       	ld	r24, Z
    6758:	88 2f       	mov	r24, r24
    675a:	90 e0       	ldi	r25, 0x00	; 0
    675c:	a0 e0       	ldi	r26, 0x00	; 0
    675e:	b0 e0       	ldi	r27, 0x00	; 0
    6760:	bc 01       	movw	r22, r24
    6762:	cd 01       	movw	r24, r26
    6764:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    6768:	dc 01       	movw	r26, r24
    676a:	cb 01       	movw	r24, r22
    676c:	8b 87       	std	Y+11, r24	; 0x0b
    676e:	9c 87       	std	Y+12, r25	; 0x0c
    6770:	ad 87       	std	Y+13, r26	; 0x0d
    6772:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6774:	6b 85       	ldd	r22, Y+11	; 0x0b
    6776:	7c 85       	ldd	r23, Y+12	; 0x0c
    6778:	8d 85       	ldd	r24, Y+13	; 0x0d
    677a:	9e 85       	ldd	r25, Y+14	; 0x0e
    677c:	20 e0       	ldi	r18, 0x00	; 0
    677e:	30 e0       	ldi	r19, 0x00	; 0
    6780:	4a ef       	ldi	r20, 0xFA	; 250
    6782:	54 e4       	ldi	r21, 0x44	; 68
    6784:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    6788:	dc 01       	movw	r26, r24
    678a:	cb 01       	movw	r24, r22
    678c:	8f 83       	std	Y+7, r24	; 0x07
    678e:	98 87       	std	Y+8, r25	; 0x08
    6790:	a9 87       	std	Y+9, r26	; 0x09
    6792:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6794:	6f 81       	ldd	r22, Y+7	; 0x07
    6796:	78 85       	ldd	r23, Y+8	; 0x08
    6798:	89 85       	ldd	r24, Y+9	; 0x09
    679a:	9a 85       	ldd	r25, Y+10	; 0x0a
    679c:	20 e0       	ldi	r18, 0x00	; 0
    679e:	30 e0       	ldi	r19, 0x00	; 0
    67a0:	40 e8       	ldi	r20, 0x80	; 128
    67a2:	5f e3       	ldi	r21, 0x3F	; 63
    67a4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    67a8:	88 23       	and	r24, r24
    67aa:	2c f4       	brge	.+10     	; 0x67b6 <LED_voidInOut+0x982>
		__ticks = 1;
    67ac:	81 e0       	ldi	r24, 0x01	; 1
    67ae:	90 e0       	ldi	r25, 0x00	; 0
    67b0:	9e 83       	std	Y+6, r25	; 0x06
    67b2:	8d 83       	std	Y+5, r24	; 0x05
    67b4:	3f c0       	rjmp	.+126    	; 0x6834 <LED_voidInOut+0xa00>
	else if (__tmp > 65535)
    67b6:	6f 81       	ldd	r22, Y+7	; 0x07
    67b8:	78 85       	ldd	r23, Y+8	; 0x08
    67ba:	89 85       	ldd	r24, Y+9	; 0x09
    67bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    67be:	20 e0       	ldi	r18, 0x00	; 0
    67c0:	3f ef       	ldi	r19, 0xFF	; 255
    67c2:	4f e7       	ldi	r20, 0x7F	; 127
    67c4:	57 e4       	ldi	r21, 0x47	; 71
    67c6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    67ca:	18 16       	cp	r1, r24
    67cc:	4c f5       	brge	.+82     	; 0x6820 <LED_voidInOut+0x9ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    67ce:	6b 85       	ldd	r22, Y+11	; 0x0b
    67d0:	7c 85       	ldd	r23, Y+12	; 0x0c
    67d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    67d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    67d6:	20 e0       	ldi	r18, 0x00	; 0
    67d8:	30 e0       	ldi	r19, 0x00	; 0
    67da:	40 e2       	ldi	r20, 0x20	; 32
    67dc:	51 e4       	ldi	r21, 0x41	; 65
    67de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    67e2:	dc 01       	movw	r26, r24
    67e4:	cb 01       	movw	r24, r22
    67e6:	bc 01       	movw	r22, r24
    67e8:	cd 01       	movw	r24, r26
    67ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    67ee:	dc 01       	movw	r26, r24
    67f0:	cb 01       	movw	r24, r22
    67f2:	9e 83       	std	Y+6, r25	; 0x06
    67f4:	8d 83       	std	Y+5, r24	; 0x05
    67f6:	0f c0       	rjmp	.+30     	; 0x6816 <LED_voidInOut+0x9e2>
    67f8:	88 ec       	ldi	r24, 0xC8	; 200
    67fa:	90 e0       	ldi	r25, 0x00	; 0
    67fc:	9c 83       	std	Y+4, r25	; 0x04
    67fe:	8b 83       	std	Y+3, r24	; 0x03
    6800:	8b 81       	ldd	r24, Y+3	; 0x03
    6802:	9c 81       	ldd	r25, Y+4	; 0x04
    6804:	01 97       	sbiw	r24, 0x01	; 1
    6806:	f1 f7       	brne	.-4      	; 0x6804 <LED_voidInOut+0x9d0>
    6808:	9c 83       	std	Y+4, r25	; 0x04
    680a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    680c:	8d 81       	ldd	r24, Y+5	; 0x05
    680e:	9e 81       	ldd	r25, Y+6	; 0x06
    6810:	01 97       	sbiw	r24, 0x01	; 1
    6812:	9e 83       	std	Y+6, r25	; 0x06
    6814:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6816:	8d 81       	ldd	r24, Y+5	; 0x05
    6818:	9e 81       	ldd	r25, Y+6	; 0x06
    681a:	00 97       	sbiw	r24, 0x00	; 0
    681c:	69 f7       	brne	.-38     	; 0x67f8 <LED_voidInOut+0x9c4>
    681e:	14 c0       	rjmp	.+40     	; 0x6848 <LED_voidInOut+0xa14>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6820:	6f 81       	ldd	r22, Y+7	; 0x07
    6822:	78 85       	ldd	r23, Y+8	; 0x08
    6824:	89 85       	ldd	r24, Y+9	; 0x09
    6826:	9a 85       	ldd	r25, Y+10	; 0x0a
    6828:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    682c:	dc 01       	movw	r26, r24
    682e:	cb 01       	movw	r24, r22
    6830:	9e 83       	std	Y+6, r25	; 0x06
    6832:	8d 83       	std	Y+5, r24	; 0x05
    6834:	8d 81       	ldd	r24, Y+5	; 0x05
    6836:	9e 81       	ldd	r25, Y+6	; 0x06
    6838:	9a 83       	std	Y+2, r25	; 0x02
    683a:	89 83       	std	Y+1, r24	; 0x01
    683c:	89 81       	ldd	r24, Y+1	; 0x01
    683e:	9a 81       	ldd	r25, Y+2	; 0x02
    6840:	01 97       	sbiw	r24, 0x01	; 1
    6842:	f1 f7       	brne	.-4      	; 0x6840 <LED_voidInOut+0xa0c>
    6844:	9a 83       	std	Y+2, r25	; 0x02
    6846:	89 83       	std	Y+1, r24	; 0x01

	DIO_voidSetPortValue(Copy_u8PortNum, DIO_u8LOW);
    6848:	fe 01       	movw	r30, r28
    684a:	ef 58       	subi	r30, 0x8F	; 143
    684c:	ff 4f       	sbci	r31, 0xFF	; 255
    684e:	80 81       	ld	r24, Z
    6850:	60 e0       	ldi	r22, 0x00	; 0
    6852:	0e 94 ba 09 	call	0x1374	; 0x1374 <DIO_voidSetPortValue>
}
    6856:	ce 58       	subi	r28, 0x8E	; 142
    6858:	df 4f       	sbci	r29, 0xFF	; 255
    685a:	0f b6       	in	r0, 0x3f	; 63
    685c:	f8 94       	cli
    685e:	de bf       	out	0x3e, r29	; 62
    6860:	0f be       	out	0x3f, r0	; 63
    6862:	cd bf       	out	0x3d, r28	; 61
    6864:	cf 91       	pop	r28
    6866:	df 91       	pop	r29
    6868:	1f 91       	pop	r17
    686a:	0f 91       	pop	r16
    686c:	08 95       	ret

0000686e <main>:

#include "DIO_interface.h"

#include "../HAL/LED/LED_interface.h"

int main(void){
    686e:	df 93       	push	r29
    6870:	cf 93       	push	r28
    6872:	00 d0       	rcall	.+0      	; 0x6874 <main+0x6>
    6874:	0f 92       	push	r0
    6876:	cd b7       	in	r28, 0x3d	; 61
    6878:	de b7       	in	r29, 0x3e	; 62
	while(1){

		for(uint8 i = 0 ; i<4 ; i++){
    687a:	1b 82       	std	Y+3, r1	; 0x03
    687c:	07 c0       	rjmp	.+14     	; 0x688c <main+0x1e>
			LED_voidShiftRightLeft (DIO_u8PORTB, 200);
    687e:	82 e0       	ldi	r24, 0x02	; 2
    6880:	68 ec       	ldi	r22, 0xC8	; 200
    6882:	0e 94 30 18 	call	0x3060	; 0x3060 <LED_voidShiftRightLeft>
#include "../HAL/LED/LED_interface.h"

int main(void){
	while(1){

		for(uint8 i = 0 ; i<4 ; i++){
    6886:	8b 81       	ldd	r24, Y+3	; 0x03
    6888:	8f 5f       	subi	r24, 0xFF	; 255
    688a:	8b 83       	std	Y+3, r24	; 0x03
    688c:	8b 81       	ldd	r24, Y+3	; 0x03
    688e:	84 30       	cpi	r24, 0x04	; 4
    6890:	b0 f3       	brcs	.-20     	; 0x687e <main+0x10>
			LED_voidShiftRightLeft (DIO_u8PORTB, 200);
		}

		for(uint8 i = 0 ; i<4 ; i++){
    6892:	1a 82       	std	Y+2, r1	; 0x02
    6894:	07 c0       	rjmp	.+14     	; 0x68a4 <main+0x36>
			LED_voidInOut (DIO_u8PORTB, 200);
    6896:	82 e0       	ldi	r24, 0x02	; 2
    6898:	68 ec       	ldi	r22, 0xC8	; 200
    689a:	0e 94 1a 2f 	call	0x5e34	; 0x5e34 <LED_voidInOut>

		for(uint8 i = 0 ; i<4 ; i++){
			LED_voidShiftRightLeft (DIO_u8PORTB, 200);
		}

		for(uint8 i = 0 ; i<4 ; i++){
    689e:	8a 81       	ldd	r24, Y+2	; 0x02
    68a0:	8f 5f       	subi	r24, 0xFF	; 255
    68a2:	8a 83       	std	Y+2, r24	; 0x02
    68a4:	8a 81       	ldd	r24, Y+2	; 0x02
    68a6:	84 30       	cpi	r24, 0x04	; 4
    68a8:	b0 f3       	brcs	.-20     	; 0x6896 <main+0x28>
			LED_voidInOut (DIO_u8PORTB, 200);
		}

		for(uint8 i = 0 ; i<8 ; i++){
    68aa:	19 82       	std	Y+1, r1	; 0x01
    68ac:	07 c0       	rjmp	.+14     	; 0x68bc <main+0x4e>
			LED_voidFlash (DIO_u8PORTB, 500);
    68ae:	82 e0       	ldi	r24, 0x02	; 2
    68b0:	64 ef       	ldi	r22, 0xF4	; 244
    68b2:	0e 94 07 2e 	call	0x5c0e	; 0x5c0e <LED_voidFlash>

		for(uint8 i = 0 ; i<4 ; i++){
			LED_voidInOut (DIO_u8PORTB, 200);
		}

		for(uint8 i = 0 ; i<8 ; i++){
    68b6:	89 81       	ldd	r24, Y+1	; 0x01
    68b8:	8f 5f       	subi	r24, 0xFF	; 255
    68ba:	89 83       	std	Y+1, r24	; 0x01
    68bc:	89 81       	ldd	r24, Y+1	; 0x01
    68be:	88 30       	cpi	r24, 0x08	; 8
    68c0:	b0 f3       	brcs	.-20     	; 0x68ae <main+0x40>
    68c2:	db cf       	rjmp	.-74     	; 0x687a <main+0xc>

000068c4 <__udivmodqi4>:
    68c4:	99 1b       	sub	r25, r25
    68c6:	79 e0       	ldi	r23, 0x09	; 9
    68c8:	04 c0       	rjmp	.+8      	; 0x68d2 <__udivmodqi4_ep>

000068ca <__udivmodqi4_loop>:
    68ca:	99 1f       	adc	r25, r25
    68cc:	96 17       	cp	r25, r22
    68ce:	08 f0       	brcs	.+2      	; 0x68d2 <__udivmodqi4_ep>
    68d0:	96 1b       	sub	r25, r22

000068d2 <__udivmodqi4_ep>:
    68d2:	88 1f       	adc	r24, r24
    68d4:	7a 95       	dec	r23
    68d6:	c9 f7       	brne	.-14     	; 0x68ca <__udivmodqi4_loop>
    68d8:	80 95       	com	r24
    68da:	08 95       	ret

000068dc <__prologue_saves__>:
    68dc:	2f 92       	push	r2
    68de:	3f 92       	push	r3
    68e0:	4f 92       	push	r4
    68e2:	5f 92       	push	r5
    68e4:	6f 92       	push	r6
    68e6:	7f 92       	push	r7
    68e8:	8f 92       	push	r8
    68ea:	9f 92       	push	r9
    68ec:	af 92       	push	r10
    68ee:	bf 92       	push	r11
    68f0:	cf 92       	push	r12
    68f2:	df 92       	push	r13
    68f4:	ef 92       	push	r14
    68f6:	ff 92       	push	r15
    68f8:	0f 93       	push	r16
    68fa:	1f 93       	push	r17
    68fc:	cf 93       	push	r28
    68fe:	df 93       	push	r29
    6900:	cd b7       	in	r28, 0x3d	; 61
    6902:	de b7       	in	r29, 0x3e	; 62
    6904:	ca 1b       	sub	r28, r26
    6906:	db 0b       	sbc	r29, r27
    6908:	0f b6       	in	r0, 0x3f	; 63
    690a:	f8 94       	cli
    690c:	de bf       	out	0x3e, r29	; 62
    690e:	0f be       	out	0x3f, r0	; 63
    6910:	cd bf       	out	0x3d, r28	; 61
    6912:	09 94       	ijmp

00006914 <__epilogue_restores__>:
    6914:	2a 88       	ldd	r2, Y+18	; 0x12
    6916:	39 88       	ldd	r3, Y+17	; 0x11
    6918:	48 88       	ldd	r4, Y+16	; 0x10
    691a:	5f 84       	ldd	r5, Y+15	; 0x0f
    691c:	6e 84       	ldd	r6, Y+14	; 0x0e
    691e:	7d 84       	ldd	r7, Y+13	; 0x0d
    6920:	8c 84       	ldd	r8, Y+12	; 0x0c
    6922:	9b 84       	ldd	r9, Y+11	; 0x0b
    6924:	aa 84       	ldd	r10, Y+10	; 0x0a
    6926:	b9 84       	ldd	r11, Y+9	; 0x09
    6928:	c8 84       	ldd	r12, Y+8	; 0x08
    692a:	df 80       	ldd	r13, Y+7	; 0x07
    692c:	ee 80       	ldd	r14, Y+6	; 0x06
    692e:	fd 80       	ldd	r15, Y+5	; 0x05
    6930:	0c 81       	ldd	r16, Y+4	; 0x04
    6932:	1b 81       	ldd	r17, Y+3	; 0x03
    6934:	aa 81       	ldd	r26, Y+2	; 0x02
    6936:	b9 81       	ldd	r27, Y+1	; 0x01
    6938:	ce 0f       	add	r28, r30
    693a:	d1 1d       	adc	r29, r1
    693c:	0f b6       	in	r0, 0x3f	; 63
    693e:	f8 94       	cli
    6940:	de bf       	out	0x3e, r29	; 62
    6942:	0f be       	out	0x3f, r0	; 63
    6944:	cd bf       	out	0x3d, r28	; 61
    6946:	ed 01       	movw	r28, r26
    6948:	08 95       	ret

0000694a <_exit>:
    694a:	f8 94       	cli

0000694c <__stop_program>:
    694c:	ff cf       	rjmp	.-2      	; 0x694c <__stop_program>
